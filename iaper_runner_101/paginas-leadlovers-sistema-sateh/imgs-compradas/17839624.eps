%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 88.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Tanya
%%CreationDate: 4/20/2017
%%BoundingBox: 0 0 600 600
%%HiResBoundingBox: 0 0 600 600
%%CropBox: 0 0 600 600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.0 x111 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">88</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-04-20T10:52:32+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-04-20T10:52:32+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-04-20T10:52:32+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgECvAK8AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABACvAAAAAEA&#xA;AQK8AAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8APs6l88dirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c67834dd-2e1c-1245-a1f3-109ad9e9ae1b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c67834dd-2e1c-1245-a1f3-109ad9e9ae1b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:319e5aa5-15b2-468a-bf3c-37a9b16bd41a</stRef:instanceID>
            <stRef:documentID>xmp.did:52e586b6-2dc9-7347-8687-3e437a4497cc</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c532abae-39b0-d947-b53c-5525e0b6afe3</stEvt:instanceID>
                  <stEvt:when>2017-04-06T10:46:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c67834dd-2e1c-1245-a1f3-109ad9e9ae1b</stEvt:instanceID>
                  <stEvt:when>2017-04-20T10:52:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
600 600 li
600 0 li
cp
clp
600 600 mo
0 600 li
0 0 li
600 0 li
600 600 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.266667 .705882 .839216 rgb
f
243.809 122.338 mo
228.61 98.6501 li
231.606 96.7273 li
247.535 121.552 li
243.809 122.338 li
.211765 .564706 .670588 rgb
f
275.099 171.102 mo
200.299 219.097 li
152.303 144.298 li
227.103 96.3021 li
275.099 171.102 li
.839216 .466667 .0117647 rgb
f
215.183 103.951 mo
208.166 93.015 li
211.163 91.0921 li
218.18 102.028 li
215.183 103.951 li
.211765 .564706 .670588 rgb
f
228.987 125.464 mo
215.183 103.951 li
218.18 102.028 li
232.713 124.678 li
228.987 125.464 li
.670588 .372549 .00784314 rgb
f
254.655 165.467 mo
179.855 213.462 li
131.86 138.663 li
206.659 90.6669 li
254.655 165.467 li
.890196 .537255 .184314 rgb
f
489.566 486.74 mo
488.994 486.74 488.418 486.629 487.869 486.399 cv
488.15 486.156 488.403 485.872 488.619 485.549 cv
488.677 485.467 488.732 485.382 488.784 485.294 cv
491.558 480.65 li
499.575 467.233 li
502.074 463.044 li
503.067 461.388 li
517.189 437.736 li
522.067 429.568 li
522.174 429.403 li
524.624 425.294 li
525.832 423.277 525.171 420.654 523.153 419.446 cv
518.836 416.864 li
490.452 399.911 li
495.039 399.317 li
527.554 418.737 li
529.643 419.985 530.326 422.69 529.078 424.779 cv
493.353 484.593 li
492.528 485.974 491.066 486.74 489.566 486.74 cv
.211765 .564706 .670588 rgb
f
482.845 486.792 mo
385.947 428.917 li
383.893 427.69 383.222 425.031 384.449 422.978 cv
420.251 363.035 li
421.478 360.981 424.137 360.311 426.19 361.538 cv
523.089 419.412 li
525.142 420.639 525.813 423.298 524.586 425.351 cv
488.784 485.294 li
487.557 487.348 484.898 488.018 482.845 486.792 cv
.960784 .796078 .352941 rgb
f
430.362 403.811 mo
419.499 397.323 li
418.027 396.444 417.547 394.538 418.426 393.066 cv
423.094 385.251 li
423.973 383.779 425.879 383.298 427.351 384.177 cv
438.214 390.665 li
439.686 391.544 440.166 393.45 439.287 394.922 cv
434.619 402.738 li
433.74 404.21 431.834 404.69 430.362 403.811 cv
1 1 1 rgb
f
524.624 425.294 mo
522.174 429.403 li
522.046 429.601 li
503.067 461.388 li
502.074 463.044 li
499.575 467.233 li
491.325 481.04 li
488.747 485.347 li
487.544 487.379 484.927 488.03 482.905 486.833 cv
464.898 476.079 li
437.485 459.695 li
427.19 453.548 li
427.098 453.021 427.02 452.488 426.953 451.96 cv
426.879 451.39 426.806 450.821 426.748 450.246 cv
426.723 450.018 li
426.683 449.515 426.639 449.022 426.603 448.509 cv
426.566 447.943 426.539 447.356 426.517 446.785 cv
426.468 445.627 426.471 444.467 426.525 443.305 cv
426.55 442.716 426.585 442.132 426.62 441.548 cv
426.665 440.969 426.711 440.39 426.772 439.805 cv
426.833 439.22 426.904 438.64 426.991 438.054 cv
427.645 433.347 428.98 428.656 431.044 424.104 cv
432.176 421.606 433.491 419.241 434.952 417.032 cv
435.335 416.44 435.739 415.858 436.15 415.29 cv
436.56 414.724 436.98 414.161 437.422 413.609 cv
437.794 413.126 438.187 412.654 438.58 412.181 cv
438.998 411.681 439.437 411.191 439.882 410.717 cv
440.026 410.539 440.176 410.378 440.337 410.221 cv
440.766 409.752 441.217 409.293 441.678 408.838 cv
442.135 408.394 442.591 407.95 443.069 407.516 cv
443.571 407.055 444.095 406.603 444.614 406.162 cv
445.068 405.78 445.532 405.404 446.002 405.043 cv
446.204 404.879 li
446.209 404.868 li
449.63 402.221 453.359 400.019 457.305 398.324 cv
459.731 397.279 462.237 396.425 464.797 395.76 cv
466.085 395.425 467.375 395.142 468.672 394.926 cv
469.318 394.798 469.975 394.7 470.627 394.613 cv
471.294 394.52 471.952 394.448 472.61 394.376 cv
475.372 394.11 478.153 394.056 480.954 394.241 cv
480.964 394.245 li
518.836 416.864 li
523.153 419.446 li
525.171 420.654 525.832 423.277 524.624 425.294 cv
.882353 .647059 0 rgb
f
499.647 456.828 mo
499.105 456.953 499.448 458.167 499.599 459.129 cv
499.739 460.086 499.311 461.398 499.908 462.051 cv
500.515 462.71 501.667 462.364 502.067 463.03 cv
502.073 463.046 li
499.574 467.235 li
499.194 467.369 498.87 467.464 498.673 467.477 cv
497.781 467.558 495.442 468.552 494.787 467.885 cv
494.143 467.223 492.848 467.376 492.638 466.911 cv
492.428 466.445 493.005 464.805 492.806 463.388 cv
492.602 461.981 491.933 458.895 491.979 458.457 cv
492.024 458.018 491.694 455.482 492.068 454.656 cv
492.447 453.82 495.103 450.748 494.398 449.854 cv
493.698 448.95 491.477 448.951 490.825 447.967 cv
490.153 446.973 489.644 444.266 489.096 444.069 cv
488.547 443.871 487.774 446.533 487.099 446.277 cv
486.413 446.017 486.245 442.559 486.14 441.721 cv
486.051 440.876 484.993 438.086 484.411 437.848 cv
483.83 437.611 482.993 438.022 483.376 438.247 cv
483.759 438.471 483.73 439.352 483.911 440.021 cv
484.072 440.681 485.122 441.884 485.032 442.533 cv
484.952 443.186 484.513 443.676 484.06 443.521 cv
483.602 443.378 483.091 443.35 482.834 443.553 cv
482.592 443.749 481.376 444.206 481.351 443.671 cv
481.33 443.126 482.355 442.863 482.695 442.226 cv
483.04 441.578 482.322 439.671 482.05 439.228 cv
481.768 438.781 481.034 437.134 480.67 437.122 cv
480.305 437.11 478.065 436.477 477.47 436.833 cv
476.881 437.204 474.91 438.314 474.067 438.991 cv
473.224 439.668 471.616 440.203 470.9 439.559 cv
470.189 438.93 469.538 438.367 469.178 437.783 cv
468.807 437.194 468.982 434.95 469.638 434.29 cv
470.305 433.636 471.88 433.456 472.581 433.991 cv
473.299 434.521 474.408 434.973 474.893 434.72 cv
475.377 434.468 475.453 433.596 475.216 432.965 cv
474.984 432.324 473.999 431.456 474.115 431.088 cv
474.22 430.714 475.306 430.683 475.783 430.899 cv
476.259 431.115 476.847 431.114 477.538 431.108 cv
478.23 431.103 478.783 431.149 479.439 430.745 cv
480.095 430.366 481.169 429.742 481.984 429.691 cv
482.799 429.639 483.847 430.114 484.14 429.609 cv
484.422 429.099 484.816 428.23 485.017 427.786 cv
485.214 427.352 485.941 426.788 486.276 427.093 cv
486.61 427.397 486.838 428.19 486.66 428.582 cv
486.478 428.984 485.897 429.448 486.136 429.99 cv
486.369 430.517 486.719 430.676 487.601 431.292 cv
488.487 431.899 490.4 431.873 491.243 431.872 cv
492.087 431.897 492.746 430.077 493.445 430.394 cv
494.154 430.715 494.832 431.189 495.255 430.96 cv
495.683 430.72 496.492 430.091 497.126 430.212 cv
497.755 430.344 498.498 430.311 498.467 429.927 cv
498.437 429.543 497.702 428.942 496.891 429.098 cv
496.075 429.264 495.103 429.41 494.874 428.873 cv
494.641 428.346 493.852 427.299 494.28 426.919 cv
494.723 426.532 495.547 425.643 496.017 425.536 cv
496.486 425.43 498.466 425.37 498.144 424.701 cv
497.811 424.027 497.412 423.527 497.089 423.649 cv
496.771 423.76 494.546 424.333 494.19 424.555 cv
493.833 424.751 492.181 425.495 492.207 426.03 cv
492.222 426.56 492.145 427.686 491.605 428.399 cv
491.065 429.111 489.176 429.62 488.782 429.812 cv
488.389 430.004 487.303 429.894 487.134 429.281 cv
486.965 428.669 487.7 427.216 487.549 426.509 cv
487.397 425.802 487.19 425.555 486.199 425.629 cv
485.219 425.708 484.462 427.011 484.265 426.067 cv
484.052 425.128 484.461 423.156 484.461 423.156 cv
484.461 423.156 484.909 420.705 487.838 421.535 cv
490.762 422.376 490.357 421.694 491.415 420.515 cv
492.468 419.346 492.562 418.406 493.304 418.232 cv
494.037 418.079 494.852 418.449 496.278 418.598 cv
497.693 418.741 500.278 417.769 501.517 418.331 cv
502.755 418.892 503.009 420.5 504.48 421.984 cv
505.957 423.483 508.506 425.124 508.194 425.812 cv
507.882 426.5 506.674 428.096 505.83 427.395 cv
504.997 426.672 504.263 425.025 503.814 425.651 cv
503.364 426.277 503.945 427.753 504.213 428.091 cv
504.481 428.429 506.168 428.76 506.918 428.628 cv
507.667 428.495 508.341 427.601 509.096 428.046 cv
509.846 428.475 510.759 427.306 511.044 427.014 cv
511.329 426.723 511.747 426.759 511.755 426.967 cv
511.758 427.185 511.264 428.275 511.666 428.458 cv
512.058 428.635 513.279 427.658 513.847 427.813 cv
514.415 427.968 515.825 428.123 516.664 428.72 cv
517.509 429.307 518.968 429.917 519.575 429.873 cv
520.171 429.825 519.755 428.322 520.251 428.381 cv
520.539 428.422 521.342 429.016 522.046 429.603 cv
503.066 461.39 li
502.579 461.029 502.123 460.656 501.944 460.346 cv
501.538 459.638 500.177 456.699 499.647 456.828 cv
cp
.780392 .572549 0 rgb
f
435.667 416.721 mo
436.451 416.677 436.552 416.691 437.07 416.381 cv
437.592 416.076 437.327 415.468 437.942 415.305 cv
438.226 415.234 438.569 415.236 438.882 415.238 cv
439.247 415.24 439.571 415.243 439.71 415.129 cv
439.968 414.921 439.807 414.192 440.248 413.943 cv
440.688 413.695 441.824 414.672 443.532 415.114 cv
445.232 415.565 445.732 415.298 446.833 415.148 cv
447.935 414.991 447.344 413.417 446.895 412.49 cv
446.448 411.559 445.631 410.35 445.108 409.463 cv
444.588 408.575 445.949 405.816 445.949 405.816 cv
445.949 405.816 446.129 405.325 446.211 404.877 cv
441.894 408.23 438.069 412.307 434.956 417.034 cv
435.177 416.878 435.402 416.744 435.667 416.721 cv
f
457.308 398.329 mo
457.17 398.783 457.167 399.199 457.167 399.199 cv
457.167 399.199 456.905 401.094 456.185 401.365 cv
455.459 401.638 454.681 402.043 453.986 401.896 cv
453.292 401.743 452.473 402.351 453.087 403.878 cv
453.699 405.407 453.516 406.053 454.015 407.825 cv
454.523 409.593 454.493 410.505 455.521 410.755 cv
456.553 411.005 457.641 410.52 457.929 409.885 cv
458.215 409.254 459.609 407.14 460.813 407.015 cv
462.01 406.887 463.577 407.274 464.225 407.517 cv
464.566 407.641 465.096 407.281 465.695 406.922 cv
466.251 406.587 466.867 406.253 467.446 406.307 cv
468.649 406.418 469.293 407.637 470.251 407.796 cv
471.211 407.962 472.604 407.178 473.367 406.218 cv
474.126 405.253 475.112 404.286 476.287 403.73 cv
477.464 403.174 479.304 402.479 479.169 401.335 cv
479.037 400.185 478.518 399.407 478.692 398.558 cv
478.856 397.707 479.031 396.969 477.92 396.523 cv
476.816 396.073 475.165 396.364 474.226 395.666 cv
473.486 395.111 473.188 394.928 472.612 394.379 cv
467.321 394.898 462.155 396.234 457.308 398.329 cv
f
439.562 458.942 mo
438.987 459 438.312 458.911 437.802 459.446 cv
437.707 459.543 437.606 459.625 437.484 459.697 cv
427.19 453.55 li
427.097 453.023 427.019 452.49 426.952 451.962 cv
426.879 451.392 426.805 450.823 426.747 450.248 cv
426.723 450.02 li
426.683 449.517 426.638 449.024 426.603 448.511 cv
426.566 447.945 426.538 447.358 426.516 446.787 cv
426.482 445.623 426.485 444.463 426.524 443.306 cv
426.549 442.718 426.584 442.134 426.619 441.55 cv
426.665 440.971 426.71 440.392 426.771 439.807 cv
426.832 439.222 426.904 438.642 426.991 438.056 cv
427.145 438.279 li
427.733 439.26 428.441 440.232 428.987 440.211 cv
429.558 440.19 430.351 440.102 430.539 440.418 cv
430.723 440.718 431.172 442.006 431.646 442.987 cv
432.142 443.977 433.913 444.602 434.225 445.126 cv
434.521 445.655 434.841 447.115 434.674 447.626 cv
434.49 448.143 434.301 449.04 435.132 449.965 cv
435.968 450.88 437.178 451.927 437.911 452.476 cv
438.645 453.026 440.137 453.817 440.393 454.801 cv
440.659 455.789 441.665 455.964 441.394 457.041 cv
441.122 458.118 440.131 458.868 439.562 458.942 cv
f
493.715 471.572 mo
493.351 472.122 485.57 475.294 484.915 475.839 cv
484.264 476.374 483.256 477.895 482.991 478.732 cv
482.726 479.569 482.768 481.081 482.106 481.866 cv
481.46 482.645 478.779 482.872 478.162 483.192 cv
477.947 483.299 477.809 483.491 477.703 483.724 cv
464.897 476.081 li
464.877 475.842 464.894 475.607 464.938 475.398 cv
465.246 474.044 467.874 473.257 468.33 472.392 cv
468.791 471.516 468.173 471.951 468.897 470.186 cv
469.62 468.421 467.516 466.025 467.919 465.135 cv
468.322 464.246 469.835 463.668 469.951 462.764 cv
470.057 461.855 468.014 461.886 467.536 461.082 cv
467.068 460.257 467.408 459.76 466.61 459.156 cv
465.807 458.563 463.963 459.335 462.953 459.17 cv
461.949 459.021 459.753 457.784 459.027 456.74 cv
458.652 456.187 457.469 453.927 457.43 451.281 cv
457.403 448.921 458.488 446.133 458.825 445.698 cv
459.555 444.766 462.036 442.84 463.581 442.584 cv
465.148 442.337 466.173 441.117 466.958 440.822 cv
467.758 440.521 468.382 439.426 469.372 439.466 cv
470.377 439.501 471.097 441.741 471.648 441.991 cv
472.187 442.236 473.496 441.208 474.103 441.304 cv
474.72 441.406 474.997 441.837 475.653 442.135 cv
476.299 442.428 478.342 442.397 478.878 442.933 cv
479.408 443.48 478.18 445.373 478.634 445.975 cv
479.078 446.572 480.27 446.984 480.763 447.501 cv
481.256 448.019 481.08 449.56 481.97 449.963 cv
482.869 450.371 484.15 448.195 485.178 448.967 cv
486.211 449.729 487.284 451.836 487.94 452.248 cv
488.585 452.656 491.155 452.813 491.211 453.731 cv
491.277 454.655 489.927 455.663 490.001 457.075 cv
490.076 458.487 489.973 463.584 490.302 464.997 cv
490.626 466.394 491.011 468.304 491.704 468.746 cv
492.412 469.182 495.14 469.104 495.307 469.779 cv
495.483 470.459 494.095 471.017 493.715 471.572 cv
cp
f
411.395 413.6 mo
410.363 412.983 li
409.857 412.682 409.693 412.028 409.994 411.522 cv
411.51 408.984 li
411.812 408.479 412.466 408.314 412.971 408.616 cv
414.003 409.232 li
414.508 409.534 414.673 410.188 414.371 410.694 cv
412.856 413.231 li
412.554 413.736 411.9 413.901 411.395 413.6 cv
1 1 1 rgb
f
415.152 415.844 mo
414.12 415.228 li
413.615 414.926 413.45 414.272 413.752 413.767 cv
415.268 411.229 li
415.57 410.724 416.224 410.559 416.729 410.861 cv
417.761 411.477 li
418.266 411.778 418.431 412.433 418.129 412.938 cv
416.613 415.476 li
416.312 415.981 415.658 416.146 415.152 415.844 cv
f
418.91 418.089 mo
417.878 417.472 li
417.373 417.17 417.208 416.516 417.51 416.011 cv
419.026 413.473 li
419.328 412.968 419.982 412.803 420.487 413.105 cv
421.519 413.721 li
422.024 414.023 422.189 414.677 421.887 415.182 cv
420.371 417.72 li
420.07 418.225 419.415 418.39 418.91 418.089 cv
f
422.668 420.333 mo
421.636 419.717 li
421.131 419.415 420.966 418.761 421.268 418.256 cv
422.784 415.718 li
423.085 415.213 423.739 415.048 424.244 415.349 cv
425.276 415.966 li
425.782 416.267 425.947 416.922 425.645 417.427 cv
424.129 419.965 li
423.827 420.47 423.173 420.635 422.668 420.333 cv
f
430.766 425.17 mo
429.734 424.553 li
429.229 424.251 429.064 423.597 429.365 423.092 cv
430.881 420.554 li
431.183 420.049 431.837 419.884 432.342 420.186 cv
433.374 420.802 li
433.879 421.104 434.044 421.758 433.743 422.263 cv
432.227 424.801 li
431.925 425.306 431.271 425.471 430.766 425.17 cv
f
434.524 427.414 mo
433.492 426.798 li
432.986 426.496 432.822 425.842 433.123 425.337 cv
434.639 422.799 li
434.941 422.294 435.595 422.129 436.1 422.43 cv
437.132 423.047 li
437.637 423.349 437.802 424.003 437.5 424.508 cv
435.984 427.046 li
435.683 427.551 435.029 427.716 434.524 427.414 cv
f
438.281 429.658 mo
437.249 429.042 li
436.744 428.74 436.579 428.086 436.881 427.581 cv
438.397 425.043 li
438.699 424.538 439.353 424.373 439.858 424.675 cv
440.89 425.291 li
441.395 425.593 441.56 426.247 441.258 426.752 cv
439.742 429.29 li
439.441 429.795 438.787 429.96 438.281 429.658 cv
cp
f
442.039 431.903 mo
441.007 431.286 li
440.502 430.985 440.337 430.331 440.639 429.826 cv
442.155 427.288 li
442.456 426.783 443.11 426.618 443.616 426.919 cv
444.648 427.535 li
445.153 427.837 445.318 428.491 445.016 428.996 cv
443.5 431.534 li
443.198 432.04 442.544 432.205 442.039 431.903 cv
cp
f
450.137 436.739 mo
449.105 436.123 li
448.6 435.821 448.435 435.167 448.737 434.662 cv
450.253 432.124 li
450.554 431.619 451.208 431.454 451.714 431.756 cv
452.746 432.372 li
453.251 432.674 453.416 433.328 453.114 433.833 cv
451.598 436.371 li
451.296 436.876 450.642 437.041 450.137 436.739 cv
cp
f
453.895 438.984 mo
452.863 438.367 li
452.358 438.066 452.193 437.412 452.495 436.907 cv
454.01 434.369 li
454.312 433.863 454.966 433.699 455.471 434 cv
456.503 434.617 li
457.009 434.918 457.173 435.573 456.872 436.078 cv
455.356 438.615 li
455.054 439.121 454.4 439.286 453.895 438.984 cv
cp
f
457.653 441.228 mo
456.621 440.612 li
456.116 440.31 455.951 439.656 456.252 439.151 cv
457.768 436.613 li
458.07 436.108 458.724 435.943 459.229 436.245 cv
460.261 436.861 li
460.766 437.163 460.931 437.817 460.629 438.322 cv
459.114 440.86 li
458.812 441.365 458.158 441.53 457.653 441.228 cv
cp
f
461.41 443.473 mo
460.378 442.856 li
459.873 442.555 459.708 441.901 460.01 441.395 cv
461.526 438.857 li
461.828 438.352 462.482 438.187 462.987 438.489 cv
464.019 439.105 li
464.524 439.407 464.689 440.061 464.387 440.566 cv
462.871 443.104 li
462.57 443.609 461.916 443.774 461.41 443.473 cv
cp
f
469.508 448.309 mo
468.476 447.693 li
467.971 447.391 467.806 446.737 468.108 446.232 cv
469.624 443.694 li
469.925 443.189 470.58 443.024 471.085 443.326 cv
472.117 443.942 li
472.622 444.244 472.787 444.898 472.485 445.403 cv
470.969 447.941 li
470.668 448.446 470.013 448.611 469.508 448.309 cv
cp
f
473.266 450.554 mo
472.234 449.937 li
471.729 449.636 471.564 448.982 471.866 448.476 cv
473.382 445.938 li
473.683 445.433 474.337 445.268 474.842 445.57 cv
475.874 446.186 li
476.38 446.488 476.545 447.142 476.243 447.647 cv
474.727 450.185 li
474.425 450.691 473.771 450.855 473.266 450.554 cv
cp
f
477.024 452.798 mo
475.992 452.182 li
475.487 451.88 475.322 451.226 475.624 450.721 cv
477.139 448.183 li
477.441 447.678 478.095 447.513 478.6 447.815 cv
479.632 448.431 li
480.137 448.733 480.302 449.387 480.001 449.892 cv
478.485 452.43 li
478.183 452.935 477.529 453.1 477.024 452.798 cv
cp
f
480.782 455.043 mo
479.75 454.426 li
479.245 454.124 479.08 453.47 479.381 452.965 cv
480.897 450.427 li
481.199 449.922 481.853 449.757 482.358 450.059 cv
483.39 450.675 li
483.895 450.977 484.06 451.631 483.758 452.136 cv
482.243 454.674 li
481.941 455.179 481.287 455.344 480.782 455.043 cv
cp
f
511.133 429.465 mo
479.713 410.698 li
479.195 410.389 479.027 409.72 479.335 409.202 cv
481.948 404.828 li
482.257 404.31 482.927 404.141 483.444 404.45 cv
514.865 423.217 li
515.383 423.526 515.552 424.196 515.243 424.713 cv
512.629 429.088 li
512.32 429.605 511.651 429.774 511.133 429.465 cv
cp
f
526.548 391.653 mo
526.907 390.682 527.042 389.614 526.9 388.516 cv
513.055 281.731 li
512.623 278.397 509.779 275.966 506.504 275.966 cv
506.221 275.966 505.934 275.984 505.645 276.022 cv
496.609 277.193 li
496.605 277.194 496.6 277.194 496.596 277.195 cv
461.844 281.7 li
462.489 278.505 li
508.645 272.522 li
508.934 272.484 509.221 272.466 509.504 272.466 cv
512.779 272.466 515.623 274.897 516.055 278.231 cv
521.401 319.464 li
523.167 319.763 524.617 321.165 524.859 323.031 cv
526.855 338.425 li
527.097 340.291 526.052 342.017 524.421 342.756 cv
529.9 385.016 li
530.259 387.785 528.85 390.376 526.548 391.653 cv
.211765 .564706 .670588 rgb
f
521.19 395.926 mo
408.464 410.541 li
404.841 411.01 401.524 408.454 401.054 404.831 cv
387.21 298.046 li
386.74 294.423 389.296 291.106 392.919 290.636 cv
505.645 276.022 li
509.268 275.552 512.586 278.108 513.055 281.731 cv
526.9 388.516 li
527.369 392.139 524.813 395.457 521.19 395.926 cv
.760784 .439216 .0980392 rgb
f
410.009 407.316 mo
406.825 407.728 403.867 405.226 403.414 401.737 cv
390.281 300.436 li
389.829 296.947 392.051 293.774 395.235 293.361 cv
504.101 279.247 li
507.285 278.834 510.243 281.336 510.695 284.825 cv
523.829 386.126 li
524.281 389.615 522.058 392.789 518.874 393.202 cv
410.009 407.316 li
.619608 .27451 .0352941 rgb
f
512.141 397.099 mo
399.414 411.714 li
395.792 412.184 392.474 409.628 392.004 406.005 cv
378.16 299.219 li
377.69 295.596 380.247 292.279 383.869 291.809 cv
496.596 277.195 li
500.218 276.725 503.536 279.281 504.006 282.904 cv
517.85 389.69 li
518.32 393.312 515.763 396.63 512.141 397.099 cv
.827451 .364706 .0509804 rgb
f
507.1 392.711 mo
502.613 393.293 li
502.194 393.347 501.913 393.761 501.972 394.216 cv
502.031 394.67 502.408 394.999 502.827 394.945 cv
507.314 394.363 li
507.726 394.31 508.014 393.894 507.955 393.44 cv
507.896 392.986 507.512 392.657 507.1 392.711 cv
499.621 393.681 mo
495.133 394.262 li
494.714 394.317 494.433 394.731 494.492 395.185 cv
494.551 395.64 494.928 395.969 495.347 395.915 cv
499.835 395.333 li
500.246 395.28 500.535 394.864 500.476 394.41 cv
500.417 393.955 500.032 393.627 499.621 393.681 cv
492.141 394.65 mo
487.654 395.232 li
487.235 395.286 486.954 395.701 487.013 396.155 cv
487.072 396.61 487.449 396.939 487.868 396.885 cv
492.355 396.303 li
492.767 396.249 493.055 395.834 492.996 395.379 cv
492.937 394.925 492.553 394.597 492.141 394.65 cv
484.662 395.62 mo
480.174 396.202 li
479.755 396.256 479.474 396.67 479.533 397.125 cv
479.592 397.579 479.97 397.908 480.388 397.854 cv
484.876 397.272 li
485.288 397.219 485.576 396.804 485.517 396.349 cv
485.458 395.895 485.073 395.566 484.662 395.62 cv
477.182 396.59 mo
472.695 397.171 li
472.276 397.226 471.995 397.64 472.054 398.095 cv
472.113 398.549 472.49 398.878 472.909 398.824 cv
477.397 398.242 li
477.808 398.189 478.096 397.773 478.038 397.319 cv
477.978 396.864 477.594 396.536 477.182 396.59 cv
469.703 397.559 mo
465.215 398.141 li
464.796 398.195 464.516 398.61 464.574 399.064 cv
464.633 399.519 465.011 399.848 465.429 399.794 cv
469.917 399.212 li
470.329 399.158 470.617 398.743 470.558 398.288 cv
470.499 397.834 470.114 397.506 469.703 397.559 cv
462.223 398.529 mo
457.736 399.111 li
457.317 399.165 457.036 399.579 457.095 400.034 cv
457.154 400.488 457.531 400.817 457.95 400.763 cv
462.438 400.181 li
462.849 400.128 463.137 399.713 463.079 399.258 cv
463.02 398.804 462.635 398.475 462.223 398.529 cv
454.744 399.499 mo
450.256 400.08 li
449.837 400.135 449.556 400.549 449.615 401.004 cv
449.674 401.458 450.052 401.787 450.471 401.733 cv
454.958 401.151 li
455.37 401.098 455.658 400.682 455.599 400.228 cv
455.54 399.773 455.155 399.445 454.744 399.499 cv
447.264 400.468 mo
442.777 401.05 li
442.358 401.104 442.077 401.519 442.136 401.973 cv
442.195 402.428 442.572 402.757 442.991 402.703 cv
447.479 402.121 li
447.89 402.067 448.178 401.652 448.12 401.197 cv
448.061 400.743 447.676 400.415 447.264 400.468 cv
439.785 401.438 mo
435.297 402.02 li
434.879 402.074 434.598 402.488 434.657 402.943 cv
434.715 403.397 435.093 403.726 435.512 403.672 cv
439.999 403.09 li
440.411 403.037 440.699 402.622 440.64 402.167 cv
440.581 401.713 440.196 401.385 439.785 401.438 cv
432.306 402.408 mo
427.818 402.989 li
427.399 403.044 427.118 403.458 427.177 403.913 cv
427.236 404.367 427.613 404.696 428.032 404.642 cv
432.52 404.06 li
432.931 404.007 433.22 403.591 433.161 403.137 cv
433.102 402.682 432.717 402.354 432.306 402.408 cv
424.826 403.377 mo
420.339 403.959 li
419.92 404.013 419.639 404.428 419.698 404.882 cv
419.757 405.337 420.134 405.666 420.553 405.612 cv
425.04 405.03 li
425.452 404.976 425.74 404.561 425.681 404.107 cv
425.622 403.652 425.237 403.324 424.826 403.377 cv
417.347 404.347 mo
412.859 404.929 li
412.44 404.983 412.159 405.397 412.218 405.852 cv
412.277 406.306 412.654 406.635 413.073 406.581 cv
417.561 405.999 li
417.972 405.946 418.261 405.531 418.202 405.076 cv
418.143 404.622 417.758 404.294 417.347 404.347 cv
409.867 405.317 mo
405.38 405.898 li
404.961 405.953 404.68 406.367 404.739 406.822 cv
404.798 407.276 405.175 407.605 405.594 407.551 cv
410.082 406.969 li
410.493 406.916 410.781 406.5 410.722 406.046 cv
410.663 405.592 410.278 405.263 409.867 405.317 cv
402.388 406.286 mo
397.9 406.868 li
397.481 406.922 397.2 407.337 397.259 407.791 cv
397.318 408.246 397.695 408.575 398.114 408.521 cv
402.602 407.939 li
403.013 407.885 403.302 407.47 403.243 407.015 cv
403.184 406.561 402.799 406.233 402.388 406.286 cv
396.217 407.086 mo
395.133 407.227 394.037 406.991 393.081 406.418 cv
393.153 406.971 li
393.218 407.475 393.342 407.963 393.529 408.409 cv
394.463 408.75 395.452 408.866 396.431 408.739 cv
396.843 408.685 397.131 408.27 397.072 407.816 cv
397.013 407.361 396.629 407.033 396.217 407.086 cv
513.456 388.644 mo
513.067 388.459 512.629 388.659 512.471 389.083 cv
511.97 390.441 511.021 391.514 509.813 392.107 cv
509.434 392.291 509.269 392.782 509.446 393.205 cv
509.597 393.547 509.917 393.732 510.239 393.69 cv
510.451 393.629 li
512.011 392.872 513.224 391.488 513.872 389.741 cv
514.03 389.317 513.845 388.829 513.456 388.644 cv
512.817 380.376 mo
512.398 380.43 512.117 380.845 512.176 381.299 cv
512.816 386.232 li
512.861 386.697 513.238 387.026 513.652 386.989 cv
513.674 386.986 li
514.078 386.934 514.361 386.536 514.31 386.08 cv
513.672 381.105 li
513.613 380.651 513.229 380.323 512.817 380.376 cv
511.746 372.114 mo
511.327 372.168 511.046 372.582 511.105 373.037 cv
511.748 377.994 li
511.807 378.449 512.184 378.778 512.603 378.724 cv
513.014 378.67 513.303 378.255 513.244 377.8 cv
512.601 372.843 li
512.542 372.389 512.157 372.06 511.746 372.114 cv
510.675 363.852 mo
510.256 363.906 509.975 364.32 510.034 364.775 cv
510.677 369.732 li
510.736 370.187 511.113 370.516 511.532 370.461 cv
511.943 370.408 512.232 369.992 512.173 369.538 cv
511.53 364.581 li
511.471 364.126 511.086 363.798 510.675 363.852 cv
509.604 355.589 mo
509.185 355.644 508.904 356.058 508.963 356.512 cv
509.606 361.47 li
509.665 361.924 510.042 362.253 510.461 362.199 cv
510.872 362.146 511.16 361.73 511.102 361.276 cv
510.459 356.318 li
510.4 355.864 510.015 355.536 509.604 355.589 cv
508.533 347.327 mo
508.114 347.381 507.833 347.796 507.892 348.25 cv
508.534 353.208 li
508.593 353.662 508.971 353.991 509.39 353.937 cv
509.801 353.883 510.089 353.468 510.03 353.014 cv
509.388 348.056 li
509.329 347.602 508.944 347.274 508.533 347.327 cv
507.462 339.065 mo
507.043 339.119 506.762 339.533 506.821 339.988 cv
507.463 344.945 li
507.522 345.4 507.9 345.729 508.318 345.674 cv
508.73 345.621 509.018 345.206 508.959 344.751 cv
508.317 339.794 li
508.258 339.34 507.873 339.011 507.462 339.065 cv
506.39 330.802 mo
505.971 330.857 505.69 331.271 505.749 331.726 cv
506.392 336.683 li
506.451 337.137 506.828 337.466 507.247 337.412 cv
507.659 337.359 507.947 336.943 507.888 336.489 cv
507.245 331.532 li
507.186 331.077 506.802 330.749 506.39 330.802 cv
505.319 322.54 mo
504.9 322.594 504.619 323.009 504.678 323.463 cv
505.321 328.421 li
505.38 328.875 505.757 329.204 506.176 329.15 cv
506.587 329.097 506.876 328.681 506.817 328.227 cv
506.174 323.269 li
506.115 322.815 505.731 322.487 505.319 322.54 cv
504.248 314.278 mo
503.829 314.332 503.548 314.747 503.607 315.201 cv
504.25 320.159 li
504.309 320.613 504.686 320.942 505.105 320.888 cv
505.516 320.834 505.805 320.419 505.746 319.964 cv
505.103 315.007 li
505.044 314.553 504.659 314.224 504.248 314.278 cv
503.177 306.016 mo
502.758 306.07 502.477 306.484 502.536 306.939 cv
503.179 311.896 li
503.238 312.351 503.615 312.68 504.034 312.625 cv
504.445 312.572 504.733 312.157 504.674 311.702 cv
504.032 306.745 li
503.973 306.29 503.588 305.962 503.177 306.016 cv
502.106 297.753 mo
501.687 297.808 501.406 298.222 501.465 298.677 cv
502.107 303.634 li
502.167 304.088 502.544 304.417 502.963 304.363 cv
503.374 304.31 503.662 303.894 503.603 303.44 cv
502.961 298.483 li
502.902 298.028 502.517 297.7 502.106 297.753 cv
501.034 289.491 mo
500.616 289.545 500.335 289.96 500.394 290.414 cv
501.036 295.372 li
501.095 295.826 501.473 296.155 501.892 296.101 cv
502.303 296.047 502.591 295.632 502.532 295.178 cv
501.89 290.22 li
501.831 289.766 501.446 289.438 501.034 289.491 cv
498.605 282.253 mo
498.259 281.987 497.791 282.073 497.558 282.448 cv
497.326 282.823 497.416 283.34 497.762 283.606 cv
498.878 284.469 499.658 285.738 499.951 287.178 cv
500.044 287.603 500.409 287.892 500.798 287.841 cv
500.857 287.834 li
501.264 287.739 501.519 287.303 501.43 286.852 cv
501.045 284.995 500.042 283.361 498.605 282.253 cv
383.06 295.276 mo
381.744 295.446 li
380.771 295.572 379.837 295.937 379.02 296.497 cv
378.953 296.976 378.958 297.479 379.024 297.992 cv
379.076 298.397 li
379.196 298.381 379.318 298.323 379.42 298.234 cv
380.146 297.611 381.03 297.219 381.958 297.099 cv
383.274 296.928 li
383.686 296.875 383.974 296.459 383.915 296.005 cv
383.856 295.55 383.471 295.222 383.06 295.276 cv
495.443 280.916 mo
494.909 280.842 494.377 280.844 493.846 280.913 cv
490.764 281.312 li
490.353 281.366 490.065 281.781 490.123 282.236 cv
490.182 282.69 490.567 283.018 490.979 282.965 cv
494.06 282.565 li
494.471 282.512 494.889 282.508 495.299 282.564 cv
495.475 282.567 li
495.819 282.522 496.092 282.226 496.125 281.836 cv
496.157 281.378 495.853 280.964 495.443 280.916 cv
487.772 281.7 mo
483.285 282.282 li
482.873 282.335 482.585 282.751 482.644 283.205 cv
482.703 283.66 483.088 283.988 483.499 283.934 cv
487.987 283.353 li
488.398 283.299 488.686 282.884 488.628 282.429 cv
488.569 281.975 488.184 281.647 487.772 281.7 cv
480.293 282.67 mo
475.805 283.252 li
475.394 283.305 475.106 283.72 475.165 284.175 cv
475.223 284.629 475.608 284.957 476.02 284.904 cv
480.507 284.322 li
480.919 284.269 481.207 283.854 481.148 283.399 cv
481.089 282.945 480.704 282.617 480.293 282.67 cv
472.814 283.64 mo
468.326 284.221 li
467.915 284.275 467.626 284.69 467.685 285.145 cv
467.744 285.599 468.129 285.927 468.54 285.874 cv
473.028 285.292 li
473.439 285.239 473.728 284.823 473.669 284.369 cv
473.61 283.914 473.225 283.586 472.814 283.64 cv
465.334 284.609 mo
460.846 285.191 li
460.435 285.244 460.147 285.66 460.206 286.114 cv
460.264 286.569 460.649 286.897 461.061 286.844 cv
465.548 286.262 li
465.96 286.208 466.248 285.793 466.189 285.339 cv
466.13 284.884 465.746 284.556 465.334 284.609 cv
457.855 285.579 mo
453.367 286.161 li
452.956 286.214 452.667 286.63 452.726 287.084 cv
452.785 287.538 453.17 287.867 453.581 287.813 cv
458.069 287.231 li
458.48 287.178 458.769 286.763 458.71 286.308 cv
458.651 285.854 458.266 285.526 457.855 285.579 cv
450.375 286.549 mo
445.887 287.13 li
445.476 287.184 445.188 287.599 445.247 288.054 cv
445.306 288.508 445.69 288.836 446.102 288.783 cv
450.589 288.201 li
451.001 288.148 451.289 287.732 451.23 287.278 cv
451.171 286.823 450.787 286.495 450.375 286.549 cv
442.896 287.518 mo
438.408 288.1 li
437.997 288.153 437.708 288.569 437.767 289.023 cv
437.826 289.478 438.211 289.806 438.622 289.752 cv
443.11 289.171 li
443.521 289.117 443.81 288.702 443.751 288.248 cv
443.692 287.793 443.307 287.465 442.896 287.518 cv
435.416 288.488 mo
430.929 289.07 li
430.517 289.123 430.229 289.539 430.288 289.993 cv
430.347 290.447 430.731 290.775 431.143 290.722 cv
435.63 290.14 li
436.042 290.087 436.33 289.672 436.271 289.217 cv
436.212 288.763 435.828 288.435 435.416 288.488 cv
427.937 289.458 mo
423.449 290.039 li
423.038 290.093 422.749 290.508 422.808 290.963 cv
422.867 291.417 423.252 291.745 423.663 291.692 cv
428.151 291.11 li
428.563 291.057 428.851 290.641 428.792 290.187 cv
428.733 289.732 428.348 289.404 427.937 289.458 cv
420.457 290.427 mo
415.97 291.009 li
415.558 291.062 415.27 291.478 415.329 291.932 cv
415.388 292.387 415.772 292.715 416.184 292.662 cv
420.672 292.08 li
421.083 292.027 421.371 291.611 421.312 291.157 cv
421.253 290.702 420.869 290.374 420.457 290.427 cv
412.978 291.397 mo
408.49 291.979 li
408.079 292.032 407.79 292.448 407.849 292.902 cv
407.908 293.356 408.293 293.685 408.704 293.631 cv
413.192 293.049 li
413.603 292.996 413.892 292.581 413.833 292.126 cv
413.774 291.672 413.389 291.344 412.978 291.397 cv
405.498 292.367 mo
401.011 292.948 li
400.599 293.002 400.311 293.417 400.37 293.872 cv
400.429 294.326 400.814 294.654 401.225 294.601 cv
405.713 294.019 li
406.124 293.966 406.412 293.55 406.354 293.096 cv
406.295 292.642 405.91 292.313 405.498 292.367 cv
398.019 293.336 mo
393.531 293.918 li
393.12 293.972 392.831 294.387 392.89 294.841 cv
392.949 295.296 393.334 295.624 393.746 295.571 cv
398.233 294.989 li
398.644 294.936 398.933 294.52 398.874 294.066 cv
398.815 293.611 398.43 293.283 398.019 293.336 cv
390.539 294.306 mo
386.052 294.888 li
385.64 294.941 385.352 295.357 385.411 295.811 cv
385.47 296.265 385.855 296.594 386.266 296.54 cv
390.754 295.959 li
391.165 295.905 391.453 295.49 391.395 295.035 cv
391.336 294.581 390.951 294.253 390.539 294.306 cv
.45098 .243137 .0313726 rgb
f
462.457 354.102 mo
460.17 354.399 458.068 352.78 457.771 350.492 cv
455.775 335.099 li
455.479 332.811 457.099 330.709 459.386 330.413 cv
517.173 322.921 li
519.461 322.625 521.563 324.244 521.859 326.531 cv
523.855 341.925 li
524.151 344.212 522.532 346.314 520.244 346.611 cv
462.457 354.102 li
cp
f
520.116 345.619 mo
462.328 353.111 li
460.585 353.337 458.989 352.107 458.763 350.364 cv
456.767 334.971 li
456.541 333.227 457.771 331.631 459.514 331.405 cv
517.302 323.913 li
519.045 323.687 520.641 324.917 520.867 326.66 cv
522.863 342.053 li
523.089 343.797 521.859 345.393 520.116 345.619 cv
cp
.827451 .364706 .0509804 rgb
f
468.089 331.971 mo
464.008 332.5 li
463.553 332.559 463.23 332.979 463.289 333.433 cv
463.349 333.896 463.768 334.211 464.222 334.152 cv
468.304 333.623 li
468.758 333.564 469.083 333.152 469.023 332.69 cv
468.964 332.235 468.544 331.912 468.089 331.971 cv
cp
475.426 331.019 mo
471.353 331.548 li
470.89 331.607 470.575 332.026 470.634 332.481 cv
470.694 332.944 471.105 333.26 471.567 333.2 cv
475.641 332.672 li
476.103 332.612 476.42 332.201 476.36 331.739 cv
476.301 331.284 475.889 330.959 475.426 331.019 cv
cp
482.771 330.067 mo
478.69 330.596 li
478.235 330.655 477.912 331.075 477.971 331.53 cv
478.031 331.992 478.45 332.308 478.904 332.249 cv
482.986 331.72 li
483.44 331.661 483.765 331.249 483.705 330.786 cv
483.646 330.332 483.226 330.008 482.771 330.067 cv
cp
490.117 329.115 mo
486.035 329.644 li
485.581 329.703 485.257 330.123 485.316 330.577 cv
485.376 331.04 485.795 331.355 486.249 331.296 cv
490.331 330.767 li
490.785 330.708 491.11 330.297 491.05 329.834 cv
490.991 329.38 490.571 329.056 490.117 329.115 cv
cp
497.462 328.163 mo
493.38 328.692 li
492.926 328.751 492.602 329.171 492.661 329.625 cv
492.721 330.088 493.14 330.403 493.594 330.344 cv
497.676 329.815 li
498.13 329.756 498.455 329.344 498.395 328.882 cv
498.336 328.427 497.916 328.104 497.462 328.163 cv
cp
504.807 327.21 mo
500.725 327.74 li
500.271 327.798 499.947 328.218 500.006 328.673 cv
500.066 329.136 500.485 329.451 500.94 329.392 cv
505.021 328.863 li
505.476 328.804 505.8 328.392 505.74 327.93 cv
505.681 327.475 505.261 327.151 504.807 327.21 cv
cp
512.144 326.259 mo
508.071 326.787 li
507.608 326.847 507.293 327.266 507.351 327.721 cv
507.411 328.183 507.822 328.5 508.285 328.44 cv
512.358 327.912 li
512.821 327.852 513.137 327.441 513.077 326.978 cv
513.018 326.524 512.607 326.199 512.144 326.259 cv
cp
519.489 325.307 mo
515.407 325.836 li
514.953 325.895 514.63 326.315 514.688 326.769 cv
514.748 327.232 515.167 327.547 515.622 327.488 cv
519.703 326.959 li
520.158 326.9 520.482 326.489 520.422 326.026 cv
520.363 325.572 519.943 325.248 519.489 325.307 cv
cp
461.636 333.513 mo
461.462 333.082 460.974 332.885 460.552 333.057 cv
459.235 333.597 458.446 334.96 458.629 336.373 cv
458.768 337.447 li
458.828 337.91 459.247 338.225 459.702 338.166 cv
460.156 338.107 460.481 337.695 460.421 337.233 cv
460.282 336.158 li
460.196 335.497 460.566 334.853 461.188 334.596 cv
461.611 334.424 461.808 333.936 461.636 333.513 cv
cp
459.911 339.777 mo
459.456 339.836 459.133 340.256 459.192 340.71 cv
459.721 344.792 li
459.78 345.246 460.2 345.57 460.654 345.511 cv
461.108 345.452 461.432 345.032 461.373 344.578 cv
460.844 340.496 li
460.785 340.042 460.365 339.718 459.911 339.777 cv
cp
463.519 349.592 mo
462.709 349.697 461.963 349.13 461.858 348.321 cv
461.796 347.841 li
461.737 347.387 461.317 347.063 460.863 347.122 cv
460.408 347.181 460.085 347.601 460.144 348.056 cv
460.206 348.535 li
460.429 350.253 462.006 351.469 463.733 351.245 cv
463.758 351.242 li
464.212 351.183 464.52 350.773 464.46 350.31 cv
464.401 349.856 463.973 349.533 463.519 349.592 cv
cp
470.889 348.637 mo
466.807 349.166 li
466.353 349.225 466.029 349.645 466.088 350.099 cv
466.148 350.562 466.567 350.877 467.021 350.818 cv
471.103 350.289 li
471.557 350.23 471.882 349.819 471.822 349.356 cv
471.763 348.901 471.343 348.578 470.889 348.637 cv
cp
478.225 347.686 mo
474.152 348.214 li
473.69 348.274 473.374 348.693 473.433 349.147 cv
473.493 349.61 473.904 349.926 474.366 349.866 cv
478.44 349.338 li
478.902 349.278 479.219 348.867 479.159 348.405 cv
479.1 347.95 478.688 347.626 478.225 347.686 cv
cp
485.571 346.733 mo
481.489 347.263 li
481.035 347.321 480.711 347.741 480.77 348.196 cv
480.83 348.659 481.249 348.974 481.703 348.915 cv
485.785 348.386 li
486.239 348.327 486.564 347.915 486.504 347.453 cv
486.445 346.998 486.025 346.674 485.571 346.733 cv
cp
492.916 345.781 mo
488.834 346.31 li
488.38 346.369 488.056 346.789 488.115 347.244 cv
488.175 347.706 488.594 348.022 489.049 347.963 cv
493.13 347.434 li
493.584 347.375 493.909 346.963 493.849 346.5 cv
493.79 346.046 493.37 345.722 492.916 345.781 cv
cp
500.261 344.829 mo
496.179 345.358 li
495.725 345.417 495.401 345.837 495.46 346.291 cv
495.52 346.754 495.939 347.069 496.394 347.01 cv
500.475 346.481 li
500.93 346.422 501.254 346.011 501.194 345.548 cv
501.135 345.094 500.715 344.77 500.261 344.829 cv
cp
507.606 343.877 mo
503.525 344.406 li
503.07 344.465 502.747 344.885 502.805 345.339 cv
502.865 345.802 503.284 346.117 503.739 346.058 cv
507.82 345.529 li
508.275 345.47 508.599 345.058 508.539 344.596 cv
508.481 344.141 508.061 343.818 507.606 343.877 cv
cp
514.943 342.925 mo
510.87 343.453 li
510.407 343.513 510.092 343.932 510.151 344.387 cv
510.211 344.85 510.621 345.166 511.084 345.106 cv
515.157 344.578 li
515.62 344.518 515.936 344.107 515.876 343.645 cv
515.817 343.19 515.406 342.865 514.943 342.925 cv
cp
522.288 341.973 mo
518.207 342.502 li
517.752 342.561 517.429 342.981 517.488 343.436 cv
517.548 343.898 517.966 344.214 518.421 344.155 cv
522.502 343.626 li
522.957 343.567 523.282 343.155 523.222 342.692 cv
523.163 342.238 522.743 341.914 522.288 341.973 cv
cp
.45098 .243137 .0313726 rgb
f
473.834 340.172 mo
474.182 342.857 472.288 345.315 469.603 345.663 cv
466.919 346.011 464.46 344.117 464.112 341.432 cv
463.764 338.748 465.658 336.289 468.343 335.941 cv
471.027 335.593 473.486 337.487 473.834 340.172 cv
cp
.964706 .764706 .141176 rgb
f
471.628 337.356 mo
473.531 338.822 469.64 337.208 467.694 340 cv
465.747 342.793 468.221 345.715 466.318 344.248 cv
464.415 342.782 464.06 340.05 465.527 338.147 cv
466.993 336.244 469.725 335.89 471.628 337.356 cv
cp
1 .85098 .392157 rgb
f
91.2217 158.39 mo
90.4688 154.679 li
135.978 145.081 li
138.128 148.432 li
91.2217 158.39 li
249.598 124.766 mo
247.535 121.552 li
255.758 119.817 li
254.978 123.624 li
249.598 124.766 li
.211765 .564706 .670588 rgb
f
245.874 125.556 mo
243.809 122.338 li
247.535 121.552 li
249.598 124.766 li
245.874 125.556 li
.168627 .45098 .537255 rgb
f
234.787 127.91 mo
232.713 124.678 li
243.809 122.338 li
245.874 125.556 li
234.787 127.91 li
.670588 .372549 .00784314 rgb
f
231.064 128.701 mo
228.987 125.464 li
232.713 124.678 li
234.787 127.91 li
231.064 128.701 li
.537255 .298039 .00784314 rgb
f
138.128 148.432 mo
135.978 145.081 li
228.987 125.464 li
231.064 128.701 li
138.128 148.432 li
.713725 .431373 .14902 rgb
f
330.416 129.868 mo
326.434 129.04 li
322.252 109.341 li
277.457 118.851 li
268.839 117.059 li
325.397 105.13 li
330.416 129.868 li
260.165 119.173 mo
259.479 119.033 li
260.225 118.875 li
260.165 119.173 li
.211765 .564706 .670588 rgb
f
388.27 420.297 mo
153.157 470.213 li
87.1387 159.257 li
322.252 109.341 li
388.27 420.297 li
.94902 .964706 .980392 rgb
f
109.47 238.307 mo
333.965 190.645 li
330.753 175.518 li
106.258 223.18 li
109.47 238.307 li
.737255 .776471 .831373 rgb
f
143.759 399.812 mo
368.254 352.15 li
365.042 337.022 li
140.547 384.684 li
143.759 399.812 li
f
152.193 439.537 mo
376.639 391.886 li
376.294 390.26 li
151.848 437.912 li
152.193 439.537 li
f
104.417 214.507 mo
328.863 166.855 li
328.518 165.23 li
104.072 212.882 li
104.417 214.507 li
f
97.2539 180.768 mo
172.088 164.88 li
170.708 158.379 li
95.8738 174.267 li
97.2539 180.768 li
f
279.988 140.74 mo
317.629 132.749 li
316.749 128.605 li
279.108 136.596 li
279.988 140.74 li
320.486 134.605 mo
278.132 143.597 li
276.251 134.74 li
318.605 125.748 li
320.486 134.605 li
f
99.8828 193.15 mo
199.481 172.004 li
198.101 165.504 li
98.5026 186.649 li
99.8828 193.15 li
f
102.397 204.994 mo
165.926 191.506 li
164.546 185.005 li
101.017 198.493 li
102.397 204.994 li
cp
f
154.31 449.512 mo
217.839 436.024 li
216.459 429.523 li
152.93 443.011 li
154.31 449.512 li
f
134.436 343.699 mo
270.803 314.747 li
274.696 333.087 li
138.33 362.039 li
134.436 343.699 li
127.578 311.398 mo
263.945 282.446 li
267.893 301.042 li
131.526 329.993 li
127.578 311.398 li
120.775 279.352 mo
257.141 250.4 li
261.035 268.74 li
124.669 297.692 li
120.775 279.352 li
114.417 249.405 mo
250.783 220.454 li
254.232 236.695 li
117.865 265.646 li
114.417 249.405 li
289.263 212.284 mo
292.711 228.525 li
256.581 236.196 li
253.132 219.955 li
289.263 212.284 li
334.091 202.767 mo
337.539 219.008 li
295.306 227.974 li
291.857 211.733 li
334.091 202.767 li
308.967 292.321 mo
305.019 273.726 li
347.253 264.759 li
351.201 283.355 li
308.967 292.321 li
358.004 315.4 mo
315.77 324.367 li
311.877 306.027 li
354.11 297.06 li
358.004 315.4 li
309.282 306.578 mo
313.176 324.918 li
277.045 332.589 li
273.152 314.249 li
309.282 306.578 li
302.424 274.277 mo
306.372 292.872 li
270.242 300.543 li
266.294 281.948 li
302.424 274.277 li
298.215 241.68 mo
340.449 232.714 li
344.343 251.054 li
302.109 260.02 li
298.215 241.68 li
299.514 260.571 mo
263.384 268.242 li
259.49 249.902 li
295.621 242.231 li
299.514 260.571 li
363.256 328.609 mo
360.346 314.903 li
356.452 296.563 li
353.542 282.858 li
336.433 202.269 li
335.872 199.629 li
335.053 195.769 li
110.558 243.431 li
111.938 249.932 li
112.075 249.902 li
115.523 266.144 li
115.386 266.173 li
118.296 279.879 li
118.433 279.849 li
122.327 298.189 li
122.19 298.219 li
125.099 311.924 li
125.237 311.895 li
129.184 330.491 li
129.047 330.52 li
131.957 344.225 li
132.094 344.196 li
135.988 362.536 li
135.851 362.565 li
138.761 376.271 li
138.898 376.242 li
139.276 378.023 li
280.326 348.076 li
280.316 348.029 li
316.706 340.303 li
318.796 339.86 li
363.624 330.342 li
363.256 328.609 li
f
422.997 474.073 mo
418.891 473.219 li
423.388 451.28 li
427.147 453.525 li
422.997 474.073 li
458.699 278.997 mo
482.131 164.667 li
331.2 133.732 li
330.416 129.868 li
485.97 162.226 li
462.489 278.505 li
458.699 278.997 li
.211765 .564706 .670588 rgb
f
427.147 453.525 mo
423.388 451.28 li
432.373 407.441 li
436.562 406.898 li
434.317 418.016 li
433.81 418.822 433.323 419.648 432.856 420.493 cv
432.342 420.186 li
432.171 420.084 431.983 420.035 431.797 420.035 cv
431.434 420.035 431.081 420.22 430.881 420.554 cv
429.365 423.092 li
429.064 423.597 429.229 424.251 429.734 424.553 cv
430.614 425.079 li
428.793 429.324 427.598 433.682 426.991 438.054 cv
426.991 438.055 426.991 438.055 426.991 438.056 cv
426.991 438.056 li
426.904 438.642 426.832 439.222 426.771 439.807 cv
426.71 440.392 426.665 440.971 426.619 441.55 cv
426.584 442.134 426.549 442.718 426.524 443.306 cv
426.524 443.324 426.523 443.341 426.523 443.358 cv
426.471 444.486 426.469 445.611 426.515 446.735 cv
426.515 446.752 426.516 446.77 426.516 446.787 cv
426.538 447.358 426.566 447.945 426.603 448.511 cv
426.638 449.024 426.683 449.517 426.723 450.02 cv
426.747 450.248 li
426.805 450.823 426.879 451.392 426.952 451.962 cv
427.014 452.447 427.084 452.937 427.168 453.422 cv
427.147 453.525 li
.768627 .635294 .282353 rgb
f
426.515 446.735 mo
426.469 445.611 426.471 444.486 426.523 443.358 cv
426.486 444.48 426.483 445.606 426.515 446.735 cv
428.97 440.212 mo
428.427 440.212 427.727 439.25 427.145 438.279 cv
426.991 438.056 li
426.991 438.055 426.991 438.055 426.991 438.054 cv
427.598 433.682 428.793 429.324 430.614 425.079 cv
430.766 425.17 li
430.937 425.272 431.125 425.32 431.311 425.32 cv
431.674 425.32 432.027 425.135 432.227 424.801 cv
433.315 422.979 li
429.841 440.185 li
429.801 440.184 429.761 440.184 429.721 440.184 cv
429.476 440.184 429.214 440.203 428.987 440.211 cv
428.981 440.212 428.975 440.212 428.97 440.212 cv
433.695 421.098 mo
433.612 420.981 433.505 420.88 433.374 420.802 cv
432.856 420.493 li
433.323 419.648 433.81 418.822 434.317 418.016 cv
433.695 421.098 li
.705882 .517647 0 rgb
f
427.168 453.422 mo
427.084 452.937 427.014 452.447 426.952 451.962 cv
426.879 451.392 426.805 450.823 426.747 450.248 cv
426.723 450.02 li
426.683 449.517 426.638 449.024 426.603 448.511 cv
426.566 447.945 426.538 447.358 426.516 446.787 cv
426.516 446.77 426.515 446.752 426.515 446.735 cv
426.483 445.606 426.486 444.48 426.523 443.358 cv
426.523 443.341 426.524 443.324 426.524 443.306 cv
426.549 442.718 426.584 442.134 426.619 441.55 cv
426.665 440.971 426.71 440.392 426.771 439.807 cv
426.832 439.222 426.904 438.642 426.991 438.056 cv
426.991 438.056 li
427.145 438.279 li
427.727 439.25 428.427 440.212 428.97 440.212 cv
428.975 440.212 428.981 440.212 428.987 440.211 cv
429.214 440.203 429.476 440.184 429.721 440.184 cv
429.761 440.184 429.801 440.184 429.841 440.185 cv
427.168 453.422 li
.623529 .458824 0 rgb
f
431.311 425.32 mo
431.125 425.32 430.937 425.272 430.766 425.17 cv
430.614 425.079 li
429.734 424.553 li
429.229 424.251 429.064 423.597 429.365 423.092 cv
430.881 420.554 li
431.081 420.22 431.434 420.035 431.797 420.035 cv
431.983 420.035 432.171 420.084 432.342 420.186 cv
432.856 420.493 li
433.374 420.802 li
433.505 420.88 433.612 420.981 433.695 421.098 cv
433.315 422.979 li
432.227 424.801 li
432.027 425.135 431.674 425.32 431.311 425.32 cv
.8 .8 .8 rgb
f
458.044 282.193 mo
458.699 278.997 li
462.489 278.505 li
461.844 281.7 li
458.044 282.193 li
.168627 .45098 .537255 rgb
f
432.373 407.441 mo
432.373 407.441 li
436.563 406.898 li
436.562 406.898 li
432.373 407.441 li
.607843 .352941 .0784314 rgb
f
432.373 407.441 mo
456.982 287.372 li
458.069 287.231 li
458.48 287.178 458.769 286.763 458.71 286.308 cv
458.655 285.886 458.319 285.573 457.942 285.573 cv
457.913 285.573 457.884 285.575 457.855 285.579 cv
457.336 285.646 li
458.044 282.193 li
461.844 281.7 li
461.147 285.152 li
460.846 285.191 li
460.435 285.244 460.147 285.66 460.206 286.114 cv
460.252 286.473 460.502 286.754 460.809 286.829 cv
437.608 401.72 li
435.297 402.02 li
434.879 402.074 434.598 402.488 434.657 402.943 cv
434.711 403.364 435.04 403.678 435.421 403.678 cv
435.451 403.678 435.481 403.676 435.512 403.672 cv
437.26 403.446 li
436.563 406.898 li
432.373 407.441 li
.662745 .290196 .0392157 rgb
f
435.421 403.678 mo
435.04 403.678 434.711 403.364 434.657 402.943 cv
434.598 402.488 434.879 402.074 435.297 402.02 cv
437.608 401.72 li
437.26 403.446 li
435.512 403.672 li
435.481 403.676 435.451 403.678 435.421 403.678 cv
456.982 287.372 mo
457.336 285.646 li
457.855 285.579 li
457.884 285.575 457.913 285.573 457.942 285.573 cv
458.319 285.573 458.655 285.886 458.71 286.308 cv
458.769 286.763 458.48 287.178 458.069 287.231 cv
456.982 287.372 li
460.809 286.829 mo
460.502 286.754 460.252 286.473 460.206 286.114 cv
460.147 285.66 460.435 285.244 460.846 285.191 cv
461.147 285.152 li
460.809 286.829 li
.360784 .196078 .0235294 rgb
f
260.225 118.875 mo
260.924 115.412 li
268.839 117.059 li
260.225 118.875 li
.211765 .564706 .670588 rgb
f
331.2 133.732 mo
327.259 132.925 li
326.434 129.04 li
330.416 129.868 li
331.2 133.732 li
268.191 120.818 mo
260.165 119.173 li
260.225 118.875 li
268.839 117.059 li
277.457 118.851 li
268.191 120.818 li
.168627 .45098 .537255 rgb
f
327.259 132.925 mo
319.805 131.397 li
318.975 127.488 li
326.434 129.04 li
327.259 132.925 li
317.23 130.869 mo
311.559 129.707 li
316.749 128.605 li
317.23 130.869 li
305.656 128.497 mo
268.191 120.818 li
277.457 118.851 li
314.649 126.588 li
305.656 128.497 li
.760784 .772549 .784314 rgb
f
319.805 131.397 mo
317.23 130.869 li
316.749 128.605 li
311.559 129.707 li
305.656 128.497 li
314.649 126.588 li
318.975 127.488 li
319.805 131.397 li
.588235 .619608 .666667 rgb
f
418.542 474.922 mo
192.474 428.588 li
256.063 118.333 li
482.131 164.667 li
418.542 474.922 li
.894118 .909804 .929412 rgb
f
461.858 209.706 mo
256.983 167.715 li
260.362 151.231 li
465.237 193.222 li
461.858 209.706 li
.737255 .776471 .831373 rgb
f
396.51 196.312 mo
322.331 181.109 li
325.71 164.625 li
399.889 179.828 li
396.51 196.312 li
.894118 .909804 .929412 rgb
f
413.826 444.057 mo
208.952 402.067 li
214.618 374.421 li
419.492 416.411 li
413.826 444.057 li
f
419.582 415.975 mo
214.707 373.984 li
220.373 346.339 li
425.248 388.329 li
419.582 415.975 li
.737255 .776471 .831373 rgb
f
425.337 387.893 mo
220.463 345.903 li
226.129 318.257 li
431.003 360.247 li
425.337 387.893 li
.894118 .909804 .929412 rgb
f
431.093 359.811 mo
226.218 317.821 li
231.885 290.175 li
436.759 332.166 li
431.093 359.811 li
.737255 .776471 .831373 rgb
f
436.848 331.729 mo
231.974 289.739 li
237.64 262.093 li
442.515 304.084 li
436.848 331.729 li
.894118 .909804 .929412 rgb
f
442.604 303.647 mo
237.73 261.657 li
243.396 234.011 li
448.27 276.002 li
442.604 303.647 li
.737255 .776471 .831373 rgb
f
460.687 207.831 mo
398.325 195.049 li
401.06 181.704 li
463.422 194.485 li
460.687 207.831 li
457.325 224.238 mo
255.436 182.86 li
258.17 169.514 li
359.115 190.204 li
397.697 198.111 li
397.697 198.111 li
460.059 210.893 li
457.325 224.238 li
453.962 240.646 mo
252.073 199.267 li
254.807 185.922 li
456.697 227.3 li
453.962 240.646 li
450.583 257.13 mo
248.694 215.751 li
251.445 202.329 li
453.334 243.708 li
450.583 257.13 li
441.417 301.848 mo
423.798 298.237 li
428.852 273.577 li
446.471 277.189 li
441.417 301.848 li
436.095 327.814 mo
435.661 329.93 li
418.043 326.319 li
423.097 301.659 li
440.715 305.27 li
436.095 327.814 li
430.889 353.214 mo
429.905 358.012 li
412.287 354.401 li
417.341 329.741 li
434.96 333.352 li
430.889 353.214 li
426.102 376.569 mo
424.15 386.094 li
406.531 382.483 li
411.586 357.823 li
429.204 361.434 li
426.102 376.569 li
421.092 401.016 mo
418.394 414.176 li
400.776 410.565 li
405.83 385.905 li
423.449 389.516 li
421.092 401.016 li
222.827 377.659 mo
217.914 401.631 li
210.892 400.192 li
215.805 376.22 li
222.827 377.659 li
221.56 348.138 mo
228.582 349.577 li
223.528 374.237 li
216.507 372.797 li
221.56 348.138 li
227.037 321.419 mo
227.316 320.056 li
234.338 321.495 li
229.284 346.155 li
222.262 344.716 li
227.037 321.419 li
232.425 295.13 mo
233.072 291.974 li
240.093 293.414 li
235.039 318.073 li
228.018 316.634 li
232.425 295.13 li
237.307 271.31 mo
238.827 263.892 li
245.849 265.331 li
240.795 289.991 li
233.773 288.552 li
237.307 271.31 li
274.696 271.244 mo
269.642 295.903 li
243.781 290.603 li
248.835 265.943 li
274.696 271.244 li
275.397 267.822 mo
249.536 262.521 li
254.59 237.862 li
280.451 243.162 li
275.397 267.822 li
373.013 291.394 mo
367.959 316.054 li
272.628 296.515 li
277.682 271.856 li
373.013 291.394 li
373.715 287.972 mo
278.383 268.434 li
283.438 243.774 li
378.769 263.313 li
373.715 287.972 li
400.093 296.944 mo
395.039 321.604 li
370.945 316.666 li
375.999 292.006 li
400.093 296.944 li
400.795 293.523 mo
376.701 288.584 li
381.755 263.925 li
405.849 268.863 li
400.795 293.523 li
392.27 350.299 mo
397.324 325.639 li
414.355 329.129 li
409.301 353.789 li
392.27 350.299 li
386.514 378.38 mo
391.568 353.72 li
408.6 357.211 li
403.546 381.871 li
386.514 378.38 li
397.79 409.953 mo
380.759 406.462 li
385.813 381.803 li
402.844 385.293 li
397.79 409.953 li
375.144 433.857 mo
380.057 409.884 li
397.089 413.375 li
392.175 437.348 li
375.144 433.857 li
348.063 428.307 mo
352.976 404.334 li
377.072 409.272 li
372.158 433.245 li
348.063 428.307 li
249.747 408.156 mo
254.66 384.184 li
349.991 403.722 li
345.077 427.695 li
249.747 408.156 li
257.43 355.489 mo
252.376 380.149 li
226.514 374.849 li
231.568 350.189 li
257.43 355.489 li
263.185 327.407 mo
258.131 352.067 li
232.27 346.767 li
237.324 322.107 li
263.185 327.407 li
263.887 323.985 mo
238.025 318.685 li
243.079 294.026 li
268.94 299.326 li
263.887 323.985 li
355.746 375.64 mo
350.692 400.3 li
255.361 380.761 li
260.415 356.101 li
355.746 375.64 li
361.502 347.558 mo
356.448 372.218 li
261.117 352.679 li
266.171 328.02 li
361.502 347.558 li
362.203 344.136 mo
266.873 324.597 li
271.926 299.938 li
367.258 319.477 li
362.203 344.136 li
382.827 381.191 mo
377.773 405.85 li
353.678 400.911 li
358.732 376.252 li
382.827 381.191 li
365.189 344.748 mo
370.244 320.089 li
394.338 325.027 li
389.284 349.687 li
365.189 344.748 li
388.582 353.108 mo
383.528 377.768 li
359.433 372.83 li
364.488 348.17 li
388.582 353.108 li
220.9 402.243 mo
225.813 378.271 li
251.674 383.572 li
246.761 407.544 li
220.9 402.243 li
412.78 441.571 mo
395.161 437.96 li
400.075 413.987 li
417.693 417.598 li
412.78 441.571 li
403.781 294.135 mo
408.835 269.475 li
425.866 272.965 li
420.812 297.625 li
403.781 294.135 li
420.111 301.047 mo
415.057 325.707 li
398.025 322.216 li
403.08 297.556 li
420.111 301.047 li
242.782 244.596 mo
244.583 235.811 li
251.604 237.249 li
246.55 261.909 li
239.529 260.47 li
242.782 244.596 li
261.533 153.107 mo
323.896 165.888 li
321.161 179.234 li
258.798 166.452 li
261.533 153.107 li
326.882 166.5 mo
398.074 181.092 li
395.339 194.437 li
324.147 179.846 li
326.882 166.5 li
467.036 192.035 mo
470.399 175.628 li
262.538 133.024 li
258.547 152.495 li
255.185 168.902 li
251.822 185.31 li
248.459 201.717 li
248.459 201.717 li
245.096 218.125 li
245.096 218.125 li
241.7 234.697 li
237.442 255.473 li
236.453 260.294 li
233.883 272.835 li
207.207 402.983 li
207.208 402.983 li
207.153 403.253 li
207.153 403.254 li
204.12 418.051 li
411.98 460.654 li
415.013 445.856 li
415.014 445.856 li
421.292 415.225 li
421.291 415.224 li
423.58 404.055 li
427.047 387.143 li
427.046 387.143 li
428.965 377.784 li
432.803 359.061 li
432.802 359.06 li
434.179 352.343 li
438.559 330.979 li
438.558 330.979 li
439.773 325.049 li
444.314 302.897 li
444.313 302.896 li
444.987 299.608 li
450.07 274.815 li
450.07 274.815 li
453.551 257.83 li
453.551 257.83 li
456.948 241.258 li
456.947 241.258 li
460.31 224.85 li
463.673 208.443 li
463.673 208.443 li
467.036 192.035 li
467.036 192.035 li
1 1 1 rgb
f
394.18 479.085 mo
394.175 469.928 li
398.168 470.747 li
398.173 479.083 li
394.18 479.085 li
.211765 .564706 .670588 rgb
f
171.036 165.745 mo
171.036 165.103 li
172.088 164.88 li
171.511 162.162 li
247.089 162.115 li
246.355 165.698 li
198.148 165.728 li
198.101 165.504 li
197.041 165.729 li
171.036 165.745 li
.760784 .772549 .784314 rgb
f
171.036 165.103 mo
171.034 162.163 li
171.511 162.162 li
172.088 164.88 li
171.036 165.103 li
.588235 .619608 .666667 rgb
f
197.041 165.729 mo
198.101 165.504 li
198.148 165.728 li
197.041 165.729 li
f
398.168 470.747 mo
394.175 469.928 li
394.167 457.003 li
398.16 457.821 li
398.168 470.747 li
398.033 246.359 mo
394.037 245.54 li
394.028 231.553 li
398.024 232.372 li
398.033 246.359 li
398.022 229.181 mo
394.026 228.362 li
394.018 214.454 li
398.014 215.273 li
398.022 229.181 li
398.012 212.082 mo
394.016 211.263 li
394.007 197.355 li
397.697 198.111 li
397.697 198.111 li
398.004 198.174 li
398.012 212.082 li
246.355 165.698 mo
247.089 162.115 li
256.577 162.109 li
255.842 165.692 li
246.355 165.698 li
.713725 .729412 .745098 rgb
f
258.954 165.691 mo
259.689 162.107 li
305.307 162.078 li
322.739 165.651 li
258.954 165.691 li
.588235 .619608 .666667 rgb
f
395.339 194.437 mo
394.005 194.164 li
393.997 180.256 li
397.993 181.075 li
397.993 181.484 li
395.339 194.437 li
.713725 .729412 .745098 rgb
f
398.149 438.572 mo
395.161 437.96 li
398.14 423.429 li
398.149 438.572 li
394.149 427.719 mo
394.14 412.771 li
397.089 413.375 li
394.149 427.719 li
f
397.79 409.953 mo
394.138 409.204 li
394.122 383.506 li
398.116 384.324 li
398.13 408.293 li
397.79 409.953 li
.588235 .619608 .666667 rgb
f
398.114 380.758 mo
394.12 379.939 li
394.104 354.24 li
398.098 355.059 li
398.114 380.758 li
.713725 .729412 .745098 rgb
f
398.096 351.493 mo
394.102 350.674 li
394.096 341.388 li
397.324 325.639 li
398.081 325.794 li
398.096 351.493 li
394.087 326.253 mo
394.086 324.975 li
394.338 325.027 li
394.087 326.253 li
.588235 .619608 .666667 rgb
f
398.078 322.227 mo
398.025 322.216 li
398.078 321.958 li
398.078 322.227 li
395.039 321.604 mo
394.084 321.408 li
394.068 295.709 li
398.063 296.528 li
398.069 306.821 li
395.039 321.604 li
.713725 .729412 .745098 rgb
f
398.061 292.962 mo
394.066 292.143 li
394.05 266.444 li
398.045 267.263 li
398.061 292.962 li
.588235 .619608 .666667 rgb
f
398.16 457.821 mo
394.167 457.003 li
394.149 427.719 li
397.089 413.375 li
394.14 412.771 li
394.138 409.204 li
397.79 409.953 li
398.13 408.293 li
398.14 423.429 li
395.161 437.96 li
398.149 438.572 li
398.16 457.821 li
398.116 384.324 mo
394.122 383.506 li
394.12 379.939 li
398.114 380.758 li
398.116 384.324 li
398.098 355.059 mo
394.104 354.24 li
394.102 350.674 li
398.096 351.493 li
398.098 355.059 li
394.096 341.388 mo
394.087 326.253 li
394.338 325.027 li
394.086 324.975 li
394.084 321.408 li
395.039 321.604 li
398.069 306.821 li
398.078 321.958 li
398.025 322.216 li
398.078 322.227 li
398.081 325.794 li
397.324 325.639 li
394.096 341.388 li
398.063 296.528 mo
394.068 295.709 li
394.066 292.143 li
398.061 292.962 li
398.063 296.528 li
398.045 267.263 mo
394.05 266.444 li
394.037 245.54 li
398.033 246.359 li
398.045 267.263 li
398.024 232.372 mo
394.028 231.553 li
394.026 228.362 li
398.022 229.181 li
398.024 232.372 li
398.014 215.273 mo
394.018 214.454 li
394.016 211.263 li
398.012 212.082 li
398.014 215.273 li
398.004 198.174 mo
397.697 198.111 li
397.697 198.111 li
394.007 197.355 li
394.005 194.164 li
395.339 194.437 li
397.993 181.484 li
398.004 198.174 li
397.993 181.075 mo
393.997 180.256 li
393.988 165.608 li
322.739 165.651 li
305.307 162.078 li
397.982 162.02 li
397.993 181.075 li
255.842 165.692 mo
256.577 162.109 li
259.689 162.107 li
258.954 165.691 li
255.842 165.692 li
.8 .8 .8 rgb
f
394.182 481.667 mo
164.903 481.808 li
164.709 165.748 li
393.988 165.608 li
394.182 481.667 li
1 1 1 rgb
f
394.002 187.796 mo
164.722 187.937 li
164.709 165.748 li
393.988 165.608 li
394.002 187.796 li
cp
.737255 .784314 .839216 rgb
f
384.649 213.861 mo
338.3 213.889 li
338.295 205.507 li
384.644 205.478 li
384.649 213.861 li
cp
f
384.656 224.708 mo
323.022 224.746 li
323.016 216.364 li
384.651 216.326 li
384.656 224.708 li
cp
f
384.663 236.049 mo
332.397 236.081 li
332.392 227.699 li
384.658 227.666 li
384.663 236.049 li
cp
f
175.557 213.989 mo
247.98 213.944 li
247.975 205.562 li
175.551 205.607 li
175.557 213.989 li
cp
f
175.563 224.837 mo
270.756 224.778 li
270.751 216.396 li
175.558 216.454 li
175.563 224.837 li
cp
f
175.682 417.628 mo
270.874 417.57 li
270.869 409.187 li
175.676 409.246 li
175.682 417.628 li
f
175.57 236.177 mo
258.565 236.126 li
258.56 227.744 li
175.565 227.795 li
175.57 236.177 li
cp
f
175.638 346.187 mo
385.223 346.058 li
385.215 331.759 li
175.629 331.888 li
175.638 346.187 li
f
175.655 374.608 mo
385.241 374.48 li
385.232 360.18 li
175.646 360.309 li
175.655 374.608 li
f
384.008 330.555 mo
176.832 330.683 li
176.825 318.979 li
379.781 318.855 li
384.002 318.852 li
384.008 330.555 li
384.018 344.643 mo
176.841 344.77 li
176.834 333.278 li
384.011 333.151 li
384.018 344.643 li
176.843 347.39 mo
384.019 347.263 li
384.027 358.942 li
176.85 359.069 li
176.843 347.39 li
384.028 361.385 mo
384.035 373.276 li
176.859 373.403 li
176.852 361.512 li
384.028 361.385 li
384.044 387.578 mo
327.716 387.613 li
176.867 387.706 li
176.86 375.816 li
384.037 375.688 li
384.044 387.578 li
384.053 401.877 mo
328.279 401.912 li
328.272 390.022 li
384.045 389.988 li
384.053 401.877 li
384.062 416.669 mo
328.288 416.704 li
328.282 404.814 li
384.055 404.78 li
384.062 416.669 li
386.41 316.442 mo
386.402 302.143 li
174.407 302.273 li
174.415 316.572 li
174.414 316.572 li
174.425 333.28 li
174.426 333.28 li
174.432 344.772 li
174.432 344.772 li
174.443 361.479 li
174.443 361.479 li
174.45 373.408 li
174.449 373.409 li
174.46 390.116 li
325.863 390.023 li
325.871 402.406 li
325.87 402.406 li
325.881 419.115 li
386.473 419.077 li
386.463 402.368 li
386.463 402.368 li
386.453 387.579 li
386.445 373.278 li
386.444 373.278 li
386.438 361.349 li
386.438 361.349 li
386.429 347.262 li
386.429 347.262 li
386.419 330.554 li
386.418 330.554 li
386.41 316.442 li
f
383.982 285.873 mo
327.222 285.908 li
327.215 274.017 li
380.848 273.984 li
383.974 273.982 li
383.982 285.873 li
cp
191.023 274.101 mo
219.781 274.083 li
219.788 285.974 li
176.805 286 li
176.798 274.11 li
186.291 274.104 li
191.023 274.101 li
cp
222.197 285.972 mo
222.19 274.082 li
280.429 274.046 li
280.437 285.936 li
222.197 285.972 li
cp
324.813 285.909 mo
282.845 285.935 li
282.838 274.045 li
324.806 274.019 li
324.813 285.909 li
cp
386.374 257.273 mo
174.378 257.403 li
174.388 271.702 li
174.387 271.702 li
174.398 288.41 li
222.199 288.381 li
222.199 288.381 li
282.847 288.344 li
282.847 288.344 li
327.223 288.317 li
327.223 288.316 li
386.393 288.28 li
386.382 271.572 li
386.374 257.273 li
cp
f
328.271 387.806 mo
328.22 304.587 li
383.993 304.553 li
384.045 387.772 li
328.271 387.806 li
283.35 304.615 mo
325.811 304.589 li
325.862 387.807 li
283.401 387.833 li
283.35 304.615 li
386.402 302.143 mo
280.94 302.208 li
280.994 390.243 li
328.272 390.215 li
328.272 390.214 li
386.456 390.179 li
386.402 302.143 li
f
115.962 295.017 mo
115.47 293.552 115.138 292.014 114.987 290.425 cv
115.962 295.017 li
.211765 .564706 .670588 rgb
f
123.712 305.389 mo
120.131 302.87 117.381 299.246 115.962 295.017 cv
114.987 290.425 li
114.925 289.774 114.893 289.114 114.893 288.446 cv
114.893 284.551 115.974 280.904 117.852 277.789 cv
118.296 279.879 li
118.433 279.849 li
122.327 298.189 li
122.19 298.219 li
123.712 305.389 li
124.669 297.692 mo
120.775 279.352 li
149.614 273.229 li
153.719 277.015 156.294 282.435 156.294 288.446 cv
156.294 289.315 156.241 290.171 156.136 291.011 cv
124.669 297.692 li
.760784 .772549 .784314 rgb
f
135.594 309.146 mo
131.176 309.146 127.077 307.756 123.712 305.389 cv
122.19 298.219 li
122.327 298.189 li
118.433 279.849 li
118.296 279.879 li
117.852 277.789 li
121.478 271.776 128.074 267.745 135.594 267.745 cv
140.997 267.745 145.924 269.827 149.614 273.229 cv
120.775 279.352 li
124.669 297.692 li
156.136 291.011 li
154.868 301.219 146.139 309.146 135.594 309.146 cv
.588235 .619608 .666667 rgb
f
151.98 290.131 mo
151.98 301.012 143.159 309.832 132.279 309.832 cv
121.398 309.832 112.578 301.012 112.578 290.131 cv
112.578 279.251 121.398 270.431 132.279 270.431 cv
143.159 270.431 151.98 279.251 151.98 290.131 cv
cp
1 .882353 .54902 rgb
f
149.44 290.131 mo
149.44 299.609 141.757 307.292 132.279 307.292 cv
122.801 307.292 115.118 299.609 115.118 290.131 cv
115.118 280.654 122.801 272.97 132.279 272.97 cv
141.757 272.97 149.44 280.654 149.44 290.131 cv
cp
.890196 .678431 .14902 rgb
f
148.551 290.131 mo
148.551 299.118 141.266 306.404 132.279 306.404 cv
123.292 306.404 116.006 299.118 116.006 290.131 cv
116.006 281.144 123.292 273.859 132.279 273.859 cv
141.266 273.859 148.551 281.144 148.551 290.131 cv
cp
.960784 .788235 .32549 rgb
f
125.113 287.256 mo
125.108 289.845 126.992 291.538 131.001 292.744 cv
133.932 293.649 135.211 294.169 135.209 295.34 cv
135.207 296.293 134.126 297.108 131.902 297.104 cv
129.839 297.099 129.063 296.654 128.125 296.305 cv
128.075 296.287 li
127.908 296.225 li
127.881 296.228 li
127.729 296.187 127.573 296.158 127.407 296.157 cv
126.41 296.155 125.599 296.948 125.597 297.926 cv
125.595 298.78 126.21 299.495 127.029 299.665 cv
128.355 300.116 129.397 300.477 131.794 300.482 cv
131.896 300.482 131.993 300.476 132.094 300.474 cv
132.093 301.342 li
132.091 302.131 132.729 302.771 133.518 302.773 cv
134.307 302.775 134.947 302.137 134.949 301.348 cv
134.951 300.196 li
134.949 300.168 li
138.393 299.431 140.395 297.454 140.4 294.996 cv
140.405 292.327 137.949 290.634 134.176 289.563 cv
131.447 288.767 130.369 288.112 130.372 286.969 cv
130.374 285.77 131.623 284.982 133.983 284.988 cv
135.961 284.991 137.057 285.435 138.416 285.944 cv
138.538 286.008 138.666 286.059 138.802 286.093 cv
138.843 286.109 li
138.849 286.108 li
138.98 286.138 139.113 286.158 139.253 286.159 cv
140.255 286.159 141.068 285.354 141.07 284.359 cv
141.072 283.563 140.549 282.894 139.829 282.655 cv
138.637 282.153 137.121 281.669 134.99 281.576 cv
134.992 280.55 li
134.993 279.761 134.356 279.12 133.566 279.118 cv
132.778 279.117 132.137 279.755 132.136 280.543 cv
132.133 281.669 li
127.377 282.202 125.119 284.56 125.113 287.256 cv
cp
.890196 .678431 .14902 rgb
f
124.298 286.442 mo
124.293 289.031 126.177 290.724 130.186 291.93 cv
133.117 292.835 134.396 293.354 134.394 294.526 cv
134.392 295.479 133.311 296.294 131.087 296.289 cv
129.024 296.285 128.248 295.84 127.311 295.491 cv
127.26 295.473 li
127.093 295.41 li
127.066 295.413 li
126.914 295.372 126.758 295.343 126.592 295.342 cv
125.595 295.341 124.784 296.133 124.782 297.111 cv
124.78 297.966 125.395 298.681 126.214 298.851 cv
127.54 299.302 128.583 299.662 130.979 299.667 cv
131.082 299.668 131.179 299.661 131.279 299.659 cv
131.279 300.528 li
131.277 301.317 131.915 301.956 132.703 301.959 cv
133.492 301.961 134.132 301.322 134.134 300.534 cv
134.136 299.382 li
134.134 299.353 li
137.579 298.616 139.58 296.639 139.585 294.181 cv
139.59 291.513 137.134 289.82 133.361 288.749 cv
130.633 287.953 129.555 287.298 129.557 286.155 cv
129.56 284.955 130.809 284.168 133.168 284.173 cv
135.146 284.176 136.243 284.62 137.601 285.129 cv
137.723 285.193 137.851 285.244 137.988 285.279 cv
138.028 285.295 li
138.034 285.293 li
138.165 285.323 138.299 285.343 138.438 285.344 cv
139.44 285.344 140.254 284.539 140.256 283.544 cv
140.258 282.749 139.735 282.079 139.014 281.84 cv
137.823 281.338 136.306 280.854 134.175 280.762 cv
134.177 279.735 li
134.178 278.947 133.541 278.306 132.752 278.304 cv
131.963 278.302 131.323 278.941 131.321 279.729 cv
131.318 280.854 li
126.563 281.388 124.305 283.745 124.298 286.442 cv
cp
1 .909804 .54902 rgb
f
497.093 250.023 mo
487.572 250.023 479.827 242.277 479.827 232.757 cv
479.827 223.236 487.572 215.49 497.093 215.49 cv
506.614 215.49 514.359 223.236 514.359 232.757 cv
514.359 242.277 506.614 250.023 497.093 250.023 cv
.211765 .564706 .670588 rgb
f
510.76 234.162 mo
510.76 243.238 503.403 250.594 494.328 250.594 cv
485.253 250.594 477.896 243.238 477.896 234.162 cv
477.896 225.087 485.253 217.73 494.328 217.73 cv
503.403 217.73 510.76 225.087 510.76 234.162 cv
cp
1 .882353 .54902 rgb
f
508.642 234.162 mo
508.642 242.068 502.233 248.476 494.328 248.476 cv
486.423 248.476 480.014 242.068 480.014 234.162 cv
480.014 226.257 486.423 219.849 494.328 219.849 cv
502.233 219.849 508.642 226.257 508.642 234.162 cv
cp
.890196 .678431 .14902 rgb
f
507.901 234.162 mo
507.901 241.658 501.824 247.735 494.328 247.735 cv
486.832 247.735 480.756 241.658 480.756 234.162 cv
480.756 226.666 486.832 220.59 494.328 220.59 cv
501.824 220.59 507.901 226.666 507.901 234.162 cv
cp
.960784 .788235 .32549 rgb
f
488.351 231.764 mo
488.347 233.924 489.918 235.336 493.262 236.342 cv
495.707 237.097 496.774 237.53 496.772 238.507 cv
496.77 239.302 495.869 239.982 494.014 239.978 cv
492.293 239.974 491.646 239.603 490.864 239.312 cv
490.821 239.297 li
490.682 239.245 li
490.66 239.247 li
490.533 239.213 490.403 239.189 490.265 239.188 cv
489.433 239.187 488.757 239.848 488.755 240.664 cv
488.753 241.377 489.266 241.973 489.949 242.115 cv
491.055 242.491 491.925 242.791 493.924 242.795 cv
494.174 242.789 li
494.173 243.513 li
494.172 244.171 494.704 244.705 495.362 244.707 cv
496.02 244.709 496.554 244.176 496.555 243.518 cv
496.557 242.557 li
496.555 242.533 li
499.428 241.919 501.098 240.27 501.102 238.22 cv
501.106 235.994 499.057 234.582 495.91 233.689 cv
493.635 233.025 492.736 232.478 492.738 231.525 cv
492.74 230.525 493.781 229.868 495.75 229.872 cv
497.399 229.875 498.314 230.245 499.447 230.67 cv
499.549 230.723 499.656 230.766 499.769 230.794 cv
499.803 230.808 li
499.808 230.807 li
499.917 230.832 500.029 230.848 500.145 230.849 cv
500.981 230.849 501.659 230.177 501.661 229.347 cv
501.663 228.684 501.227 228.126 500.626 227.926 cv
499.632 227.508 498.367 227.104 496.589 227.027 cv
496.591 226.171 li
496.592 225.513 496.06 224.978 495.402 224.977 cv
494.744 224.975 494.21 225.508 494.209 226.165 cv
494.207 227.104 li
490.24 227.549 488.357 229.515 488.351 231.764 cv
cp
.890196 .678431 .14902 rgb
f
487.672 231.085 mo
487.668 233.244 489.239 234.657 492.583 235.662 cv
495.027 236.417 496.094 236.851 496.092 237.828 cv
496.091 238.623 495.189 239.302 493.334 239.299 cv
491.614 239.295 490.966 238.924 490.184 238.632 cv
490.142 238.618 li
490.003 238.565 li
489.98 238.568 li
489.854 238.533 489.723 238.509 489.585 238.509 cv
488.753 238.507 488.077 239.169 488.075 239.984 cv
488.073 240.697 488.587 241.293 489.27 241.435 cv
490.376 241.811 491.245 242.112 493.244 242.116 cv
493.495 242.11 li
493.494 242.834 li
493.492 243.492 494.024 244.025 494.682 244.027 cv
495.34 244.029 495.874 243.497 495.876 242.839 cv
495.877 241.878 li
495.875 241.854 li
498.749 241.24 500.418 239.59 500.422 237.54 cv
500.426 235.314 498.378 233.902 495.231 233.009 cv
492.955 232.345 492.056 231.799 492.058 230.846 cv
492.06 229.845 493.102 229.188 495.07 229.193 cv
496.72 229.195 497.634 229.566 498.768 229.99 cv
498.869 230.044 498.976 230.086 499.09 230.115 cv
499.124 230.128 li
499.129 230.127 li
499.238 230.152 499.349 230.169 499.465 230.17 cv
500.302 230.17 500.98 229.498 500.981 228.668 cv
500.983 228.005 500.547 227.446 499.946 227.247 cv
498.952 226.828 497.688 226.425 495.91 226.347 cv
495.911 225.491 li
495.913 224.833 495.381 224.299 494.722 224.297 cv
494.065 224.296 493.531 224.829 493.529 225.486 cv
493.527 226.424 li
489.56 226.869 487.677 228.836 487.672 231.085 cv
cp
1 .909804 .54902 rgb
f
86.3461 274.932 mo
76.8253 274.932 69.0799 267.187 69.0799 257.667 cv
69.0799 248.146 76.8253 240.4 86.3461 240.4 cv
95.8668 240.4 103.612 248.146 103.612 257.667 cv
103.612 267.187 95.8668 274.932 86.3461 274.932 cv
.211765 .564706 .670588 rgb
f
100.013 259.072 mo
100.013 268.147 92.6565 275.504 83.5813 275.504 cv
74.5062 275.504 67.1493 268.147 67.1493 259.072 cv
67.1493 249.997 74.5062 242.64 83.5813 242.64 cv
92.6565 242.64 100.013 249.997 100.013 259.072 cv
cp
1 .882353 .54902 rgb
f
97.8951 259.072 mo
97.8951 266.978 91.4866 273.386 83.5813 273.386 cv
75.6761 273.386 69.2676 266.978 69.2676 259.072 cv
69.2676 251.167 75.6761 244.759 83.5813 244.759 cv
91.4866 244.759 97.8951 251.167 97.8951 259.072 cv
cp
.890196 .678431 .14902 rgb
f
97.1539 259.072 mo
97.1539 266.568 91.0772 272.645 83.5813 272.645 cv
76.0854 272.645 70.0088 266.568 70.0088 259.072 cv
70.0088 251.576 76.0854 245.5 83.5813 245.5 cv
91.0772 245.5 97.1539 251.576 97.1539 259.072 cv
cp
.960784 .788235 .32549 rgb
f
77.6044 256.674 mo
77.6001 258.834 79.1715 260.246 82.5151 261.252 cv
84.9598 262.007 86.0268 262.44 86.025 263.417 cv
86.0234 264.212 85.1221 264.892 83.2668 264.888 cv
81.5462 264.884 80.899 264.513 80.1169 264.222 cv
80.0746 264.207 li
79.9354 264.154 li
79.9129 264.157 li
79.7863 264.123 79.656 264.099 79.5176 264.098 cv
78.6859 264.097 78.0097 264.758 78.008 265.574 cv
78.0061 266.286 78.5192 266.883 79.2022 267.024 cv
80.3084 267.401 81.1779 267.701 83.1769 267.705 cv
83.4272 267.699 li
83.4264 268.423 li
83.4249 269.081 83.957 269.615 84.6147 269.617 cv
85.2729 269.619 85.8067 269.086 85.8082 268.428 cv
85.8098 267.467 li
85.808 267.443 li
88.6813 266.829 90.3507 265.18 90.3547 263.13 cv
90.359 260.904 88.3103 259.492 85.1635 258.599 cv
82.8877 257.935 81.9887 257.388 81.9907 256.435 cv
81.9929 255.434 83.0345 254.778 85.0026 254.782 cv
86.6524 254.784 87.5669 255.155 88.7003 255.58 cv
88.8017 255.633 88.9087 255.676 89.0223 255.704 cv
89.0562 255.718 li
89.0614 255.717 li
89.1704 255.742 89.282 255.758 89.398 255.759 cv
90.2341 255.759 90.9125 255.087 90.9141 254.257 cv
90.9159 253.594 90.4797 253.035 89.8787 252.836 cv
88.8849 252.418 87.6202 252.014 85.8423 251.937 cv
85.844 251.081 li
85.8451 250.423 85.3135 249.888 84.6551 249.886 cv
83.9975 249.885 83.4633 250.418 83.462 251.075 cv
83.4596 252.014 li
79.4931 252.459 77.6098 254.425 77.6044 256.674 cv
cp
.890196 .678431 .14902 rgb
f
76.9249 255.995 mo
76.9206 258.154 78.492 259.566 81.8356 260.572 cv
84.2803 261.327 85.3473 261.76 85.3455 262.738 cv
85.3439 263.532 84.4426 264.212 82.5873 264.209 cv
80.8667 264.205 80.2196 263.833 79.4374 263.542 cv
79.3951 263.527 li
79.2559 263.475 li
79.2334 263.478 li
79.1068 263.443 78.9766 263.419 78.8382 263.419 cv
78.0064 263.417 77.3302 264.078 77.3285 264.894 cv
77.3266 265.607 77.8397 266.203 78.5227 266.345 cv
79.6289 266.721 80.4985 267.022 82.4974 267.026 cv
82.7477 267.019 li
82.7469 267.744 li
82.7454 268.402 83.2775 268.935 83.9352 268.937 cv
84.5934 268.939 85.1272 268.407 85.1287 267.749 cv
85.1303 266.788 li
85.1286 266.764 li
88.0018 266.15 89.6712 264.5 89.6752 262.45 cv
89.6796 260.224 87.6308 258.812 84.484 257.919 cv
82.2082 257.255 81.3092 256.709 81.3113 255.755 cv
81.3134 254.755 82.355 254.098 84.3231 254.103 cv
85.9729 254.105 86.8874 254.476 88.0208 254.9 cv
88.1222 254.953 88.2293 254.996 88.3428 255.025 cv
88.3767 255.038 li
88.3819 255.037 li
88.4909 255.062 88.6025 255.079 88.7185 255.079 cv
89.5546 255.079 90.233 254.408 90.2346 253.578 cv
90.2365 252.914 89.8002 252.356 89.1992 252.157 cv
88.2054 251.738 86.9407 251.334 85.1628 251.257 cv
85.1645 250.401 li
85.1656 249.743 84.634 249.209 83.9756 249.207 cv
83.318 249.206 82.7838 249.738 82.7825 250.396 cv
82.7801 251.334 li
78.8136 251.779 76.9303 253.745 76.9249 255.995 cv
cp
1 .909804 .54902 rgb
f
309.096 502.55 mo
303.579 502.55 li
303.579 481.723 li
309.096 481.72 li
309.096 502.55 li
123.92 332.5 mo
99.0556 332.5 li
99.0556 327.295 li
108.366 327.295 li
108.366 320.427 li
112.064 320.427 li
112.064 327.295 li
121.764 327.295 li
121.764 322.345 li
123.92 332.5 li
.211765 .564706 .670588 rgb
f
129.468 332.5 mo
123.92 332.5 li
121.764 322.345 li
121.764 320.427 li
125.462 320.427 li
125.462 327.295 li
128.506 327.295 li
129.184 330.491 li
129.047 330.52 li
129.468 332.5 li
131.526 329.993 mo
130.954 327.295 li
135.056 327.295 li
135.056 320.427 li
138.754 320.427 li
138.754 327.295 li
144.234 327.295 li
131.526 329.993 li
148.348 326.422 mo
148.348 320.427 li
152.046 320.427 li
152.046 325.637 li
148.348 326.422 li
161.64 323.6 mo
161.64 320.427 li
164.804 320.427 li
164.805 322.928 li
161.64 323.6 li
.760784 .772549 .784314 rgb
f
164.811 332.5 mo
129.468 332.5 li
129.047 330.52 li
129.184 330.491 li
128.506 327.295 li
130.954 327.295 li
131.526 329.993 li
144.234 327.295 li
148.348 327.295 li
148.348 326.422 li
152.046 325.637 li
152.046 327.295 li
161.64 327.295 li
161.64 323.6 li
164.805 322.928 li
164.811 332.5 li
.588235 .619608 .666667 rgb
f
303.579 481.723 mo
303.579 471.229 li
309.096 476.052 li
309.096 481.72 li
303.579 481.723 li
306.016 456.536 mo
306.246 455.837 306.053 455.038 305.464 454.524 cv
305.106 454.212 304.664 454.058 304.223 454.058 cv
304.005 454.058 303.787 454.096 303.579 454.171 cv
303.579 427.756 li
305.235 420.275 305.222 412.521 303.579 405.083 cv
303.579 390.23 li
309.096 390.226 li
309.096 455.364 li
308.834 455.178 308.522 455.088 308.198 455.088 cv
307.642 455.088 307.049 455.353 306.612 455.853 cv
306.016 456.536 li
174.425 332.5 mo
164.811 332.5 li
164.805 322.928 li
164.804 320.427 li
165.338 320.427 li
165.338 327.295 li
174.421 327.295 li
174.425 332.5 li
176.832 330.683 mo
176.826 320.427 li
178.631 320.427 li
178.631 327.295 li
188.224 327.295 li
188.224 320.427 li
191.923 320.427 li
191.923 327.295 li
201.516 327.295 li
201.516 320.427 li
205.215 320.427 li
205.215 327.295 li
214.809 327.295 li
214.809 320.427 li
218.507 320.427 li
218.507 327.295 li
228.101 327.295 li
228.101 320.427 li
231.799 320.427 li
231.799 327.295 li
241.393 327.295 li
241.393 320.427 li
245.091 320.427 li
245.091 327.295 li
254.685 327.295 li
254.685 320.427 li
258.383 320.427 li
258.383 327.295 li
267.977 327.295 li
267.977 320.427 li
271.676 320.427 li
271.676 327.295 li
280.955 327.295 li
280.957 330.619 li
176.832 330.683 li
.8 .8 .8 rgb
f
280.959 332.5 mo
174.425 332.5 li
174.421 327.295 li
174.932 327.295 li
174.932 320.427 li
176.826 320.427 li
176.832 330.683 li
280.957 330.619 li
280.959 332.5 li
.588235 .627451 .670588 rgb
f
303.579 387.628 mo
303.579 375.738 li
309.096 375.734 li
309.096 387.625 li
303.579 387.628 li
303.579 358.991 mo
303.579 347.312 li
309.096 347.309 li
309.096 357.063 li
309.096 358.988 li
303.579 358.991 li
283.366 330.617 mo
283.36 320.427 li
284.968 320.427 li
284.968 327.295 li
294.562 327.295 li
294.562 320.427 li
298.26 320.427 li
298.26 327.295 li
309.096 327.295 li
309.096 330.601 li
283.366 330.617 li
.8 .8 .8 rgb
f
303.579 344.692 mo
303.579 333.201 li
309.096 333.197 li
309.096 344.689 li
303.579 344.692 li
.588235 .627451 .670588 rgb
f
303.579 373.326 mo
303.579 361.435 li
309.096 361.431 li
309.096 373.322 li
303.579 373.326 li
f
303.579 387.821 mo
303.579 387.628 li
309.096 387.625 li
309.096 387.818 li
303.579 387.821 li
303.579 375.738 mo
303.579 373.326 li
309.096 373.322 li
309.096 375.734 li
303.579 375.738 li
303.579 361.435 mo
303.579 358.991 li
309.096 358.988 li
309.096 361.431 li
303.579 361.435 li
303.579 347.312 mo
303.579 344.692 li
309.096 344.689 li
309.096 347.309 li
303.579 347.312 li
303.579 333.201 mo
303.579 332.5 li
283.367 332.5 li
283.366 330.617 li
309.096 330.601 li
309.096 333.197 li
303.579 333.201 li
f
303.579 390.23 mo
303.579 387.821 li
309.096 387.818 li
309.096 390.226 li
303.579 390.23 li
283.367 332.5 mo
280.959 332.5 li
280.957 330.619 li
280.955 327.295 li
281.27 327.295 li
281.27 320.427 li
283.36 320.427 li
283.366 330.617 li
283.367 332.5 li
f
303.579 507.755 mo
93.5392 507.755 li
93.5392 332.5 li
303.579 332.5 li
303.579 507.755 li
1 1 1 rgb
f
303.579 362.268 mo
93.5392 362.268 li
93.5392 332.5 li
303.579 332.5 li
303.579 362.268 li
cp
.929412 .478431 .172549 rgb
f
109.58 344.59 mo
109.58 346.835 107.76 348.655 105.514 348.655 cv
103.269 348.655 101.449 346.835 101.449 344.59 cv
101.449 342.344 103.269 340.524 105.514 340.524 cv
107.76 340.524 109.58 342.344 109.58 344.59 cv
cp
.4 .4 .4 rgb
f
122.872 344.59 mo
122.872 346.835 121.052 348.655 118.806 348.655 cv
116.561 348.655 114.741 346.835 114.741 344.59 cv
114.741 342.344 116.561 340.524 118.806 340.524 cv
121.052 340.524 122.872 342.344 122.872 344.59 cv
cp
f
136.164 344.59 mo
136.164 346.835 134.344 348.655 132.099 348.655 cv
129.853 348.655 128.033 346.835 128.033 344.59 cv
128.033 342.344 129.853 340.524 132.099 340.524 cv
134.344 340.524 136.164 342.344 136.164 344.59 cv
cp
f
149.456 344.59 mo
149.456 346.835 147.636 348.655 145.391 348.655 cv
143.145 348.655 141.325 346.835 141.325 344.59 cv
141.325 342.344 143.145 340.524 145.391 340.524 cv
147.636 340.524 149.456 342.344 149.456 344.59 cv
cp
f
162.749 344.59 mo
162.749 346.835 160.928 348.655 158.683 348.655 cv
156.437 348.655 154.617 346.835 154.617 344.59 cv
154.617 342.344 156.437 340.524 158.683 340.524 cv
160.928 340.524 162.749 342.344 162.749 344.59 cv
cp
f
176.041 344.59 mo
176.041 346.835 174.22 348.655 171.975 348.655 cv
169.73 348.655 167.909 346.835 167.909 344.59 cv
167.909 342.344 169.73 340.524 171.975 340.524 cv
174.22 340.524 176.041 342.344 176.041 344.59 cv
cp
f
189.333 344.59 mo
189.333 346.835 187.513 348.655 185.267 348.655 cv
183.022 348.655 181.201 346.835 181.201 344.59 cv
181.201 342.344 183.022 340.524 185.267 340.524 cv
187.513 340.524 189.333 342.344 189.333 344.59 cv
cp
f
202.625 344.59 mo
202.625 346.835 200.805 348.655 198.559 348.655 cv
196.314 348.655 194.494 346.835 194.494 344.59 cv
194.494 342.344 196.314 340.524 198.559 340.524 cv
200.805 340.524 202.625 342.344 202.625 344.59 cv
cp
f
215.917 344.59 mo
215.917 346.835 214.097 348.655 211.852 348.655 cv
209.606 348.655 207.786 346.835 207.786 344.59 cv
207.786 342.344 209.606 340.524 211.852 340.524 cv
214.097 340.524 215.917 342.344 215.917 344.59 cv
cp
f
229.209 344.59 mo
229.209 346.835 227.389 348.655 225.144 348.655 cv
222.898 348.655 221.078 346.835 221.078 344.59 cv
221.078 342.344 222.898 340.524 225.144 340.524 cv
227.389 340.524 229.209 342.344 229.209 344.59 cv
cp
f
242.502 344.59 mo
242.502 346.835 240.681 348.655 238.436 348.655 cv
236.19 348.655 234.37 346.835 234.37 344.59 cv
234.37 342.344 236.19 340.524 238.436 340.524 cv
240.681 340.524 242.502 342.344 242.502 344.59 cv
cp
f
255.794 344.59 mo
255.794 346.835 253.973 348.655 251.728 348.655 cv
249.483 348.655 247.662 346.835 247.662 344.59 cv
247.662 342.344 249.483 340.524 251.728 340.524 cv
253.973 340.524 255.794 342.344 255.794 344.59 cv
cp
f
269.086 344.59 mo
269.086 346.835 267.266 348.655 265.02 348.655 cv
262.775 348.655 260.954 346.835 260.954 344.59 cv
260.954 342.344 262.775 340.524 265.02 340.524 cv
267.266 340.524 269.086 342.344 269.086 344.59 cv
cp
f
282.378 344.59 mo
282.378 346.835 280.558 348.655 278.312 348.655 cv
276.067 348.655 274.247 346.835 274.247 344.59 cv
274.247 342.344 276.067 340.524 278.312 340.524 cv
280.558 340.524 282.378 342.344 282.378 344.59 cv
cp
f
295.67 344.59 mo
295.67 346.835 293.85 348.655 291.604 348.655 cv
289.359 348.655 287.539 346.835 287.539 344.59 cv
287.539 342.344 289.359 340.524 291.604 340.524 cv
293.85 340.524 295.67 342.344 295.67 344.59 cv
cp
f
107.311 344.203 mo
103.612 344.203 li
103.612 325.632 li
107.311 325.632 li
107.311 344.203 li
cp
1 1 1 rgb
f
120.708 344.203 mo
117.01 344.203 li
117.01 325.632 li
120.708 325.632 li
120.708 344.203 li
cp
f
134.001 344.203 mo
130.302 344.203 li
130.302 325.632 li
134.001 325.632 li
134.001 344.203 li
cp
f
147.293 344.203 mo
143.594 344.203 li
143.594 325.632 li
147.293 325.632 li
147.293 344.203 li
cp
f
160.585 344.203 mo
156.887 344.203 li
156.887 325.632 li
160.585 325.632 li
160.585 344.203 li
cp
f
173.877 344.203 mo
170.179 344.203 li
170.179 325.632 li
173.877 325.632 li
173.877 344.203 li
cp
f
187.169 344.203 mo
183.471 344.203 li
183.471 325.632 li
187.169 325.632 li
187.169 344.203 li
cp
f
200.461 344.203 mo
196.763 344.203 li
196.763 325.632 li
200.461 325.632 li
200.461 344.203 li
cp
f
213.754 344.203 mo
210.055 344.203 li
210.055 325.632 li
213.754 325.632 li
213.754 344.203 li
cp
f
227.046 344.203 mo
223.347 344.203 li
223.347 325.632 li
227.046 325.632 li
227.046 344.203 li
cp
f
240.338 344.203 mo
236.64 344.203 li
236.64 325.632 li
240.338 325.632 li
240.338 344.203 li
cp
f
253.63 344.203 mo
249.932 344.203 li
249.932 325.632 li
253.63 325.632 li
253.63 344.203 li
cp
f
266.922 344.203 mo
263.224 344.203 li
263.224 325.632 li
266.922 325.632 li
266.922 344.203 li
cp
f
280.214 344.203 mo
276.516 344.203 li
276.516 325.632 li
280.214 325.632 li
280.214 344.203 li
cp
f
293.507 344.203 mo
289.808 344.203 li
289.808 325.632 li
293.507 325.632 li
293.507 344.203 li
cp
f
250.828 423.871 mo
215.75 423.871 li
215.75 400.53 li
250.828 400.53 li
250.828 423.871 li
1 .329412 .211765 rgb
f
251.696 399.842 mo
251.696 378.626 li
284.752 378.626 li
284.752 399.842 li
251.696 399.842 li
284.752 422.835 mo
251.696 422.835 li
251.696 401.887 li
284.752 401.887 li
284.752 422.835 li
284.752 445.828 mo
251.696 445.828 li
251.696 424.879 li
284.752 424.879 li
284.752 445.828 li
284.752 468.821 mo
251.696 468.821 li
251.696 447.873 li
284.752 447.873 li
284.752 468.821 li
284.752 492.082 mo
251.696 492.082 li
251.696 470.866 li
284.752 470.866 li
284.752 492.082 li
249.919 492.082 mo
216.864 492.082 li
216.864 470.866 li
249.919 470.866 li
249.919 492.082 li
215.087 492.082 mo
182.032 492.082 li
182.032 470.866 li
215.087 470.866 li
215.087 492.082 li
180.255 492.082 mo
147.2 492.082 li
147.2 470.866 li
180.255 470.866 li
180.255 492.082 li
145.422 492.082 mo
112.367 492.082 li
112.367 470.866 li
145.422 470.866 li
145.422 492.082 li
112.367 447.873 mo
145.422 447.873 li
145.422 468.821 li
112.367 468.821 li
112.367 447.873 li
112.367 424.879 mo
145.422 424.879 li
145.422 445.828 li
112.367 445.828 li
112.367 424.879 li
112.367 401.887 mo
145.422 401.887 li
145.422 422.835 li
112.367 422.835 li
112.367 401.887 li
112.367 378.626 mo
145.422 378.626 li
145.422 399.842 li
112.367 399.842 li
112.367 378.626 li
147.2 378.626 mo
180.255 378.626 li
180.255 399.842 li
147.2 399.842 li
147.2 378.626 li
182.032 378.626 mo
215.087 378.626 li
215.087 399.842 li
182.032 399.842 li
182.032 378.626 li
182.032 468.821 mo
182.032 447.873 li
215.087 447.873 li
215.087 468.821 li
182.032 468.821 li
215.087 445.828 mo
182.032 445.828 li
182.032 424.879 li
215.087 424.879 li
215.087 445.828 li
215.087 401.887 mo
215.087 422.835 li
182.032 422.835 li
182.032 401.887 li
215.087 401.887 li
147.2 401.887 mo
180.255 401.887 li
180.255 422.835 li
147.2 422.835 li
147.2 401.887 li
147.2 424.879 mo
180.255 424.879 li
180.255 445.828 li
147.2 445.828 li
147.2 424.879 li
147.2 468.821 mo
147.2 447.873 li
180.255 447.873 li
180.255 468.821 li
147.2 468.821 li
249.919 468.821 mo
216.864 468.821 li
216.864 447.873 li
249.919 447.873 li
249.919 468.821 li
249.919 445.828 mo
216.864 445.828 li
216.864 424.879 li
249.919 424.879 li
249.919 445.828 li
249.919 422.835 mo
216.864 422.835 li
216.864 401.887 li
249.919 401.887 li
249.919 422.835 li
216.864 378.626 mo
249.919 378.626 li
249.919 399.842 li
216.864 399.842 li
216.864 378.626 li
251.696 376.849 mo
249.919 376.849 li
216.864 376.849 li
215.087 376.849 li
182.032 376.849 li
180.255 376.849 li
147.2 376.849 li
145.422 376.849 li
110.59 376.849 li
110.59 399.842 li
110.59 401.887 li
110.59 422.835 li
110.59 424.879 li
110.59 445.828 li
110.59 447.873 li
110.59 468.821 li
110.59 470.866 li
110.59 493.859 li
145.422 493.859 li
147.2 493.859 li
180.255 493.859 li
182.032 493.859 li
215.087 493.859 li
216.864 493.859 li
249.919 493.859 li
251.696 493.859 li
286.529 493.859 li
286.529 470.866 li
286.529 468.821 li
286.529 447.873 li
286.529 445.828 li
286.529 424.879 li
286.529 422.835 li
286.529 401.887 li
286.529 399.842 li
286.529 376.849 li
251.696 376.849 li
.329412 .513726 .580392 rgb
f
121.318 385.529 mo
115.75 385.529 li
115.75 381.175 li
121.318 381.175 li
121.318 385.529 li
cp
f
156.057 385.529 mo
150.488 385.529 li
150.488 381.175 li
156.057 381.175 li
156.057 385.529 li
cp
f
190.795 385.529 mo
185.227 385.529 li
185.227 381.175 li
190.795 381.175 li
190.795 385.529 li
cp
f
225.533 385.529 mo
219.965 385.529 li
219.965 381.175 li
225.533 381.175 li
225.533 385.529 li
f
260.272 385.529 mo
254.703 385.529 li
254.703 381.175 li
260.272 381.175 li
260.272 385.529 li
f
121.278 409.031 mo
115.71 409.031 li
115.71 404.678 li
121.278 404.678 li
121.278 409.031 li
cp
f
156.017 409.031 mo
150.448 409.031 li
150.448 404.678 li
156.017 404.678 li
156.017 409.031 li
cp
f
190.755 409.031 mo
185.187 409.031 li
185.187 404.678 li
190.755 404.678 li
190.755 409.031 li
cp
f
225.493 409.031 mo
219.925 409.031 li
219.925 404.678 li
225.493 404.678 li
225.493 409.031 li
f
260.232 409.031 mo
254.664 409.031 li
254.664 404.678 li
260.232 404.678 li
260.232 409.031 li
f
121.278 432.415 mo
115.71 432.415 li
115.71 428.061 li
121.278 428.061 li
121.278 432.415 li
cp
f
156.017 432.415 mo
150.448 432.415 li
150.448 428.061 li
156.017 428.061 li
156.017 432.415 li
cp
f
190.755 432.415 mo
185.187 432.415 li
185.187 428.061 li
190.755 428.061 li
190.755 432.415 li
cp
f
225.493 432.415 mo
219.925 432.415 li
219.925 428.061 li
225.493 428.061 li
225.493 432.415 li
f
260.232 432.415 mo
254.664 432.415 li
254.664 428.061 li
260.232 428.061 li
260.232 432.415 li
f
121.278 455.431 mo
115.71 455.431 li
115.71 451.077 li
121.278 451.077 li
121.278 455.431 li
cp
f
156.017 455.431 mo
150.448 455.431 li
150.448 451.077 li
156.017 451.077 li
156.017 455.431 li
cp
f
190.755 455.431 mo
185.187 455.431 li
185.187 451.077 li
190.755 451.077 li
190.755 455.431 li
cp
f
225.493 455.431 mo
219.925 455.431 li
219.925 451.077 li
225.493 451.077 li
225.493 455.431 li
f
260.232 455.431 mo
254.664 455.431 li
254.664 451.077 li
260.232 451.077 li
260.232 455.431 li
f
121.278 478.824 mo
115.71 478.824 li
115.71 474.47 li
121.278 474.47 li
121.278 478.824 li
cp
f
156.017 478.824 mo
150.448 478.824 li
150.448 474.47 li
156.017 474.47 li
156.017 478.824 li
cp
f
190.755 478.824 mo
185.187 478.824 li
185.187 474.47 li
190.755 474.47 li
190.755 478.824 li
cp
f
225.493 478.824 mo
219.925 478.824 li
219.925 474.47 li
225.493 474.47 li
225.493 478.824 li
cp
f
260.232 478.824 mo
254.663 478.824 li
254.663 474.47 li
260.232 474.47 li
260.232 478.824 li
cp
f
354.638 515.351 mo
354.265 515.351 353.909 515.232 353.626 514.985 cv
315.574 481.716 li
339.231 481.701 li
363.876 503.249 li
364.58 503.864 364.56 505.041 363.83 505.877 cv
356.223 514.586 li
355.786 515.086 355.194 515.351 354.638 515.351 cv
.211765 .564706 .670588 rgb
f
315.574 481.716 mo
309.096 476.052 li
309.096 455.364 li
309.135 455.391 309.173 455.421 309.21 455.453 cv
339.231 481.701 li
315.574 481.716 li
.8 .8 .8 rgb
f
309.096 476.052 mo
303.579 471.229 li
303.579 454.171 li
303.787 454.096 304.005 454.058 304.223 454.058 cv
304.664 454.058 305.106 454.212 305.464 454.524 cv
306.053 455.038 306.246 455.837 306.016 456.536 cv
306.612 455.853 li
307.049 455.353 307.642 455.088 308.198 455.088 cv
308.522 455.088 308.834 455.178 309.096 455.364 cv
309.096 476.052 li
303.579 427.756 mo
303.579 405.083 li
305.222 412.521 305.235 420.275 303.579 427.756 cv
.639216 .639216 .639216 rgb
f
303.579 471.229 mo
298.96 467.19 li
298.255 466.575 298.276 465.398 299.006 464.562 cv
299.598 463.884 li
299.339 464.01 299.056 464.074 298.771 464.074 cv
298.331 464.074 297.888 463.92 297.531 463.608 cv
296.746 462.922 296.665 461.73 297.351 460.945 cv
298.127 460.056 li
297.782 460.413 297.318 460.597 296.853 460.597 cv
296.443 460.597 296.031 460.454 295.698 460.163 cv
295.14 459.675 294.963 458.915 295.19 458.256 cv
289.54 453.321 li
288.566 454.295 287.561 455.224 286.529 456.106 cv
286.529 447.873 li
286.529 445.828 li
286.529 443.874 li
287.452 442.484 288.29 441.057 289.043 439.599 cv
293.986 431.878 296.327 422.816 295.697 413.5 cv
295.101 404.686 291.901 396.454 286.529 389.677 cv
286.529 376.849 li
269.865 376.849 li
265.276 374.856 260.423 373.707 255.538 373.385 cv
253.161 373.01 250.764 372.823 248.368 372.823 cv
241.927 372.823 235.5 374.176 229.553 376.849 cv
218.601 376.849 li
227.109 369.494 237.718 365.11 249.137 364.338 cv
250.342 364.257 251.544 364.216 252.74 364.216 cv
265.359 364.216 277.398 368.725 286.989 377.101 cv
295.694 384.703 301.26 394.581 303.579 405.083 cv
303.579 427.756 li
301.994 434.922 298.877 441.838 294.194 447.989 cv
299.846 452.925 li
300.095 452.8 300.369 452.736 300.644 452.736 cv
301.055 452.736 301.469 452.879 301.804 453.172 cv
302.516 453.794 302.603 454.858 302.025 455.594 cv
302.801 454.704 li
303.019 454.454 303.288 454.276 303.579 454.171 cv
303.579 471.229 li
252.624 468.578 mo
252.315 468.578 252.006 468.576 251.696 468.57 cv
251.696 464.26 li
263.294 463.41 274.577 458.168 282.83 448.717 cv
283.074 448.438 283.315 448.156 283.55 447.873 cv
284.752 447.873 li
284.752 457.558 li
275.408 464.855 264.039 468.578 252.624 468.578 cv
249.919 468.509 mo
238.64 467.928 227.473 463.709 218.325 455.72 cv
217.828 455.285 217.341 454.844 216.864 454.395 cv
216.864 451.837 li
217.311 452.26 217.768 452.676 218.236 453.084 cv
218.79 453.568 219.354 454.038 219.925 454.491 cv
219.925 455.431 li
221.151 455.431 li
229.26 461.433 238.813 464.384 248.331 464.384 cv
248.86 464.384 249.39 464.374 249.919 464.356 cv
249.919 468.509 li
215.087 452.64 mo
213.617 451.119 212.258 449.527 211.008 447.873 cv
213.14 447.873 li
213.762 448.618 214.412 449.35 215.087 450.062 cv
215.087 452.64 li
211.533 445.828 mo
209.54 445.828 li
205.191 439.452 202.391 432.282 201.18 424.879 cv
203.002 424.879 li
204.03 432.335 206.891 439.563 211.533 445.828 cv
202.766 422.835 mo
200.887 422.835 li
200.025 415.858 200.562 408.719 202.53 401.887 cv
205.718 401.887 li
203.083 408.607 202.113 415.791 202.766 422.835 cv
206.577 399.842 mo
203.165 399.842 li
205.284 393.484 208.67 387.434 213.347 382.079 cv
213.913 381.431 214.494 380.797 215.087 380.181 cv
215.087 387.148 li
214.674 387.585 214.268 388.032 213.869 388.489 cv
210.814 391.986 208.387 395.816 206.577 399.842 cv
284.752 387.576 mo
283.595 386.294 282.354 385.073 281.033 383.919 cv
278.664 381.85 276.131 380.086 273.481 378.626 cv
284.752 378.626 li
284.752 387.576 li
216.864 385.366 mo
216.864 378.626 li
226.018 378.626 li
224.633 379.399 223.282 380.249 221.97 381.175 cv
219.965 381.175 li
219.965 382.675 li
218.9 383.518 217.865 384.416 216.864 385.366 cv
.8 .8 .8 rgb
f
251.696 468.57 mo
251.104 468.56 250.511 468.539 249.919 468.509 cv
249.919 464.356 li
250.512 464.336 251.104 464.304 251.696 464.26 cv
251.696 468.57 li
284.752 457.558 mo
284.752 447.873 li
283.55 447.873 li
284.627 446.58 285.618 445.246 286.529 443.874 cv
286.529 445.828 li
286.529 447.873 li
286.529 456.106 li
285.945 456.605 285.353 457.088 284.752 457.558 cv
216.864 454.395 mo
216.255 453.822 215.662 453.236 215.087 452.64 cv
215.087 450.062 li
215.66 450.667 216.252 451.258 216.864 451.837 cv
216.864 454.395 li
213.14 447.873 mo
211.008 447.873 li
210.5 447.201 210.011 446.52 209.54 445.828 cv
211.533 445.828 li
212.048 446.523 212.582 447.203 213.14 447.873 cv
203.002 424.879 mo
201.18 424.879 li
201.069 424.199 200.971 423.518 200.887 422.835 cv
202.766 422.835 li
202.829 423.517 202.908 424.2 203.002 424.879 cv
205.718 401.887 mo
202.53 401.887 li
202.728 401.201 202.939 400.521 203.165 399.842 cv
206.577 399.842 li
206.274 400.518 205.987 401.2 205.718 401.887 cv
286.529 389.677 mo
285.961 388.961 285.368 388.259 284.752 387.576 cv
284.752 378.626 li
273.481 378.626 li
272.297 377.973 271.091 377.381 269.865 376.849 cv
286.529 376.849 li
286.529 389.677 li
215.087 387.148 mo
215.087 380.181 li
216.213 379.011 217.385 377.899 218.601 376.849 cv
229.553 376.849 li
228.353 377.388 227.175 377.979 226.018 378.626 cv
216.864 378.626 li
216.864 385.366 li
216.258 385.941 215.667 386.534 215.087 387.148 cv
.262745 .411765 .462745 rgb
f
219.965 382.675 mo
219.965 381.175 li
221.97 381.175 li
221.291 381.654 220.621 382.155 219.965 382.675 cv
f
221.151 455.431 mo
219.925 455.431 li
219.925 454.491 li
220.331 454.812 220.738 455.125 221.151 455.431 cv
f
291.83 461.275 mo
283.168 453.71 li
287.823 448.38 li
296.485 455.945 li
291.83 461.275 li
cp
.870588 .870588 .870588 rgb
f
252.615 459.549 mo
252.308 459.549 252.002 459.546 251.696 459.539 cv
251.696 447.873 li
282.176 447.873 li
274.929 454.696 265.627 458.77 255.566 459.45 cv
254.58 459.516 253.594 459.549 252.615 459.549 cv
254.664 451.077 mo
254.664 455.431 li
260.232 455.431 li
260.232 451.077 li
254.664 451.077 li
249.919 459.466 mo
240.471 458.882 231.528 455.231 224.28 448.901 cv
223.894 448.564 223.515 448.221 223.144 447.873 cv
249.919 447.873 li
249.919 459.466 li
284.208 445.828 mo
251.696 445.828 li
251.696 424.879 li
284.752 424.879 li
284.752 445.234 li
284.572 445.434 284.391 445.632 284.208 445.828 cv
254.664 428.061 mo
254.664 432.415 li
260.232 432.415 li
260.232 428.061 li
254.664 428.061 li
249.919 445.828 mo
221.103 445.828 li
219.531 444.145 218.119 442.362 216.864 440.497 cv
216.864 424.879 li
249.919 424.879 li
249.919 445.828 li
219.925 428.061 mo
219.925 432.415 li
225.493 432.415 li
225.493 428.061 li
219.925 428.061 li
286.529 443.125 mo
286.529 424.879 li
286.529 422.835 li
286.529 401.887 li
286.529 399.842 li
286.529 393.321 li
295.653 407.082 296.651 424.88 289.043 439.599 cv
288.268 440.809 287.43 441.985 286.529 443.125 cv
215.087 437.615 mo
212.831 433.61 211.257 429.306 210.376 424.879 cv
215.087 424.879 li
215.087 437.615 li
284.752 422.835 mo
251.696 422.835 li
251.696 401.887 li
284.752 401.887 li
284.752 422.835 li
254.664 404.678 mo
254.664 409.031 li
260.232 409.031 li
260.232 404.678 li
254.664 404.678 li
215.087 422.835 mo
210.019 422.835 li
208.972 415.854 209.629 408.643 212.036 401.887 cv
215.087 401.887 li
215.087 422.835 li
284.752 399.842 mo
251.696 399.842 li
251.696 378.626 li
270.676 378.626 li
273.404 380.153 276.015 381.984 278.464 384.122 cv
280.823 386.183 282.92 388.431 284.752 390.827 cv
284.752 399.842 li
254.703 381.175 mo
254.703 385.529 li
260.272 385.529 li
260.272 381.175 li
254.703 381.175 li
249.919 399.842 mo
216.864 399.842 li
216.864 392.326 li
217.862 390.845 218.962 389.412 220.166 388.033 cv
220.928 387.16 221.718 386.326 222.534 385.529 cv
225.533 385.529 li
225.533 382.86 li
227.527 381.247 229.638 379.834 231.836 378.626 cv
249.919 378.626 li
249.919 399.842 li
215.087 399.842 mo
212.823 399.842 li
213.479 398.263 214.234 396.712 215.087 395.201 cv
215.087 399.842 li
267.15 376.849 mo
251.696 376.849 li
249.919 376.849 li
235.464 376.849 li
240.924 374.486 246.796 373.291 252.684 373.291 cv
253.635 373.291 254.587 373.322 255.538 373.385 cv
259.505 374.012 263.411 375.164 267.15 376.849 cv
.843137 .941176 1 rgb
f
249.919 422.835 mo
216.864 422.835 li
216.864 401.887 li
249.919 401.887 li
249.919 422.835 li
219.925 404.678 mo
219.925 409.031 li
225.493 409.031 li
225.493 404.678 li
219.925 404.678 li
.843137 .470588 .45098 rgb
f
251.696 459.539 mo
251.102 459.527 250.51 459.502 249.919 459.466 cv
249.919 447.873 li
223.144 447.873 li
222.436 447.21 221.756 446.528 221.103 445.828 cv
249.919 445.828 li
249.919 424.879 li
216.864 424.879 li
216.864 440.497 li
216.231 439.557 215.638 438.594 215.087 437.615 cv
215.087 424.879 li
210.376 424.879 li
210.241 424.201 210.121 423.518 210.019 422.835 cv
215.087 422.835 li
215.087 401.887 li
212.036 401.887 li
212.28 401.2 212.542 400.519 212.823 399.842 cv
215.087 399.842 li
215.087 395.201 li
215.638 394.226 216.23 393.266 216.864 392.326 cv
216.864 399.842 li
249.919 399.842 li
249.919 378.626 li
231.836 378.626 li
233.022 377.974 234.232 377.382 235.464 376.849 cv
249.919 376.849 li
251.696 376.849 li
267.15 376.849 li
268.343 377.386 269.521 377.979 270.676 378.626 cv
251.696 378.626 li
251.696 399.842 li
284.752 399.842 li
284.752 390.827 li
285.374 391.641 285.967 392.474 286.529 393.321 cv
286.529 399.842 li
286.529 401.887 li
286.529 422.835 li
286.529 424.879 li
286.529 443.125 li
286.084 443.688 285.624 444.242 285.149 444.786 cv
285.017 444.936 284.885 445.086 284.752 445.234 cv
284.752 424.879 li
251.696 424.879 li
251.696 445.828 li
284.208 445.828 li
283.551 446.535 282.873 447.217 282.176 447.873 cv
251.696 447.873 li
251.696 459.539 li
251.696 401.887 mo
251.696 422.835 li
284.752 422.835 li
284.752 401.887 li
251.696 401.887 li
216.864 401.887 mo
216.864 422.835 li
249.919 422.835 li
249.919 401.887 li
216.864 401.887 li
.372549 .6 .705882 rgb
f
225.533 385.529 mo
222.534 385.529 li
223.499 384.586 224.501 383.695 225.533 382.86 cv
225.533 385.529 li
f
260.272 385.529 mo
254.703 385.529 li
254.703 381.175 li
260.272 381.175 li
260.272 385.529 li
f
225.493 409.031 mo
219.925 409.031 li
219.925 404.678 li
225.493 404.678 li
225.493 409.031 li
f
260.232 409.031 mo
254.664 409.031 li
254.664 404.678 li
260.232 404.678 li
260.232 409.031 li
f
225.493 432.415 mo
219.925 432.415 li
219.925 428.061 li
225.493 428.061 li
225.493 432.415 li
f
260.232 432.415 mo
254.664 432.415 li
254.664 428.061 li
260.232 428.061 li
260.232 432.415 li
f
260.232 455.431 mo
254.664 455.431 li
254.664 451.077 li
260.232 451.077 li
260.232 455.431 li
f
248.331 464.384 mo
238.813 464.384 229.26 461.433 221.151 455.431 cv
225.493 455.431 li
225.493 451.077 li
219.925 451.077 li
219.925 454.491 li
219.354 454.038 218.79 453.568 218.236 453.084 cv
217.768 452.676 217.311 452.26 216.864 451.837 cv
216.864 447.873 li
223.144 447.873 li
223.515 448.221 223.894 448.564 224.28 448.901 cv
231.528 455.231 240.471 458.882 249.919 459.466 cv
249.919 464.356 li
249.39 464.374 248.86 464.384 248.331 464.384 cv
251.696 464.26 mo
251.696 459.539 li
252.002 459.546 252.308 459.549 252.615 459.549 cv
253.594 459.549 254.58 459.516 255.566 459.45 cv
265.627 458.77 274.929 454.696 282.176 447.873 cv
283.55 447.873 li
283.315 448.156 283.074 448.438 282.83 448.717 cv
274.577 458.168 263.294 463.41 251.696 464.26 cv
215.087 450.062 mo
214.412 449.35 213.762 448.618 213.14 447.873 cv
215.087 447.873 li
215.087 450.062 li
284.752 445.828 mo
284.208 445.828 li
284.391 445.632 284.572 445.434 284.752 445.234 cv
284.752 445.828 li
221.103 445.828 mo
216.864 445.828 li
216.864 440.497 li
218.119 442.362 219.531 444.145 221.103 445.828 cv
215.087 445.828 mo
211.533 445.828 li
206.891 439.563 204.03 432.335 203.002 424.879 cv
210.376 424.879 li
211.257 429.306 212.831 433.61 215.087 437.615 cv
215.087 445.828 li
286.529 443.874 mo
286.529 443.125 li
287.43 441.985 288.268 440.809 289.043 439.599 cv
288.29 441.057 287.452 442.484 286.529 443.874 cv
210.019 422.835 mo
202.766 422.835 li
202.113 415.791 203.083 408.607 205.718 401.887 cv
212.036 401.887 li
209.629 408.643 208.972 415.854 210.019 422.835 cv
212.823 399.842 mo
206.577 399.842 li
208.387 395.816 210.814 391.986 213.869 388.489 cv
214.268 388.032 214.674 387.585 215.087 387.148 cv
215.087 395.201 li
214.234 396.712 213.479 398.263 212.823 399.842 cv
216.864 392.326 mo
216.864 385.366 li
217.865 384.416 218.9 383.518 219.965 382.675 cv
219.965 385.529 li
222.534 385.529 li
221.718 386.326 220.928 387.16 220.166 388.033 cv
218.962 389.412 217.862 390.845 216.864 392.326 cv
.701961 .8 .858823 rgb
f
249.919 464.356 mo
249.919 459.466 li
250.51 459.502 251.102 459.527 251.696 459.539 cv
251.696 464.26 li
251.104 464.304 250.512 464.336 249.919 464.356 cv
216.864 451.837 mo
216.252 451.258 215.66 450.667 215.087 450.062 cv
215.087 447.873 li
213.14 447.873 li
212.582 447.203 212.048 446.523 211.533 445.828 cv
215.087 445.828 li
215.087 437.615 li
215.638 438.594 216.231 439.557 216.864 440.497 cv
216.864 445.828 li
221.103 445.828 li
221.756 446.528 222.436 447.21 223.144 447.873 cv
216.864 447.873 li
216.864 451.837 li
283.55 447.873 mo
282.176 447.873 li
282.873 447.217 283.551 446.535 284.208 445.828 cv
284.752 445.828 li
284.752 445.234 li
284.885 445.086 285.017 444.936 285.149 444.786 cv
285.624 444.242 286.084 443.688 286.529 443.125 cv
286.529 443.874 li
285.618 445.246 284.627 446.58 283.55 447.873 cv
210.376 424.879 mo
203.002 424.879 li
202.908 424.2 202.829 423.517 202.766 422.835 cv
210.019 422.835 li
210.121 423.518 210.241 424.201 210.376 424.879 cv
212.036 401.887 mo
205.718 401.887 li
205.987 401.2 206.274 400.518 206.577 399.842 cv
212.823 399.842 li
212.542 400.519 212.28 401.2 212.036 401.887 cv
215.087 395.201 mo
215.087 387.148 li
215.667 386.534 216.258 385.941 216.864 385.366 cv
216.864 392.326 li
216.23 393.266 215.638 394.226 215.087 395.201 cv
.329412 .529412 .623529 rgb
f
225.533 382.86 mo
225.533 381.175 li
221.97 381.175 li
223.282 380.249 224.633 379.399 226.018 378.626 cv
231.836 378.626 li
229.638 379.834 227.527 381.247 225.533 382.86 cv
235.464 376.849 mo
229.553 376.849 li
235.5 374.176 241.927 372.823 248.368 372.823 cv
250.764 372.823 253.161 373.01 255.538 373.385 cv
254.587 373.322 253.635 373.291 252.684 373.291 cv
246.796 373.291 240.924 374.486 235.464 376.849 cv
.701961 .8 .858823 rgb
f
231.836 378.626 mo
226.018 378.626 li
227.175 377.979 228.353 377.388 229.553 376.849 cv
235.464 376.849 li
234.232 377.382 233.022 377.974 231.836 378.626 cv
.329412 .529412 .623529 rgb
f
222.534 385.529 mo
219.965 385.529 li
219.965 382.675 li
220.621 382.155 221.291 381.654 221.97 381.175 cv
225.533 381.175 li
225.533 382.86 li
224.501 383.695 223.499 384.586 222.534 385.529 cv
f
225.493 455.431 mo
221.151 455.431 li
220.738 455.125 220.331 454.812 219.925 454.491 cv
219.925 451.077 li
225.493 451.077 li
225.493 455.431 li
f
248.377 375.484 mo
258.447 375.484 268.564 378.982 276.726 386.112 cv
285.405 393.691 290.613 404.197 291.39 415.693 cv
292.167 427.189 288.421 438.3 280.841 446.978 cv
273.261 455.658 262.755 460.865 251.259 461.643 cv
239.763 462.412 228.651 458.673 219.973 451.094 cv
202.058 435.447 200.212 408.142 215.859 390.226 cv
224.376 380.473 236.345 375.484 248.377 375.484 cv
cp
280.856 381.383 mo
270.915 372.701 258.194 368.407 245.017 369.299 cv
231.847 370.189 219.813 376.155 211.13 386.096 cv
193.206 406.619 195.321 437.898 215.844 455.821 cv
225.197 463.99 236.78 467.996 248.319 467.996 cv
262.099 467.996 275.814 462.278 285.569 451.109 cv
303.493 430.586 301.378 399.307 280.856 381.383 cv
cp
1 1 1 rgb
f
248.378 373.063 mo
259.015 373.063 269.699 376.758 278.32 384.288 cv
287.486 392.293 292.986 403.388 293.807 415.53 cv
294.628 427.672 290.671 439.407 282.666 448.573 cv
274.66 457.739 263.564 463.239 251.423 464.061 cv
239.28 464.873 227.545 460.924 218.38 452.919 cv
199.458 436.394 197.508 407.555 214.034 388.633 cv
223.03 378.333 235.671 373.063 248.378 373.063 cv
cp
282.682 379.293 mo
272.182 370.123 258.747 365.589 244.829 366.531 cv
230.92 367.471 218.21 373.772 209.04 384.272 cv
190.109 405.947 192.343 438.982 214.018 457.912 cv
223.897 466.54 236.13 470.771 248.317 470.771 cv
262.871 470.771 277.357 464.732 287.659 452.935 cv
306.59 431.259 304.356 398.224 282.682 379.293 cv
cp
.329412 .513726 .580392 rgb
f
349.319 517.178 mo
294.653 469.382 li
293.948 468.767 293.969 467.591 294.699 466.755 cv
302.305 458.046 li
303.035 457.21 304.198 457.031 304.903 457.646 cv
359.569 505.442 li
360.273 506.057 360.253 507.233 359.522 508.069 cv
351.916 516.778 li
351.186 517.614 350.023 517.793 349.319 517.178 cv
cp
.827451 .364706 .0509804 rgb
f
293.224 465.801 mo
293.224 465.801 li
292.438 465.115 292.358 463.923 293.044 463.138 cv
298.494 456.897 li
299.18 456.112 300.372 456.031 301.157 456.717 cv
301.942 457.402 302.023 458.595 301.337 459.38 cv
295.887 465.621 li
295.201 466.406 294.009 466.486 293.224 465.801 cv
cp
.6 .6 .6 rgb
f
291.391 462.355 mo
291.391 462.355 li
290.655 461.713 290.579 460.595 291.222 459.86 cv
295.001 455.533 li
295.643 454.797 296.761 454.722 297.496 455.364 cv
298.232 456.007 298.308 457.124 297.665 457.86 cv
293.886 462.187 li
293.244 462.922 292.126 462.998 291.391 462.355 cv
cp
.701961 .701961 .701961 rgb
f
451.367 75.4707 mo
427.325 75.4707 li
427.325 79.8311 li
436.83 79.8311 li
436.83 107.961 li
441.862 107.961 li
441.862 79.8311 li
451.367 79.8311 li
451.367 75.4707 li
cp
1 1 1 rgb
f
467.325 94.1445 mo
459.226 94.1445 li
460.51 90 li
461.482 87.04 462.386 84.0122 463.26 80.7847 cv
464.26 84.3477 465.132 87.2349 466.038 89.9917 cv
467.325 94.1445 li
cp
460.732 75.4707 mo
449.736 107.961 li
454.882 107.961 li
457.906 98.3608 li
468.644 98.3608 li
471.62 107.961 li
476.958 107.961 li
465.962 75.4707 li
460.732 75.4707 li
cp
f
493.404 91.377 mo
502.274 75.4707 li
496.895 75.4707 li
492.581 83.8003 li
491.893 85.0908 491.32 86.2642 490.652 87.6689 cv
489.884 86.207 489.273 85.0464 488.567 83.8018 cv
484.154 75.4707 li
478.582 75.4707 li
487.408 91.1875 li
477.957 107.961 li
483.336 107.961 li
488.045 99.1885 li
488.631 98.022 li
489.129 97.0337 489.65 95.9985 490.207 94.8462 cv
490.687 95.7539 491.135 96.5889 491.563 97.3853 cv
497.284 107.961 li
502.859 107.961 li
493.404 91.377 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.0
%%For: (Tanya) ()
%%Title: (88.eps)
%%CreationDate: 4/20/2017 10:52 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=jJJ;Ff0F:5i:P6&O;?#;T>"76!oJFAN8%'YbeU`_4XXTQDb^E=#IRi-.ALCnQSb!Ai43hfb@fr""rF0oB)X,&SHO;+8irN
%5CWXkQg[0:lDGa(c_%ii00_X]is#HEIfK0Ai",hIqd7#5mXMacT6u%`rR^L%I/<ZJ+5ag0m^q'm^\[`mG<^@urTcBa?N0N?YL[(;
%]_il?^A@-T^V'L:X#FtsC$kN45AOX*g&%u0rRo50^OGe=ja;2I=MEkAJ,A'UCE3ET:3lm1B4!=>([jP9=r4H(c1Cqoc[U7*,q]W+
%q9a]f`OfKjs6e@FDa(l7pu0!e+ZB;ZT:J%8([o(`UHbi4rT#9,s86R/n`<R'rPP,n^\XaI^0FmEJ,T"p00$oMo((Di5k5ri3nK3$
%s)[s"qN]&9`.*6+nDA#f+9!5Y4hm5JWq6/dkC8))A8Q9,0=@oHBCCq2DurRZ`/DPIr0qn;J+M3[:[e(Yb&P(/00e#PmQY1@oa\Lj
%O3dLVH*4KE0D"gCY8@*(TARE\Q_1qga*2HNq<hJ%^H__kdhhKQYP"JL(bG[*pKtW2p2<1.s0Ni3%Q*kBs752'hgMnMm+VEa^3[\`
%H+Pa/^UO!-2rFW"h5<.,5(</fT);Aj`]hRQIK/tI]_V4^N3hT/r:N#;55`[Gs3(lLEB3oB(DC__e?j+m]]<"(W+eE;otTgh`BeJH
%llSacGTT.W"7NG.IK-AB++Ee@FD1#f;#^:"msfVBadujorf9#.C>AeIj+"eoFm#A\^&&?WTCS>Ps7/(ZO&pi,"j[(E++F%^j4AMZ
%hr3`of=:gaLAY*pJ*"FO5PV^1M!r+Kbu!ok?[Z0@]`3Kas8MKcQ2W\Ur:sFOY<W$^[i`Bbk%>e8iT'D,hN.[2QQQ8,h900<s7#GF
%Isg3^s7#,?PeHnde%^;.p7Kp^TDe?:S*S7Gp#c33J,$2eoS\3FpZ_'0IXYBls5+gk5JMRBl/T6g#laDVYQ+U:XWKM0k)#G>q=`(f
%FiWhBhWD:-i-Hp2`r3)hq(r$Gg[)[%O`g3G!@7Wm&-)RqX,l/n%]o&HRj7q1X#D-WI(LJ(]VU*aIsJBWl?,X6q!QVgrDpsDA,Dbg
%=Ep(n9DMXJ\Gb[$3n9]qs1%4hG9;;0h*/E!?<<0!OmKP;ip/O1IJ*S@hnJpK+5ah]q<>BGJ+o!WJ+N3j=8V3riU?Y;pV65of^lSb
%NDK#WrUAD\F?_uPX#KhOKPQIo55u]ggYV6TSSA&ms%d9a#P4k.I(qlAs3BR%+)^\h^V!^UdU0Zeqql-BIdua-s8M%[n%\aG+8mhf
%q3p'p^]!HR(Vft;e%=N&C]EBG0CCb^UZ\9CF0bSuoT]?gc[sdB&+;_67H*?dn)&V@GC>r&^]"F`jNAA>pu\&iHpY+"(Y9hbQYTm=
%Y?O6jn\;Z0(&cDGp*VLXqV)N&hL*#f"\[F/Iis':rDbpXHV)8*FdAm$Ut/ksj/>WBR]l9QAKCZkj5l?pO2(Q.r:>:6#USj+I]_N-
%C&RpY>LJ"(7sk'TQiHV`O-a5Q554mW2Mb;NJR?-GoEXQ+q2:#Q?eA`@O7A^9cU3)qs8C@AM#QK6>A-cM^A[`J:O)5m5PjVjJ^A]@
%*59pXnE!H4@_Nm428V"r_8Z%r`?,$urbp]iJ,!>?q%MTX?gH=lEUp3sMN:iLQ4o/,X(.rQ9I`B>NKNbO3bqn+o&%.>DPb$-9$8m$
%^7)IK1P)p(k=]1^4I>%85rt&86#(Wo9>EWc+IAG(gol`>C%MUD*ZZ0qiPU^X29hs(T'H]j4C?,(l<N'%C[QAC=#oIC1=E5r@+Wfl
%q5U6#*G;OM0<Hsori5.)^5VXJW+5UE9=c0kVK@i^Rl+IF''-DXUL7(!0'/Vth%!%mCIq#lkCB4j0#8ra8l5)$G:dqX]e4^k[JhX%
%.%BD#[]]HXlP6L61%T_4_tVa-=0n.piT(YclXoI-RJg,<UZhH_DCln)<N/"Hm4PPSdZ1/!8K-L/P14PY2^MtjG&950P4J-.cjqP[
%fWNaW8^js1)/l_?=6l]b9:bC3Z-g\jQt*h0POGfAK"nHY>eSHdf/$R50#=-Y-f/h*B'C`0'FfZeW_:0.T!*H3Hd?aBWF]D4A%_*m
%%UX1V2#Gua*NtdFYkD0$iuH7dK;>@:L>U!qd;;.m(Nq,iUa8%eW0Z?Y9@E][]at^2k>;UGChI+%V"EqS_anEGmnAnW^2*2+?hLaI
%MGs6G``(seN]UO=$QfRr9J^kYlO6;7`RSH-O>Vi#[<u"=P+(oWQ=TOjNq@)9'Vf;h&aS0CL<CDfVqUu/hTiC?=Bt7/o>\PHkK)8W
%P<qC3`''HN)`IZUV`F\F:ibu^?/f0#DqMSQ89gdeI)Am6A:=?>ZnbSH3*t\K?P?bYcEQ`B+,+4"+)CR@@uW0iO)+6WURlIhCX8G*
%7TS\r2=%;`XQR(r"!^"5"/LUT[m%<JqGJKu=2(KNm%'X-^';qh%hk-I"W2kb0[?8.qj$j;-11"!nE=G3GS>/Hi9t.bIf6EhIrikV
%0PHf[G!+*]?L(it\#slq"*_6BA#oe'&+L"uHGt8(3#ea!SC_tDcYU;:17+i0e#B>)]K]1aO#:o..>J03#7e?Klf5d0CPh=HVr15p
%p1ntfOKN5IhgHN2a2,ip!08"qgQP*%FhQ=h1Nb\b*p-R'mCLHOhAoqgHHL",)7XKV#JR`+'k6O2.IfN(j'LMU*Te=TK))F4oe.<r
%3Q9Yo>u)&1IWH&7]V2_sXD=gM@%,%&F$Gj79R0<(Mg%7C2K-3e20Z1GN<?qTGJJ?sA'S49Ki`Z1p!2+iP<7ppob./''*?J<^:g?6
%or\n<#5FX]eeH]?@NB\cCSa)D4(!%05OEk_IXFf"-AJ8>Yb3QKf25id%KsUr\"d"Gm,6,F/]u_EN)%4)/:cd3I<0\Y;PiB=7nIr(
%lN>*#??^`qN6??\'u/@TlRg)W[(aM</+;e\@<#E0!K5l6I*Ra$C&NTq?/!P?14sZhCTYs2i:tR'6Z?F.?Lp2mV^:PJYIR<[q\nLV
%Ng[7(XKu=oHjj1)f!&G33HMps>csO]T4ae^kj'Rp.]i0JoU*djbF%-@0<URD1CE"1=Kc@F7HW8W?r"GmehI91dq-2[[/fnXc$?GZ
%*^"5#^rj&#`*=7r'MXj8NRGAg,<UI'Z.9;K[-6>3V/>18?@!#eA&h!J":%t,Ck6;:WtTQ!9OLbn!)!rbhYN<ViCdJAbBdpTl&N;$
%U:&]+<N,EVUTKSqh./`lfb8j;[rF$;cSr<SXG4i[ijGYp<hl?sdBF0Ka29::<5B4Uo@pASi[-_KJ\eIu`c]TD5L:O`gHS4drKF?.
%A?*]9@BWi6l]A8FC-pXS<r\+SAc9P3q>3,bpSp#VqSlEI.HPqC_3$Dj>+^CsT30NhmJYV32m=&,YEgQe(u3L7B?np-XF*Y02Tu0'
%]<U%8\9r\7Bf8_'l%hu@Hn"C\;_2Y\Lp31=>muH'eYA(g-l$Jqr0N?]9(B9TPTt-=6TI.\8)Jd!&V"i)[$P+_cWKp^-r<Q5n1eN[
%ooOWeCZf\QC%3c."ck01_(@Ls?;rZ2ctL)Wpc\6R[n=:!MY9rALM#bDld+l;]p*ZKlf4gR<;TiEeh^IHCo_DAgFqg=TI)8,M<uH7
%r(P`:HE;mZrROYem5L+!fg+9'p7nIj"IrK&+5Tnp=t>#Jla#*aN%*l()hMJ#\aF&-e!!PX/:nBPWn]JrnABpZK[1]kA`,j.-GItC
%Re#C*3mVZ'5`2ULhk=s9CCu5m;2&=PC_gl->l&cu(gD'EVO_j6AW?4;6p'NfIc/QZf6*]&/$D=bkL4=WSsEfn51MO1@?,AkX-dDK
%lrhpf[-YQ[DlnG4\?mW@VO=mZ(ec>(iu9Gb1BZ.Z*j;b<Tn'B-maghaT4k9[04>/"(Y(l"cee%kO+kbU/+#b,bf*4*9Mg#>+'+mX
%33Q+d>r4bL/emX)<@]81=XO;0i>R/m9_]fEg!e^p$>ihGTpVG&DSF85^d_S$5\k.7KKs0Sh`"WQ^"H:/.[Dea91+"^a%Eu0P4/S'
%2+V')/)h@tGlfLGD-e:terDV4fB&@$a?\JNRL6*&2$DF_+Q1U?R/>K&>_3;/DsoXT@4eHb0a-[.7JV$B;o.+X&jQj!Ib*!!]BA:Q
%P^0s43AB3"=IJJ7R&_r;l!Z30o3@J@Sp?l^NkQj/MBPHIH"fdSs07SkZf[GAFHH%qbsNuu"9WF=L-qV`[b=*)=2']dE*@+D.EEBZ
%!684m%L$?,br)J@]#-dfBo7+^_LPlYS/T^"=JOp3/+Ai7S!!%+r(phe@NI+VeMdC"J@9d32mShbhLJ7\f*>Jg((2R=)`6SJd_RHX
%6S(e`1=tmIZ2XXN/YrTmhNDpXL2jbiQ4qa99K&OKQ81Q:]G-FN+_uEr9,MWT=!3%)^`bm&k6jJf]jL#M_Cur(H``T].F<btW2K:)
%CD'93MXXLKb/%/ee;9XG)IVlg/gGb#nB%d-d6fI3:+K/n28\piU9J\'"'T%K4UcGom*jq*bA6[!0*bDq"EZXi5kPl#_E;p$h"KUn
%^^LWc`nQ.(>U*tib,k1#nMQW8"7Fq0@k#mmV/bY<Fd<M+UtH!:iM'N-\H_)*$/hr/!pH?,,rq%;e#;bP<9T]bD-?o"Km=HO;M(Aj
%0pQ8B>\du\LC9l]ilbJ>cE-cF\Vr,?>(^=kkcLrD^#JQk2^m/n>2V-=h5H`=q8*udH1B7%\4\O>0t&ic))4QQ9uobE8#f;8Z6$j+
%=K!`T$]TJJEQosVc*/VTU;/gD-^Xbrpl'1"lXn?6BIkS;e<8CHH?PH4S[p1G#k0=TN3g3eQ:H=od(F,Apg!s'b#f]\%.u5abPOSt
%K>U,9=^&_6P=:'0@BKO)k*]dJmaY<Ejgpc7#/+]Sn1&g+<'2tL7Jlg;O'mlO)o8=PX3k*4HCFa*R^G.AH7')ig^Z$W"rHprZ1b`f
%IAu@S/W]NSV4qDm[A<,B%]CN7UiRtD.,c*3'oQtlCk=+%&'OY^UbW.IQG`XHeLh\4",!UfZQC?OS,X&Z'C,nd!B`#+QLZ.i05E7.
%;IKc,El@?4S7,ehG0R9A[<$"_%L'!\q_R1kki,j.l@bju0pLWa_SXA?0<[%BGJ!^^3p9TP:<!`[YH0l_.c%YVF-bG%;%n[;/e#eK
%8MS+JMplOE+Tb51eIlC\5dFHTqB3JPQV!(nJ#@sl(iC(`J.gL+=u=R[8SPYANPqoZmA0IGH4u=Hm\E+C_?W'_^><t\:"G3+5,.^j
%n_ml9`XWlM*u)n0P-#n:h(>-.G[FT@1U!X7ZT9^kIZrR#.]dppo!)f*'9a*V+\2R<&D)kqYC9'A%Hi=/R^mmq5kNSJG1o9A#o+*K
%CN1Rq#q<]%PpED[mn!s#iWd;ha.eDqn3F2piLKCg:pL:K>]-sk?a@NeL]DQJ/o[n)HmVt^n?`Fblg8Q<GD4"j5"N3*i)NHFK*SP:
%C1c^0aQ77ugb_MfI%K,p;8o5UY]WN^Xmck\)r,ekEC`ci)E5lZIaKC-Fj?1dr0$Q]fR>9_ju$AE<?^mQ)h7DdbfPbT4pi@Hm^)=W
%@r8rWZ1U@0r-il`#8BI_V3sFHi!CAb3WL7:[1qm3"S.ep;ojZ=-Fl:MoZo_)4ftqA0id4I7>kqE4MI'Llqm!1?I'1HJJ4,b&_o)=
%Mu?W9KR\Ri[c.mpK9LB#J9V-_37eh>>CeGl+)#nciMWG<G<H')eLp=H;V3GCn.[4p]G!26o'`hQk8\Rs]FDX:lu8&iH%Y]FN^>*L
%V@C`[999\iR@Z)pljc$cB9QM]U!HeoGjt7]K;O4BpB/B#GF,Y%3nt-l:)MTiQm_eV#G0,4-"(>QH2E78XtWB[=!GRqf&o/4Zr$gi
%lk2.VZ[9G#IL_%Z?qTuTd)MBES@)0YY<)pPp0EZD\6k!&#<0`O1*$tFgdGXn?2,u0YJFiZ,BFq"oB&E4j#Am;j127tG(4r>qO:0j
%-,kOjh]4<tr'oTQ!lest^o+_ePGq^W.$eEhs$TAq$tB]M/6`d>S+Cu$2Ii^gLm$31`uKtp)tpjN_WGkpMsP`(]/:.>3]KZ=(hQNa
%>qXXTZsGV\CPPG'_Dr`m2P3@_`\gNjA8i'/cfMSO'bEpj=h,D5RS0k\"fGL1qI&0\1#,6c!pHQ%."l3O_,Y.^ACtO^d:SMAXPMeD
%WHtrS2B`3n`g2-m;[OH&1Ii>Ig5Eu$X9q2_0[Ll,J8-(M#5;(bTtDKH]E[^@2]6?2/s6],7Lfb_*l\sLdX(]2QJo7ncl1L,<-0\/
%.-+#>es+l,22l!=7@/E`\?d-PL"6fq@6VP9OGlITCqtTbj\W^8_rlge/lrW)I3cei\.CrHdO!!hf6)SbOo6RY\745ia"!.LkeJWU
%E3>$u&[7)J62..4r?u!%>1'l8\MA-.VM2DXGM.$/XQbs^%VGpI%3Htq@p7(dq)9aZ:iEL`Ud<4<o+KL_b_%X/JN8`d#\U"*'9_[_
%E.RNLB[YjLY?!(&N34<9m`.?KYdEQE*7-lcmpO2iF17-&IC%\9$2&f7q&5B<H%X]2"%NP"fjlKj<<\HTBcE!Lk_t3,i\m`hAVI3@
%]qu4%BB^U>k+R2hde?k"F9G,PPG9E!1)MqHJJiF5&29g0Ya!aaQA#=X!5i?,lf72d-5JSbRMEGWj'8fa\3%u!T-n>mE9:lg:\mZp
%(HT5O(Tc)\DXVd77=d:@R@.0nE-N8!LLXlXc,RSK1c""X_.nY5+9tlJ;Ss=P7+;D:r4-=FG48O.3*BSG2:G1Ti27OrkmV((1hDtg
%ZX3;ic@[GaibW`72$Cb)<ts(oO?gsnLHs?-1j%)QN$0U%)3Ucf]QW:ld1/5EQ[nK`DoJ(bAdoaQ8mLQc7P'7g_,,g$LfLS"%o*Yd
%J0hVc#62+e<2@=J7M@Qj]uKY'YMV#>pVR8>;ArB#?DNq46#?h:"8(^M[i]%@dW02ijWRt!L4QHYW:2@alcDeU2'90J\rC4hjWQ[9
%E'-A63j0)FKQu@8295&D)^8nGq(.8lELh;4%\tf<VnGR;WBaRb0WZDT!/KM'@?7g0$oiI."rj03859(^B(pEB6Jr>m9LMVYUeAu*
%VJ94Y']:a%</f=HGt[ls+qI^+^M.B)lOb]4T[C+LF@WM@Ln=OoI@h'eFUM*%I^@:e4r)Q,@[2&''0[6!G3h/<:uY=i#Wh('BmfQW
%2<j3CLB9>0YOHPHNq$4+.[DQ-l?%g::9^J&=<S<]ef6l=SUa"7U6#a7G=1"t$1c3-466?l@,?(e\dm%I4Vu1-5V`>JCAJ7O&.X&F
%(S4Gd-6.!q;'@tan49TH9mj<qj"PIsi")5==NVJBU6E\g(,R/&/[uj,D-\XhfZl'Te/DbOY-MjF#n.YcCGR=p9uWPTg@nQ@.9<dO
%KZNA0!1I]b^o[8426M9iT*'n*0>]Wem4cP%>gpM$q)O5siq?!:@VQ=aH=7jN19Mnl9Mf:Lm`h&77JgpE,6n5bkXi"W$E(+SbrTt*
%'PW*q]p=HH&ET:J%V0MbhBDEGr'!7',$T(KZ`h1?J`R^u1"LtD@pr/Qn79#RLQ2rids5ZQQlW+VK`GPP^.l$I:+%pII%gg_QdJtd
%Zs7kdp$-QGZjl[LY6[$q?T'/fF3(pBEsTKPkbQt3@0B7F2uI2q"oXbnnfi7R['Eoc'FV7qfg;`2Oj)Ld$rBd17'2S6p3p-SC:Ia6
%RTR-%S7s;(7E58&p"0Tqk,hp52`a=1MJM6>WS365%XCiJ#E)JsCt0fMd36L"#_=NagKMgfJn9cjo%$n$dtI[c21E%QVardNQr]KC
%*JrE/?DdHYUo)#L6Obh\>YDcj&G^n:o6T^js5@nls,ZeVjD9!e2sVaT>>Ra%Nnk8A6'+>*p!=5fm1=hMhCUXbO7[!E"/-VW^'O\r
%lRc\to5m/24bSZ]anlL]+10c6Ch&V!4*!=>MW8L6iUs2>X^ZNS/t1b(J\G-[XO+E0`bN\CkKo4Q%BU.Jm#lC?X)L#54>2`Gf'T'1
%nse3cGI#BeZ\7u(nE@q=J:QU5M!.bkD@T.5Yi4e>+%lkt@3pL1(ofT*>L4&,<!M:Hpa2r/6*\3oEC_R'K.@6tLE'RjeMULdV-$go
%)a8^]GK;RdBLjr8,H#<9-7rdjHm#)-!s(6'$8@[ZaU'd#D)`c)QB?PopugSW/4I8s]I$fkl]Y"(DZT:7p$[!\_U:i(-oT4R^AObJ
%2i#VBbN"JM1Fghl$9bIK9G;@LlN9.XJM>!=hHWXCHFmG7r+bHjnta&1kSu]!ZG(Kl6C]hnPMNZlJt-t&2L^C9]]m/Qa])e5;;M?_
%/hF1?5Yjmp:&F9-7+Q)4i)nPXPaL-7>3';5&C)e4o@3ZeE]8!QSM-231ZYfMaQ?EXPgJ\B1RH8/OU(->s!U$t^kBqRZSF^$)'L!p
%82sl8dbFZ,P-\I[k#Sn\'2hj]"f:c!nPSc2Nb)VgmF'UH]ZccohS2b2!>VjpD2.ZVlb+CaRZ_0+kgZS)E^"TSk7HP5d;IWh51[i/
%r,/th^2koPh3oMLs0:*&8F\Bq,^.8Q@1]toeq&A.H4"gTXEWrlL`"SG52[\kMo2"LPl/0fL=q\sE9Mr']ckK*.g->O2182/>RM*a
%8(\p"3!Rcm@Y]4qVh5[E$1dF"nNb;.hC`D_<pbYq*udK.gUf1%!E,r0%E`$Zg*\+c&4#Vpg?2LI>?;G</';[<WZ/;bGRs#gJ.:ab
%$%DBX]qHhc$liFaOVcZS6>,I-_;n)jq^ncubAhbRk>t#),u@2DP%?<X688*E@mXZHOOBbeR$`\GgY71I[s6saC%KggYj>)58?rnj
%7M63'hR,1!cXX/rSDa3H[=3hb;Ks>sQ=Qf_CpMBLgYB5?$u'>mZlCKlf.81,;k&@ocf9t2cl8=.an(`%!5E4jltfH']$dmnr]p.I
%akCN66NR<_,AMAnj3d'.E\XpM?\`bu#;T'O0JP`>jao$h`06Tn$nl9oHAO#SVE"je$c@0Ye+k^)@IQNI#<2k@a*]!gFFB_ldT(GB
%Z&dql?dI7fB7gQ&Vcea&Oe9Yg5f=Dq^^?j*fiJIPj7YWISlAE7;H8Uk&WE?tIY8MrWsf27S$uK[<(%1fn?O.A;KoirG!uaE!S6GC
%&WNG`HocBQlG.th)$m#n('_hKH`%rP8F$mdY#%bV[j2.fh!GeT*I.H<p9@BCj5B8=%Zh>[@TCL1T&Ff.o^(<!IdV2"24F'ra^L<C
%)g"7(G#(2mIYYuLUca%`damakpjnlYH0fuYWS*>]N9'!*?Mtt[r6Z=Q^4$%?="cf7kth?SmG%*Erl)oRUaph!A*1.(WY<Un81pt<
%3lK0<J69B`QXrbq;d^*u;:.P=;iBjm@g31VQtIg-I1Bl:;KB;.L[hc&"Nc#m"PW(pk?/ZiKk3:36DXDn'!!"MEac-<-AOco>c5du
%8&7r#ID(ZsA9+DXMA?O-08AfEVb?akSXh5C6ukiT#$Z*X'HZ3VI8+u,&0so5)ueN^LR(qrRHHpDbC+]$JL"6n5f3>3RsQXA)B*h0
%IO[42LGAtQ^QC42q.4?[>_<SUU4&/ok_"+bo=Lfj!]<'oFG?#,n*J1YKRgdW#a/OHdr_f9<:ddFA+?lUgd_C'k19JS]omumhcu(f
%G;'6Q!uqfUAL97:WM5/d)cIPb>qBPgHHG,t9P!XupuS`WN?o.n4p<nGWk5]$LAE5L*`@u;(ChRaQ`BqV3".^t.j&V7X;K3]ls2>8
%PXP$-QogJ*BO'e.D\EtK%Xo25Hui>.a?[Tu7P)H_CC&3QVXWH'`n#)sK4Y^$j,@8UjD88E3KLdF]f9*i4?Qa^#NN$+?R<T3KisI9
%l*me7\Jtu!lXcKEh5DC18]Tk!\NdcdHagm']\.Ib%(;0Q7OYLf^@@HGFG(FlRiCq5EcmtB#NZPiEqnh_D^bf![<)TLpL[NHYs'dO
%6D7p</Joq8@+`Usk5/LH#5n:Q-$JPf#b#eeD+.b`QIYAlCG$GEnSpmlj%%Z@(5KF06YCKM`4[6-7(C.F5!f5OG]^&uglKudVi6BO
%]VG`kP*VWnVJMcO3.\7c!=j3pqT\X`&b9F@p:@`>-q)*05)]MeJ23Xe."6]\:ptXUMbdE>q@%pi^oA_#$D<JJNO\P/Wh[QfGaPVO
%bpEUALHI>iSLXAepM6;bedSsfRDq/oh`.um#*&P-Bogd/]p".n*9("4s7R`"3&?\%WSLVj%J%$-[dD=3;qS36.JONL=mb(lda9m8
%1Lh'`nB;ogG7`dI_2h`CA/:TiaR_sJ&j'*Nr;q,([;7NT0^$e*gbTQ%ImrXn^1r?$@.GiL]lo@n6)UI93,e]A%`?](%DN+[OfXTF
%fd(fZfBe4[*SNC1]CCTs8UQ1E!'1Koi2#i>FhDR+=kF)4D8W#u[Z46dIQ[D6RNh1sH!g]nD'M*f]3$jG7PK9i*G4tDk,GKjo1VeL
%_0X*unXJi@PqGQ-ZN@.#N.#KK4A\n4nV=Us"!gME:kflDl<1IpIC`]*.d'W:c"GlDoJe>"lR<Reg+^Ea6&$U(l@e?(a["]&rkae=
%VPlJ3FRXC1lY[:L+.&,nh\7T1+P+VmZ4k0ukq7R@WJ$(kDaTRUAE>BW0r6'(%2MQ\T>e3!Ph]18'L4j:4^>4FQjrF<0BVocrjgtU
%gl`;l:sL+j:/#Z\[GGD5&N(4KGBu<g)I#eL)@@<O89XfK:F7=&/RGS2'Dj2GCkdLr2__3d<]cM,d`3?3FK]7c![HM+<%#2[<_a\A
%OXF9A3O0l7fWgcH-1/T[a4ir[*HM@Ga`tr/VP82@0)(ftqn:\A,`9Oq_0VH`OI5'/enO[=_HdSdUaX!4iX[m<hn:b[WW<l23Dca8
%]p+a<"-o66&P/+_f?&=VDN?R`hE]tQ@aq#)D$05\gVq(C'pe$Q;@g,=K_m49\NLP>3L%ejB,jBc@8&t=!S^>!LiVlQn(>%?c)Nb9
%"H4%#C*QNp)?ro%bkbkkEI*Qfo7Ol6/>&I#%U&DuCKCodOUl\7#<i.MSN8j734u&NZ#F[AOq)f!=A]A`:uU$/&kb]p$a$F7:spO%
%Q=LQ"oR]rEXQV`pduB*IBA?8fcZnL@+d<4RbNgX5E\?hbT.rdmNi<m=R=qR<<UbVh*COI7iCHcpW:q3N!`'V(+Dh6gEoSF0=Y`6t
%@&DC_mq.n4\.sulRTZ%t#8CmB[O-F=UeY0kHe!B`-qo`qL?/>jn4]7^!.tBB@GqT$!&7M4#)BP2OR`3-Q*OT\j>miq];kkgNIt0o
%a5Hff4I!R\(f)QRjEY;D`4KgT\Y,B*iEgiu=K1QOlmUIU_Tg@L:TW6)9.aCaW)7)gX&V7hE0Z4soQ8h`j1emYCt]"@jsU#FOH=m*
%b[7M1^==8YO">cXEiBiB7&u\[[e<[$NVo<K$G]?Qh'7\P54q8OQCRE8]Q#>q(fJB=OY9Qc4L31#AeZ@\3'Sl9+@QH(cDmP3T[BUr
%Cjd:Z`eGZdp>o:'fC8FuiJ6PU?&@6>WT(JbFhBiIn:jleW6<QZ:4EsFm]^4o^7!1RnRIQ0PY'HM"=T5gFB,8a)D>6RLs+h7%)7s*
%<k3#(9=TD^nJJ+DE:^\7EX%k/<od8[>]b7k%qU9UWhSpa>)as3TRf0?VL"@dPR&#JiFU(Agh5ZB02\*d>%]BElaR*")G'VhZetJo
%Jm,&;Ytl1:5eobq'JmY]>T=NkSES=tb&e,"ZO0SMEFbV&^6(:fd3%\@k<LAlJKtp>^V&^'J##4Odb%g6lEC,MrRZce3V?@s8fPq<
%L&b)Fjs&HkS#k!L`CD;t%8AQ;rkrj1%+juT?,\;<=jX6=@dZ`s6WWe/MU<l%F]mgl<Ac_j$Hj3u\!TpK]tLQ*rVQrd^nee8EMb6]
%6\']@>nA-g"2T/^6!C[]eC.kI]_1T4SBP/<f&PLe-#%/GTjTFO6o;[`Gq;XP`(^u1.C:%92V7&1rCY1S%V7^ISX34?K%g*AZ&STG
%$Eu@[9Ln?FKjHh<^7DD7U/8_s8AD@6eDtgAg,@"C:jT)uS0C0^dKrac!f^'8GDXK!PI]aFG1p7?.XCNN,GN?oH7T1=p">H_#WTP^
%<1:KB*=\r?XKDrieNft7qTZBtiX.q$3(`-B<f+32jtroN(fOIT=bP_AqF9HQbE.IY2*$)kQDcj^pL&ILIJH1'Mc*:iJV&EdVW:a4
%K!+[]H]b4RM7[#&C4IPo9LIu^[SsV%ADc3>`)i9urJgZ&jO^V8]kYR*d's!tC7(cDR?/%DZpE`jC+Ie67Si(SoK/G#/e3XW;t4VQ
%)4eL/9Co;`_1aplQ%rVW_d'CE`#]7&'%U^*G@P4eWj8Qi6VpW9'ca@%<VCnIWrS?*Or4a:Z:T@XW*rM^iX6(d=`;+\4.JXl6uqc0
%E9L'T,%UC+>`@%4cg%gFe!6L-D"S_ON*d-lL1ASqN2*in0V[0:jq3VK.hR>N3q#?C6!+3&2QF9C=!D7/qLb=X_dMXVg)P#LiQ7&3
%oSbg\3+A#!)$3>-NZE2lB!_B>W0S3m5rp5ef[7RnR[CrVaMd+jK<6i+iVPu9*/X^jj@5;BC%'#@GIS3JEC[V:]GUm?BlKT5@"AS)
%9UBX$1JK6UG))I6YRe?1=>YG&o@[>VItXeg9o(MEJl*W%=c-/dNd+f7X"5X`XOeGJH`dI(^j=kaGIKN#LO@H)'(!*c\0[P[kr?@U
%_=<B`325>JQom.p4[b5nP9XUU#6i1n*Edn+$8T86:Hc,lAi-$"Q2!p-DPj^0S?M*Ki;L6-AKXDg+047k#pA,VcjM*S_Fr,+;r\M#
%-Si2`a>9BA#V70:1Y-)2H8;['*(o`Uia$Q4RPO9A#8Vd;6<o-6qHBdi"hLIBaN2:_i\q69VG#idS-r5+K`uHC3X^LZUZDT-)qW'n
%c^2qESQCW0WFQ*!#$iCm(_?m,f*lmO:H@7qGkDr<B#!;ITDN&#K!QN-"T^L#iI^X6+!3A9=NFW;LWdMb=I>LV.2)]pmH@s^/21e<
%Y,p%nYl^+L_<3>HLXR>mK*J\K/E:DuE<Za)E2j7U$1rMdpXZ2"e^5Bm'X255(+!4s=Li)Mah6VP*j:DD^8R9QWnc?;\t[`(pCY20
%p>i38V%d$X&G%bRKYY'alq^KH4249J;Uh+,h8+<%0R,tEM5&`1fc),M_g.3Ta5PNi!uS3#,,VTncO$HR/b'n*l7Oj[j!q+D-&dnc
%Zs"4NB">hS&ZJFZ"d@a(ap@9QX6XoT\e[[g];Ri@VgHfZa>1Ff9Gj,Ii;6s^2/9p/AqVg<%i#+%Y![sR*9)[rq&l(TfGO+Mp2N_i
%Eq+MLhdK07Q!"jP-'F(*!e%/X?+]\+m6"r6:K36_9FWr>P_\=[Fr@&Mm=;*:[FOHi><q-t=)0..WF5F+/<H)GJ8##7T+!rLU*;6X
%4OpP(XdoGZ30Lco6\XT_:eNcaf9+QZbX#[#ReMKYiCLH@O3/K*!4or+k1,1Ur2kl%gZ;BS7$E#:h52uf5$+4[s3;?8ALRS]NqV?n
%fP_lLs6R?NJ+;rrGAf[Yq^&gGpe\_N_nUTjrkk)+5CW4i00fF<dDmS`5L2O@:ZLpCGPpb;Z,ckTH,lOEUZ(E*>D`[b(gh35bK^Fc
%QoT5lNo@;GB`WI[48ZNQiu.#L+1L;URsYX8(3qESn1j;#;9%`>_mE]^hUl>j@#X(#WQ.Or-LfC/A,O?s#4i\HWG:4Va4s69!Sq?I
%EY#s*=2+;(N-C698sG;=mMNZC+<3g3DTFNLkBhh%,PsRQZ<>3r(d4*/_OM;UOIB6uToSS>6@:<U(<e'*3j-GPh$<,Q#)5,t`t\r-
%/f3Z[()>@_3QKYV\&KE*J(nq)_AkM<Zk(A8nj*Eo1?FmSpmNhX1#,$_&ak`jGX?Gm(ZQA*\I9'<[#"MYH$i(@7QNeLirU2Z@6up0
%R(ptni5QJVH*N?K(fE9oD2bg/Z[PA%D@!alqA7d$H(,!2>C_]AfEjTYk8Higlc'j8VLNNanN!+QF_;W1<[c7oiptg8Z=\`&N-3k9
%_j>hkjntVbcFD1>4rPMJ<44r8`_iRDS1tB3L?Z^R)>>8C4^c9+M%tY#bIA);I"='@eKsI(P&[u&,='8lLnUjr36'FdH4Prhb"@H[
%V!(QW^ZjV_LbX@VnO+4(*u9?a?p%^C@"9u=/a2L2IdoB4&e04C^1nLg5qg6c_pWeFMig[;6R17&X:rSV&aWsZP/QEE=O;g\fjGV;
%SMZ"em,FT0p0\[ml]!/Vf:3mclZXl_^R9F/*\=No->oK7nbD(+%<V-G3>h>$PDc=P>ln940,m;]K8[9t_f>AM(J?gTjpOOAjl,"-
%Z9o@P%rsDF%9skW(K8F9a($cK2]pi7Bh)oGMnuu4k*!&a;4,`,P?C"J!Zo;>Yatnu4RJnin;8C-`tc*n3%3]`%pC]jUR?)5pZYRq
%bpp_W!/i^4GELe'Ph[4WGf#neD1d^+Lt3t4V\mT+PiN(H(mJ-)@mMP];afN9'K6\%*g#CDPf8.e"7^o&1`41S4J6'!"&[k?<sq>L
%lCN!m+;El1+e%VK/4=;b+@4\.@OBHgZ15cZ/"l.al,:M^V6T!tV]q@V-AIR%j6(t?AtAI[K1q6r.=VS+q-<O]i"B*m/HqIX#e@*Y
%"_M?X1O+p-Po(Zs.`*p<.'O</<]?3Z^UnaBQTljJKg?trC]uhK!YX*7%e50A>Wd!1NYmfF>0`cQ6g&3"JpG.fBi`Ik/E6#-.8[sT
%.s%'7dj`OD`^`4b+CZ%7+9>%N@UM)23(uE7?\p@Y$?8<g!^b*bT`B7`r7EIamoN)#F+S0=LiFaSs%O8HW9)(JFQX1@,%P#E@TGB#
%bbhC3K[4(Wgu6/La=hsZp+T+nosC(kM#^XIMW5^>gh_G/1Q6+[.)\q\X(]?dF;U*Rpc=$fN8H!+D"8n12p54i`*n?!JVjop0Y^d*
%^'H!oJ)51_-lBmS'suq2HP-,iYi,d^TaFRKehEidck6C;%$:!.@^,,8Rb.TNcnP)5W11U@`Z2nCM(upC4'opZ1>IP.#f\PbG#6us
%1#,SoQ.qKV%&)91c;XLtaZoR;QrWDb/drb[HrdS-O\U`$,LF<CdsrJ2+:BCqM@2=E)!R;AjinOCmS!)c$8^/jW1,8qX9W6'3B_op
%N61t5'F)JgjfX.KVWiW32,P2!:k%2DTJ5s!9$J;'9]B]#RjX0PBpL,A3)>\-JgR#LA.4bXp*oB#&hZU_gE9pXZ.G5G3PqWVWB;lO
%Lu)^Jff=jaJH[qPpg![k3o,E3N9Eba>DC'.RYO0?4ua1tr/;c27PBlK!XN9be>ol]YZBgg5GJIYHD:'?*XpNVkSH>U:d"E-%L1Cb
%pPU#M7oV-ZnA4AX5n1if"h.PuK9<p*Kk*Q'/'WbQ1)SqVX;dWGI&M:0",!LZ9i#(LU3K2c\7!eee]eHHc6Rcg]SNTIV$8E:)jPf5
%Ju@$gT:k,F3GNVe;:Pp3/MP$2q`tMu@6fFB]E?1RK"hY^rJh.QJa"^),7O$M;1+r1>l48d%iiI%"/EpDa5(iF&%MobGVYFf2]EUD
%!@TdU#!Q]slg)6)06]$JTRi5\_J8U+"!:3X/)uHj`qLsK[Fr>[`b@lF2&uC!&TK9r3%ugkRHP9"@-D$qD_s.Re#bdT^d(KncX\a!
%)E40*2]%hsH2.jV]Y7Eo&O@oLIY9G9TE8WSTPNXT"i_d`iY"*Q#O1$d$)!0%d.QoH'NhlNF>8=W1]%4[%/3I6:EhL*eF6WF&/\P5
%7k;CX`b]au1%N*\A&1HW;p^%\@UQH?'FDSf<Q^L/SDD*+-t$)('5sO+!;qT6q>^P/8)8b!N,Z8i9MRljEZ<g`^eif_Ri<&L4DJGL
%bDhN]8[rsc%,_[$!Z626A#,(ak#3G:jH^17ZmZ?P!!"6F!L%$_J+7`WaR8u`@NSh4IuEXJKDpc;!9R,6MXZGe7QeWU?U+`@kp)>n
%.850Y:B#rrJf,uP^R4OVN"2_'K.?sahnd',p<+amjSK/\NSb99mhQi>gTYeL\[fJIX1=Q<%$.dSB6WdI)P)hHrCth]A=NISKSc[=
%R2blZ'aL'apD;R=?4bn!Zr0htNX,<F@O@HI]GD2LAV0fK=<MnOca^a2dbr<Yp,r<P"nn8q?HrZMRn>rU"8aTdX3#(5cnNuP3EHaX
%01kY*1(s9sHR_>pfO'eXH_?>$1d$R_J2R$:s"YR$U+X?5@?g(Dr>"\.QAbU_)e9FW:k/;=A6SO-$Hp=uKL,QJ'^TN)UAj]eE?]g-
%IhA\Y9[)!n4=^S3K)2Mk^_#:lqTBEj;d'Y/-"rT>,"$k54b-;U#P8gF:bHoVIrS$eeHPT3#Gnd$62aM<aFZ_VAXXB;[6abfKOb"4
%rT11S>;Pu>&uHcUp(n?BD`k;>jQ1[rOST@".*K=_pQtkJ7L\b<?Uj>Q?((R_pQ:&Ir\A,-@dSgF$W9E5()ST<:ah_e)Ur,9-W?qU
%47ma*.(D/+Q^dYk+b+JSel(:S^[MKu"UFL_DD0P&)#9(o;:t;fr12:I4c$j/3KkV:^BdIXF7q9D0>*E^*p5<SiRF?Vqh9Q6q?QD3
%A1-C@lk]^H)9r#;fZ=g"M_b"W0@2BNF2^iemDsJqk7dL2qdu"0OFI!4LOFL6,?Nt)I"6YnCGS]\KdVh>2,eto)d;hRndAS4S!P0K
%*.Yb*,CYJ44kc+hRgp+dK()Fr4NCGiXKaen@sLTBEaBtB3tT/So(6*)n]Q]A^H<(BFQ<,$$,?BIPq`QZ'UT;V&UkGrC4-bE'r.1B
%'7Lh<!O^lPpr-63pBe\i$]VBP#N6JC,'<+@nB:eFn4NoD(Ge7i*$]q.>Z`q0BDbYb-/OSf(6QMl*K4>2(qk/JIN].Wn>Qr&CU"5d
%0*Q/`GA$h/H]nb$B)JsL99Tljq%',8@'+Z=I[/6ic52RLDT9Oi6[ht,M&r0o8/^"bc>TM,$M0aC5oNPA08.Q4%*C4,=P8>t9*&8r
%gbHR2bJc+mk#[NZjr'On7+F;Q4YXX4dV&p10*Hs6"Ql$P<k@0S^QP`i&YNJPL_Z9]rBe;WQNu`@9e:6"!W#f-#U5hiZbDnL4@$[H
%VKS77qF)VQ0'WK6794UeS+d!_1=oaCDrl4CPF'Pij_kXt46Mr."e(+uA]Asl*'r:J%IjB"o;`SqXEXtk8_DT#H9bkeGP:b5o1K6`
%hl/WNGYn)ZR.H5.!WC2oo*_gD^4PqaM3fl:IOUt?i5,4`]DmO=^H<9/PC`NuhZ')uK"E_O\5?sMJbeDBXa%+-GYir..=?)`R@T&e
%QGEE-7of6djqeOq,_u]f(MW`c(E;t(+f5C__#1(l2PO!k0?]#X>#K)m>aA!u1$4hF4-;=CbV,gBo`F_8M(_4gh[e69Rn8-Ep/!gJ
%`VC6R,.Ghm`OsB!C3+h]%-IBHr)*m@/NCL)3YSlQo*YScXU"$U+oEL,JKR"/M=\RZQ(Z_Vk83;kKKD0.r(7+`UtUO1_n``3i=;PF
%<29ZYQZ:HD2Sp7De2YVboS^i9JPHOQ)*2C@bjUD!k9s-K08,+#]L1F-_B[&RdZ1#4h@[Nh8glVR?$W@$?etuOB2;=;n(DnMJR$65
%6Ee5=kUbLAfWWdHe$^epW[$$+@/It4454u&bk<&`SHIRRO=dMtmV(MG>3`e`E7;Yrp!5_M2ah9SY)?rLKUKR7i'6Wthr1m<+Sq,9
%OV4Po$km:q4Q#+4khu9r\-Usqc?C6H`XeMVGB]g4q0(p$#Kmnl#,2In-sq"#CY9t?r_@TgI,XG3"S(FF6ARoL(gm3\L^Aql4Q=<W
%hBBW3E+IH0?hhDK%1@nDIH!7M&\b0NM'2TQqZF&^#eiG?5MQ:R^iH!PCjn#u)Bk=]ptdeW[GXgKV+dChL9e&p)Is&a(Gqtc`caEW
%'ATj5[S?0YE&I<'E%dSg4gufJQRRtDk;B[aiF;I>'_I'`L!lU??8fN/!Nqg'W#ljAK,`L%lc<amHRJOX@_afVYkPNL(qa0!fT62X
%a7Zaj%F^MT]e##X3&@Z13lm<2]3CU?eJmnoO8Wc3e-inorBG2_OD\%S&NrtYP[<FFWG'd#9c76QkVZ9)60KWk!sCh_f_>dG2#t;j
%&:*bjLLJ!7k='DU9=^#E"`P<bpk-jRj\+HL?C7m3gu78WpjG[(DOJVZi8kM>HY(.E+b.Q':;_7,apWRAquO.'R+e\A?l,(E;C,&\
%+iZ'tG#<O!W#3!jlX^Fc'[&L'#=6(+(>W&2G&5!Zg,kQ9$QZ/-T^kDe/]'KQW,aj]s'YE7i^0k'R(U)/6X.+I=&odYK?6db!]M)m
%?E"_")*8GS/VY?@hQ:&dP8=:T^k0[$!R&1F9O=`4]Qc5XM4n>73&>i0TVT6WqTHW$PF%k%9H+Kh0;T*SS&m2\?0N<E9<T=$rHBSA
%I4e?AK#pZ#"qN@6mkcNQJ`OePe*[_ln$XgCOqmCBg4g+`YF8ombHVl2"b_$q%SnM`p#.qgq'2!6iOfOB0?YDVFUoZLh,bGc60+kd
%!G5OIH0H>X2#U21h.idC]H!%.`e)9Y[Cs'`H1+YAYO#I!+tjfOXZqBL9X1dY/;r=M.!"_paEqnlmQb*U4^phj+Ko0hD/:=JhBZs8
%#ET`*.^2QuaGUreK&fo/44Q=PJ`B1"Q&4Fhr1MAJ"`aHOA9TH5_g(E>@F9pG]Lo##F);Xq5gV]InOc>OYjrHQ*)Y+X:,BL$kFKUC
%D]h\]>Wm3t[l32il,Lm1alA)M#M)Q+G_bIkT^f=.,gRisf/,+DGl%b)OQNIDU9t5](UBcu:$1P[(Y/eE\,3LV5^8E!8&CKQ&`!H9
%5k+J\X`c)]G5(A1!,q<Yf_&X'$\uh!4+8!J3&'4oIJ8DHH)+0l,oq*!:\ZOB:Lo\,^'b!AD/HV'8VHA)o'RAY2$Dc!l-B\$mcbkS
%"1lZd'TmVXh+*6`XKm=5Z"g$#4HR0k?&a*"M7Y<8:LaKNX0]G[]NsY$beA)/kT5SFP+_1D,MM^$Zs=NC#d4DJ(DahIk%=#?2mUsU
%W*L[aY]G@e]53Om`Wkf3$sT?g>uZS'Q5Yk@L>pWUfL6\gZJH[R>mPd=2d[Bc40A18a[LLdN1'uW\'^[%2dEhkh<8^JFlD@PejUTB
%F4<qaT_8l]cs0k@e1b8,Nn"<<K?[[qeSX^^*)Kq*!s'\G@-U&a='@;#TiWV<GR#*O#ItLjOmS1i?3><^g[+(g6=g0oTr<Id7DH\;
%c<3)$(\SH\D:!B%;N#M6"/\.s*sG;]\hd9XFHN_"]\X[*MbI7Jl[u!kr+[)@!RaF92;ES'Nc$+W#=`pkG9.H(r/MG-MCnu4\A=j%
%L?C`C]#.,;%u)]o(MUpYTfYtI%#"&U"8P7075TTV@V7[*?0E>D\/V"3+Qu^\%mL?2M.k@#2aNd*oW/(4+`uB`*H&k^k[N5Ca"J"8
%.Cr:0&\?T1cD]msS/;Z?<\2&NqI&NM_*FWN)7g7%Z3RuZ\r%6SqIJef6"=8_IanF=9kh)>W=Qu9nq[1(.D!uGLF5K67^mUeFQ)R<
%p2a+T_7H7te@cK6VEo3kT0$\mpbG#Lq_=!"T]`UsZcXF^Gj]\@DBNr\Q*YLVTlX3JdIM-Ao^-+,2rM5JJE]hTV$:j,7$W?XQe2eS
%#'hlc2%Ka@*JT^BhsC^i77>qu)AMl2#<Ss+;P8)2(GsUaB'3&Y*70>/b<>?W"?VtE%<^+ch#7,dcD;VN]E>K]<Q[GdB'1q8<X#hC
%JUe57V8:H2!,5E%SP*6k9\`kB-'Tr/MLj',o:MR>,I&()'Tm\pF=o5He4n4_d2!qI\L^ju'`0$9;T_d`^Q692NQJ`$k4!LVaLTe0
%`Q@LFqlQe$3#;X&h1M4jb7rQGF=smQ?qLVaQW(oF:NA&s<BRc6k@/s_q$_;HU7GjZaghOri:R=8=4-c42EM_K!C#!<4-u0G<]-88
%$NWu;@-9#8d*="#QamlN6NoQ<Jg+7`;&tL,:NA'sH@"L$U@D.t=-.L.7<9pW7F">&#$m*Pc=Q2M(E#bKV!XBc8_:e:Tud&d$<dYE
%'aEhFp;2CO!9Z\kE1U$O:m\,1#<<T/,'oh%jBQ`_@'^%t(BXFgK:GR8oT]YAQR&@VQaQB)Ldluj?udmoA$sXRS=>n4?-=SXU)^[H
%iDA,+G(GE-o1%#*'^[<<SBL59dMgUsWL1$c+Ql(ke!Z_q8okH)agi,$_L%Ac+_@BROE7rMT7Y1q4E<1fp;-eQl&Ld>"3g7lRJ.Wd
%gb!cdF"aNW\Mu^")hGt&bapHK8^BgVQVOm#=gmu:o\<)YVrqr3cuW,.dXn&0A+K`I:%d;s>ZP"F$4:Z',AQLSE2<n>32OmaK17g0
%k"K0()&"Ok?s]*=*;!5aTW*G\^,ohGq,\u3%rO"^@efkQS'1;oR]_CuSm>?>j5q!#G]8oj2]"hS)&g?9jeq4Up:YlFV=J#5/q+EV
%(uSX)W"V>0\WAR(2TWEC\::VYW$#K@rD(Z"j+[VKE\=-$iSTkH:epc<IZSX@Wo^DkE\8dH?2\8ub`lD3p`S`TQQ_8tY>79M"ME-m
%(k-<#ogIt0gg]qQ7UU57DkhA&@=\9,cK,WEU^V>t1]A46%s0EL8n5KS\^X.fP;P@e3\/<+6-a%J*%:kHEpa]\E\:Fnl'Ac(Oa(3N
%^HKZK&8QBUS-o?bWgfO%9n[)kPB/28RgO2=ctgNM>lcO_VSOW@QW\it!s^k'W@EL1L!M;=Oj]Ga9<U#kIB[cq*m2t]6ZMo*nD<X#
%>Zs8S'$c#&"H@C/*oPgHC6fI$PIQ7J&B:@.jSo_D5Kg><n$leI<KWn32&AkKXgEW@_HdRopOel\b(m6a\Yg(]2_fNTrr3;K?,A3V
%Y/Ug34;aA=/pB^Qau_0kf&1i2VmF`":q=kYIA1aZ-&JW-Vd#gJM@_H/,*`o3I"67"<XqNK6+Ls8Tt32hZp4Vt9C*[_$R,)kK9?Ta
%i%[,7(F924(4%*DOb-ol4]6r<r17^4.7,Y9UU9@ga<bSGI2g#C7?Tg>/b[^<GF3Qn%HbYa$knZO"S$R;^$FI(#b2$=hr)#c(]p[/
%ZYb8G"3#F1j-Gmgf'c^GW#?OsL8h\!`HROU`<B\S*of%'DCJ1[fLT7X]E<D_b<R2#J*KVDKbUf5!92utaCjBqgeuXRp;t3(BL%YJ
%_aS5SARI6%&-Q@/k`^^)q%_,5_PN0-Q;,5MnP?1$*J=fM8%gUd.(%A'XfqeEmfu-12[U^]^ifh_(HY>h=mWFReFrN#^dZd#hja_W
%A0o$o1&i#G)&Qh,r%1fW10Xp]=<:TaE.eDm(<Rn,aPWCoE47U@B(R\??oRef]Ctb\]gZaD1>4#0'T><6@NV=-m`8Vnj^e+oA!JC0
%FIkXG[n%ae,/R[!>MLF]]#NRc&b%<V%hpY=Uh5:HOUJpqk`q)<0SEcQ7boi,5MD<C$R%?r!8U+!F`;49nOLp946Dj2/5"`_gKbD,
%aDGo7pB,Gobel"0V:$I4XJs`8gqqg(.JH-<-'KRu%Cfs[%j\sCpqlJX`Y37u+Y&e1D@8i;$>]c]M_cZsDRWXVY;NTg!c8=1/!%!X
%[O;0WT5e_9'7kN<@r6c\_,k0I/Y3%766B$.#SCkYVCeI.E7P9B(*N,'dh?F7N1(mCi\q]--JIH,E[;bl><EP^Wkl"nVfO*,BgF<S
%-gs.A(.D"MJ5[Tt[`L+>Q7[uon0'tl[OcWQS%_Da(FA8Ma;0odZTg1QLhC1G%u`)h"2kfd>Pps5bl_FEX,=;D_mXjk$";RJrHq)=
%79mehA-T7clJ'.Y`P?%#`#W3sKJWh,bRH'Mj/%L^_W(camK'M^XKt\=]=,!\og78>1)o70EbuIcBS1)a=&a6V0dpd_@VZ31Ybt3t
%*?<<?ZkdF(Du%\["`/e'HR!=bS.%Y7qa6tc[GGl19(glEg?o(a_eQLcU7SUC29<T#fW89>_/<4(_$6NqC>!s??D(K(.iVF!IPP3g
%JZ4@$Hep0Y(q8i;@7VtkI*-)\g*.Ob&@L2,G7\Llr7pQN:lFCqZYqrXClbHRa.h%W%dHTWdqRDqW--!l)r#k>@+/RZA;0)s9re[0
%R!WGo_EmFph+DTG=:6\Qo7GH.HS=%G#[W!AA60Y!oE3)-GHZ@':;mJ:JC>]H!CJ9f["54a1bD%-UX^`[(5=sdX8p_D6la?cE+tdL
%&0G"X9MeXoU4t$h7LWQUKATsa^2/jr`FTB%/`N!c!t?G+_(95I!bn,S3l<BU-5C.2i66eJi[EJKUE)o7Q4Uq*L=T`J/a,Do(V<MN
%&7X#m'^]uI"d<W9mDQs=!7AZ)%O3/W[&=)$h^n.Q89AT1.(!K_Lasm\_mX18A\4^s%gFU*GZ/`('V:\VYd"eInbYVF%:K6M]2>O.
%QL-$:4Rf\u)Ppr__NCY,"FPCm^9_H>)!KXj[oJN&]1E\In1=-BX(\k\n2BM[JXu1'omKYL]=SpcFLF7W-P3U$l:!d??=m#<fjE7I
%fjQje!,%Fo(MqW]S;$^?W-o@c*;hCcPWBsfASF;PZbn&\^s*?J>RK9QE!u1@D0FQ02JdP))Q-`E&XU2+Acn21UtIKX$Re9H_jMTB
%cKoM#1bc8BW6cn?Z_6#aq55me/;:WN`[l<PGp?ouUk;J(6("3E.lfX5am\V0n7>bcP1pX'$R-8>9L5#90&PE&=[#P=\@L7t_lV')
%b9@:fRSSQIE@pP?r8>^%5^6dMED<O"%&tjnDcik2TZY+T8apueo28^\0P.Ftgl\le6CK7D%Y]00*ueSb""0!X:>orAP8t5G#tSm9
%7_q5qZJ_^D1Dj!mHfdb[AV,#rT7LN=(-0Z^EFanEC#d(OG%Zar.'ajBs/np/jUP<j*u@:f$,khM+Cn8mR!ZCUZERNS0FW^&(>L(=
%QV\CLe,5[E1$ptV_sRq9B%V&YgCbp<3Kk?O":S#`?ChR.,hKL]qJ/B\TB6_(+:Ai0gEh-!0G.bd`<YGN8)Or<.Y3,Xd1:OS=IR=u
%g$i*3f8'en415C0pq_tZ5a+@`N/j`?e[6-LBSiW<_T_D3%hqPL569oReZA,<%??.m,)=sE)dD9+9_j"o&<s7t^eYYrG09coB.J'n
%V#N!=Z".n!ZC.tiCGW/DkPEX,AB+W'R'H#(`Rl7Zh)-37/[uY-OiSP*(#r3s3@%P>_CX<=ZbIL:$?.?CZV3@L&Z6I$h1/.!Xnd&?
%UQ$7'RXioU9l4R.kg+A^di%MoC^`FI!cK5LH>4[sU.""Z1]rVu@1k](c.eg:]ur9=2Vk8Z$]d`>C,]P`ikA@B54TCq(o;cB,S#&M
%<ljRKDE\Og;OFA"-BUlR`?QQ%H*FihMI)e.3TuTQ-$S4a=cT9,>^6Y_B`\\JZPO6"-/E`]Cc@kIiLs":ND![M@c_FkH3jiOfPMIo
%)jdmL0W]"oI[t53>RpW,;3%YG_KdL9J>GXY(""HS#[#oZL<'!g_QIGpkjp:f@P`ApC$9,63.me,Z_?24)6rPL7-bTWUhtIXEte%\
%ft^s(We%%""@J3anYGcmd`B+oTJ3T/=o*XnSOahl*cR#a;!c7/aVf5@l698N8s(drdd\/'J<-0X<US^ba6B>nKtZJ];9OeCYg'^B
%("DoN/;BK%GP_ZA(OAb/%?mt&Af[=6cpU.VB(g"*!sYX@j"^+Y435h*Y8g>>rQ@7WZg\%fHOXPGP-hD.as-_%7f3E&H'N=ML:eYN
%6Z4So"9Uhpg?EkP50'X[4,aVP#CtrXq*ZIK>B\2o)bn#JnW?7o1](?O[d/+[0RQ"$d`APE9I(rB+%@h[d^qC?0T:V'<:WsBUhe;n
%^Rrq'Eo7KWJY+Y=mZ]3C/s`+^M1o&WIY?'gO6SKIg_9RO17ouO.Be<UhM7".fVqg:,VVl(2*P)B=2-t-MHS_dXE'7=%Nn4N@>;,#
%,@DFcg1-Ts]H$:Gc@#F?LDMmK%gSVWII.<mW&ji6Ts-mDUV\6\PghLPh@X#_k_u4R/:\Nj<VTUQg-)b##-(_.V`#N,o'uCY2\6Cl
%m;&H+ZD;1!]B%%@e/@KgqTX+Fr(Qu"*E1KLM:cA-Vi'KdcZk%ijL=Y_R%qJN$nlr$s1l#dcT/8!*[.%.'jgB8-D(qE1>u@9DTq0J
%J98g$?"98;C9K]a#VgZFFo]JlNDQa2aE9jo(L@phehI7q))8b1,5I%(L2N)Tb?PNJi9#f*W#J,OMC`qqk)pjRN8tRQ:LlnH2pD%[
%M$K7jKhsq!JQKhfk`-^i&ohm]/+EOHp/cnaPsj4T#VdQ,7'YdMXoXFhnM@),Rjfe5j[OMC&FL0@@%TbTo18LDEd='VYdi!F)4O1k
%6rb0U9QVFg;]Zp"fL^d:94Ff2,8=(<[05NW*tog=Vd=d`kRWNd*",n/!3c1RK8Y,)p3t'p3;3!'F>HXmGaM;/XCo=bd>Opc(]n7W
%6\8tdgB4a/$BeG.\sU&mnAW;BJ:sI<E!k[+;aU$X#%50,"0OOQ+;ltG=bCMn%!hFbY])5BGntU]$3Ug4A?&4DhE)ecJhg:PR:SEa
%,Q;k%SRRja[jWk83>5?0U7pp@@D/26:/e%L_(O"!bBudOh_W-?&;)EtcJW'G)2JM)J[A]njkhq`KZY'f$%7>WeStS?:g\j.qJd*S
%06W>,<uU'i*P02C=f+5!IBk*M@Jglef"7AT[d4I^ZW3#S2-)9^?kV)<qUR;cPWjdTj(,tq.:g`103i]#1)<cR,3#dZq!^O;Z5d6&
%),-^8,]PTtY'ZQa9=*r?lu^CIAb(Wk&I,`S-@FSM%G8.`&<"Abp'@c>)8RKCbZhbPL+%ISQPK`-*u%eK(2^lrJQMR(/8fG2ONH.s
%DJ->S6/2.U/o/F#A#d.P;46GX`30!\@au(7D:lL8C/8#COKd`"Hh.-?"7U3%L9&5=;F_HKV[fPDYTp:tY3]-2mYL<hETqfkMJZ9Y
%41l(=\ZgRag6W7O2LAN]#+=t9cCp+kpAZ"FrMn.NOL32Kkg;HTN2\=8XZa6I?uhnYG<4mZ3_U$GIQ5u[]$1KbK\eb[0A3kc(=*#@
%gUeM!=6+m"1dgsPQ<Uf/75>TfITc!efll4^0l\9UGa[WI==h@#<sE@=Z&ifcYGAeoV_d[qQ\=u-+X[bDAVq=0kgt#W;eQ]>NM:/u
%Ipuh+m)PRngs4+mh%OC?cS@-*r2cF]LaeQc0r0Z:)6bEILK2<(Y78lEOc*e3nTaCI[W`a9kI%-ErI)LV7@f'VUVo#E#=9i/rKSW(
%KfjLpC(SlA>u)PSok^293C^s3'ttX4-R9jjM2RD(ECd'Qa9VmXb#\#7TeS<V`Yia.@fRdqe]Fs-`V?+>WQ31MZm)[URih,0PW+R1
%hBB?Sdn?Z5>Ve((TKF[AbtL7]#XcW4H!IGfrjdoKG>%1!c185IQ=QLQ\AKKrPZ,3,lfgEnW=)<1<#RM*o6D'T;FJ_#Sm1RX62Glk
%"[OYn<4-%8NO6V+5P2U(6X+6RZe?7?M=P)fB1SMKgk6F5'_qN=3Ub?''F_>Y^XK>R)RX9[CR9J[Bbn<RR'J74eCm>&E8;TXh.[D'
%'tq^'-[Z0CnV*cFC`\j^nSltUZIGEa0<2XRMJO*Ad;'L#F,c&<ZhB0s,MYP%Rb\=;(r'8tK^8(&Q_Q;FH#`]1L7?j1RNAOAiJ.LR
%n`@$l2p-eY3`;/L</SRlia#\taBe+Lq$Z5;F*[/Q/Z%OHE'qGi'Dep`h,OTh>b>14lrC8D3kbhT1ShK#Nk)+52eY2*Cgm1I\70*L
%QcZf--tR(^(:37kE&Nter<H[e1W[rN8IGV?j7pP`;e7)J.-6PXbAeit(D4n@f&1[t;i\hZUq?!UILMh:>u`T['p&F?ifQXbOab2W
%Iip"]H_0\[q,[gbWg%_)7du<qM%gI7.[>iR+`/q7&583t-C_c?(/HL`:49`l^anE#KD<OI\HsG!oM<[uO;Mh"$Zkbc",H"#Qm<!>
%4!i;Fc_;!u0AbGIEP+*f\N<iF3bXdI^^dXF+]\_d@lD@<4m<(^4iFqJ(T#DQ<CqmH#IRl?YV!KNbid4Rnl#Q'eSbhWPrR*lItk<k
%36(A37<'dd`ugZQQh?G9iL2Nb$o'Bj5OB"g,\J'[fc7J[7>(DkeHL3MKF><6s(\uK/l#WmeSUC'.q.@O=bDGi68%<hS3hN/21jKf
%:.V2*&]\06JO.*:7g`un!f6)tHgJk%H_)DFG@m"udg#N+"E7m`;rZRLhuEuBCdSs3_,)VoYZtOWTAYiSD@";pn*3_t>\:\bc<B#^
%Sl\c6lP!_n/9hu,X`VPU."O_k&lJ2PX^O/>.jjKOL_Kf14`%!I`^?8rL?>VHaD'U)H&&51Z+u)XHSBTB'#S\3oL=+%Qi#alZRJR;
%%1r*+n1TDNE>7/ad4g:Qeug9Uo:hBPB?o$e$KOD%TnCJ/8Aa-L&eVD%bd;-[j0BVTAYR4j<)M<k(c;p9+I0tcik]8KfNF1d41Gq0
%Du`WY1L3(?!JQp?7NMo6-R=!B3$l_D-&Dc1b]I':*n>\Pkd,1KDre$EQ'C<Cdl"nRM=F`RQ&co8E5%M7:6/I"[1\'4g-11k?\EMd
%nV2^.>25/,',"V%C)h<.p14"8V">@A4(Jsi,2E.Ue.tZ"PD=O%&k>eL$3j#qXf.FWnl!HYg`nHacL!Ch)6B<=$Z#T6!Nnb$//uh(
%lR/f\\!9ML,m5B#W,/A*ZkF]ic]Pk.656flZ74Es?UE13VOgOqX>Mh**:%XZ+!g%"+cKNi3Yc771k[8d9PV[71L)jh;0'n+\l1_A
%VENU?P-6\=8Prc&A)=!%q+E*Wjb;b\@IlS)-gV\OGghKhI.]A"o%CJ;bD*M_1b_o!b%&Pk5.EL)%TeGZb^0c'ZNnLjdA20Za]+&*
%0^3P89S]Y%&P4E3)_/lN(]7fg$nPMrYmrZ>8r"2a0P]aAr6XmddC!b+E+VU.I+O/?6OHX@a%)Brf1#3Xg?sLab%$F6%I)Bfm$fu?
%-2I8"&JiE"-%sMSPStJr;Mm1\E7!"^#/G/!\khn(2]E>ceg$4>M'!8-b'clN``#41+UP>ep(sh4mbsC,I_9L&c4%MEpAlBm)7Zj%
%aP"gpGRijq@iOtWd.-^Jp`iA%(k<M&FHETADY&#Z@4jaoE2BMtK\u#nr\9qXe.sgElJ;HuhR0"6Sad%+(#s2n,KI-OhAqgpZH6?u
%6-2kHL00ne;#X4%._6_`4sL.j8@CVS\rCh(k18X9<+ICe_nEcuD<,:e-muYG1CD&oB;(^V,iDW9Cb)6o:nfPe>mDK\fAt$&:*'a-
%%nN>nnrt_A7\."e<i$6M(.JN0Y*NBb8?.mZ2[I@pEuSmn6QP#$]3q$sbL%qT=MJU%0nNuCrBUu.U.mAo6eJF832XT=fLB5a<&ERf
%<IK4k?pK#3909#l7?F#`850gkHWOj:6L8T!:4qOg`^u!R@V8(:,NoHYO_#TT($GDs<t!P+9J-UAj>6"#paYmc<6k+UMUgTCHSNGo
%bl/uf.hs2;QQ'I\L`)2lT]X)[*AEk`2CQjFU?"@N1O9$%9<Ce9qFG_KajHW;o.I\_ef@Js_/_gtMCK(uE&K\ME_QZO:3hE&F*!p&
%-E@2l$AR>(,pX`E]B@Y_*@C"``B95;".4BdQPDQ0nX-kX,t`g9:41d-.[pN_8fViKd?Il@C=c$!<lE7u^cG<$9tj**/.<;?*HFZT
%V][8-7mB?u7.d+3MghZmd^+4>8(`9:_+4cYGPC?QKF8h[l$Zlb*n^i(/2Q7:Tm5lP7fjuo)kJuu$+me/<7,`@GIkoJ9"&-q)XQ_R
%\f@b8D@.a-5,5cM+[[T.646ZiIRp8g+:/nTqeO)UirPj+;GkNZ'r=GLfFD2CnI&eP&V>,JlpB]W%S;<u5bc\--6O)lrcGE!!cXuB
%)`!;jlL4>k)tgAY3IXN%Vh^1@?b?*p?Q1RHoZ#]!2i[FA2OmLc(aPnVAg(:W,#I"k].Gm$(X!l_37d*`XR$?UR4RjV2-oUX?+/(k
%7]GR:cmukf$^\@QqiiYo`_.Q3$gXX:Z>JB+e-`No8Z,K27,Ym_S/=%@FqXf=Rtk^f%5YZJVmfS?(-"p^EY%?+9!TK0".WWmSYl6>
%0aLR!$OS*hAe5B)_Vj0\5Y.ITKNls%-sSiupj-)%`j>e:KTJg5nQCqhVEV,k=/qDtjCLhB&_<nfRm"+QE&1YM'O'6?ljGQU,G4%q
%'j[tWTQ%!D&QNL38s^59@VjE,+E!CPNaD$k3''=gADCcq`]&9K=f4B89jr-rZ.&+A^aCu0r`BYWJ,h5e(l:GHK9!A*Qu^^"9a=8#
%n*1Ym#b2?AVh>Et9C_L=om)YSA#lLa>PQh287U7h3lkQ$S9E4p["$1:S),.nJ_1pqoV2Q.ft9#8@TS*ip[q/=Jsc'iprkaL5f/ua
%F'bZ7[eDnZ_Z:r5S@'Ig5t0_i]cSc\T!-n6Z:TB1)@_S6;%H7m)'pQ><CXJnFlc3K0K[9HfIBg(N5XQccREHH?Q79Ugn_*q+D1*s
%pOt`4G"lIaJP[&rUkHMir"BTL7RSVirk2r!DHAD0Ar.j$fjSi!,&dSB2L?W8Ese?IHnjGlCeE*Vkq2tBGB^"#M5N./fjSLHjig72
%Qn;"C?j1H_k$aqsV?8HahP:=<T9i.qlD+l939:G%VO6'efkUkEaUrFi$OLqoDGtI&>O'h26b@r'HtG::@rbqP8Ruf#@`R;LWeZY3
%#[U$)4P*]4X0ErT4@@LP%/7k;bZ^RD#XabNS$$>"4!o0q^b[Lg&t\)s(Hg=/9X<ug,gkG2Pk-9CrDoVc:(iOa1q"g"p:<10`+A,C
%1-)&:IF9>YHQ:H+0>`6YJAV*YJN!4JCMNm@*+jLV$*@V`gV@N"XD%.g"?8G+e*2gc@M^EPrup']Xtm_Q3.!?-1rhV<m+gY8e!L/5
%-V#\)We&-('3E5tiWeL.S=s[5g)dEZiYj2a.4<LZ&b'\m"'a$KCJPIWQ%t9#;/@A3F"h/-Q-/+E#6+jio=4TnQ&<XLmNc@H5X<j!
%[jl`$R=h^]kB3u%<C[j;NEBi>E(8()IDupNiR>;kPJom^(F9K-+N&rR>'?a4Ec+LaFqnMafZD)H@s1lr-[Nkndeq"/r37"()+cPS
%*u#ACL$m+#B@%+.11IatGGYZDN5RCj[ZprZa*`)#0ofl&0j_l]Ce",kia:BY#cqge/HcJ%E]2<s;Y!c!<3/cKMP&NnM'&*gd!6ts
%-Cj!"7is\YRt?BM'7,l@er3Xjk#6<CLSSk+P:=:.".cN8f<K32'$RM''%mD`b>3B(]Rs2>-`:tHGT'1RROoHA\XS^^;\W@I?rs)A
%co>$l<npbZKb*UZF1F.ABk^l4PM'OnX]@Z%L/hA8L_iS4`-Lala\M<#W%*F[*1hc2p9=FIX%p9_2V"*#4.2[8jIE<H5Fh=uUfG!p
%OPpmV<S3GR=\VY@7j;qOi(t<^h6'_)4j<0EG*@qee_:T!W+m$o_jP:S\!)uU8`':``*>rNomPg6*2Kusg(VkD8?O(H(UA_18g]0!
%kNF/!W^HhdJbH)88Ud;C;'b?[15_:DU4<Edc`W\%^ji$r%"#0p<<ZhILj/SPAq6*E^@$"n8CYYe#T15K<&+`C0!c0'RTd76#;;La
%)FikS?k-C0"nG)2MG.3LC.3kAN/_-g9?!,9hs,/B9UKJ"J54]6Z\X1CF3#">pSt.'nT4t6'p(PTiBo@P;5t<_LpJPq)Y+r$V^[rH
%\#,BNFmZg0Wb0C9r0=3rG'RO'i7,l=b`eS%e6O;fU*%MCY^pmsjCPWk&W+L!c?@b*bI^)Z"EWW_=Ua<HSc0+qjGYCIl0h'?<'JmC
%B+pf<F(<oF]H1>%R9m1_Hr!bRnE=(`Trk$$IS=iPLQGu%r+W#o!"tZeJ"q[)CV;Md6[%m,Y#jln0WBoc78X5VQG:sG#an@Ih2$p(
%%pfCD@tt*cN`&lBrp3q@V@-ZNkd<Jl*T;_]H>n;[T!XFMKWT8*=P=1j7"co7gIO:&:q8LUd*A1/8+`2RDe"XAmWXM8Us.al`!4M,
%jWQlfFf4XJVDuLR\.[f-CRk0'>2PcK2Ij:Yk`T20k/8d9mTN_Ca\?qn.AWu(K:%Q=*0k%JiY63&9hpG(IX,t:"#c;/l%DIp4%K<1
%ji\D7o:/E+F5S7B6Qi7Tc]C:[d82SmAg?=%]WS<$"3MrhHBC#0Etg3rVd1?.e6=TPk3nZn:$mX_]g3?`2sBQ=%i$qGd.Fp9CeE"<
%$5@UiT=;HdH75ie2RO$MKO0#8ZC?bRW,K"?XBie1#1)M`Zi6`Cm=Kj$iC7pp11V=:.lO<ZQ!`:FoUk5_1(>JPLe_o1CT=:R:0>;%
%KM*%MLUJJZ&UK*@(?_?kBAFn@dU7it=o,e>Su*f:3hokSI(&A"TPAM]'dZSWGZPV+(HhfSGD.8G'F8mDDXu+gRW6D5]-T"oN$Mcs
%.A@/9E\r**Z`P(CSUR>>eP]]0XSkV&TsJ(,Aqat'(5&FY*>;Gg?,rA9>tH683&O3O<Mg)r\kZF6.)qP.2d/mpKQ="1%GKcsL]D$H
%cI/(aG"*#6p6)5qb#[TfZpT-h_PH%W&ENGkV\k_=AN*,Xe>j2pg(/u9CQc;1p1pY%S0D7-dp<ZfNrFE3"PZLD\U59YJ%\R"k/GY6
%coZ'B=sK+>:bnej3+d3(]2>!$G?'D>[(Kk`/@/Ju@Qst-7c`$<8qK:s$:pE&QA:h@CN7Bp9)+,Y6n7b#Z3Y06PH)(1ie_RUJo4X6
%SWl5PeTMK7Xs%/4GR;po<0"OuA5pH`aZLV.2&%2U6$>\cMSP]d#a-N.`t>0u;fW>kHUo-glI!?t2FJC=lg3%f'[VV)`*l(5a9@.=
%mNITe$%/L-(pt(m.WH2A7WKb4J_7Gh8eG7s1HoEtk4D5g-Rtd5',.q(:Eo7tJ`aBd&8RtnKH(W3RtNZ8>ug*4b*L_S@]>lR7c5Gt
%C"!H,$DC`K!\C3?58EP5o5-(:m*JM).0uqcc2`97P5VBgB:sD>m12JdL/(oPnVdm'?!NU>6W.2aH?JYQR,\4#!k`nu2^MkEJHsek
%<TS&eSkVqh0ti-hJ9QLSQCX/Kpl/b;ZIOU[NTsSI9o&&QBRjY0(-'A7.aULCQ1Vu-+_]RZ0!$O/]1Ghc]rgEKSkYoDbc[5TGaKsl
%ha<`m][Csc]F&q;oFY[.SVOggbi--*KEXAGi<eo4<Q8=&F\0g\m.HQB/p_2$Ea/<c='tLXTM:L-_:6c3[:qZ9S&S9foU9YR+KA2(
%+p,_;^.A+J)(;=;"8Yi;NYoO0f.dn/'ip,J.IE<=4Kc?pddStLB0kl3"M9I^$BiqAIRtVdPn-Xdph:#@'ADSkUWH86<X;MUmC/Zc
%o0cL!7TDj*hl!4JbTk0-(cobgk#K!$255mjj_a?<#EmdMiXJRl6agap/fQ,%ZaeL&UP!<>B>Eai>hu^fOEScE-n:+m+B9g29ai[l
%XLRL7`(aanJRRXl'IC=G^7i2ngok"KkQHl@WMMtWL`0WDVCS3ogh-;RV_0O/>n8<SqnqCT=^B**9d[2DX4WW`(+1L-0W1mL?QNQ(
%Z[D#50"4`4>b"oqlr^DZNl][fbF+aJL.++r(LVi(^,"a\%d(>D*9Ie\.h/X=k4[n`+XPT8CR>rBY3RUk01dlo-7k\<Z"Zeuoij6Z
%37)nW966l!#k'SHGqmjO35LoDbB8'RS!Y'U9Q/mYJ(C(l?#8g"l<`K!-0If(8kPl*Yl'&Hn@LVD=@OLse'L?]i@#WW2-&Xl>6+^I
%S"d\`A8i2BkF@^>:"i'PY4gGnjFi^DS*PlLS1BCjWuT5sLCAO8S)#l)<PH]#B0A^b((^R5Zlmg"LOpocRke<^7e`Q8LEqn[D3m%S
%b*Z-`a;?@HB3"n.=&F\s0M-^_h'_2:Xp\*)"Z#5ckjV,5>]Jo"3e$O$^$8d;hEb0S%JuQm04Idl9uVG+4l!ZX#U!a"_b5(;E&1ji
%3e-`Rqp(#:8JrXACl!hj6s8F!3h.4CYPYh52]Pj%OoLW"CAd;ba\fKM:M5?2r.!7LU#n^-I,e][3E4Md%_Z]!6"_RT=8c0KTa4q]
%Jdk]%S;mc2>uO[@lqL[RY*#Xb1#9tX,XD/,5I<h8%nAaFeC(Ib;49%FRIoIt%&Vtk#?9O&NPXa-@LW)D).uLJUK\_7>`-@DTWpY-
%l[%?Qets"@^T#GoIek817VaUW7;FNqeUtI42B83,b3/7-U&eZoY[N\2-+mV2kbiIU<If>H1Qb%t:]RA;JR=.gWCU5f3u-jnnZ$ro
%CpHFCW4QQ`]m0Y>[u2o_T%N>3UR:(.-SHKoLkI4[&8r@"".+3E7BQK`+`?"/`RaCnW3d<U*`-fUa$@l<3<?UlR[s)\"gaT:l3\`b
%@s?C1]re?W?,_5-c/OoE(.Crhl<hS)<E0jL-t+:S!it%ib_udQd;-JLp[Z`f4I[)?;*K_e?ORPtFbG`:ZJ6go1R6c982mS1LWZ5I
%!3M_.6cj0j-+goXC<fR7EJ8h,q58i+Tf7\`L$l=Zmft3H-53)^$,a%k+sbdbCGe@+F+#a#f^6`KM).2p<*PmJK_`[4K&$lhkjf4b
%"/-\oK/s!,F+I/>cam[[Y!+KkaFQ=Il>.DK<2u_&gk246MN,p;_dW<)AVOt42G,(V)/otZ\h_3RU/:?J=AIVJW6A`<CH\4s`*+b*
%X6OpJp7.UF]MW&JX+9ROk2g\QP6,lukjl];cYd,!1';SsE,l_._7cj7F@".elj(;SBL^ETYJgrHa%<9][J@e6r>tPq9U-A/`6=;n
%OTU3YATAPNFQO'V"YTMOe_@'r^I1j:oWHUk=fb#[ep4BPL7O2YEb+o3WHt712hH+1F'pl$7D$F=V)luke>MAR)*U/\.oN1a<'/_*
%Y3J7cKr[h<C6H)'];YNG13mdcm=pB=h]"qL?LG_]OG=RG,=Xi&NNH+o7m,FJMb.`?'nfbb!<#k?!i"]/a2BS[N#4fR0E`B#qDscA
%N61Q8/pYK[UM$t)8qJSb@)ET)!eu^bc-pCK/u!nD_!Er.>kPe]1hGJKE0ae@)"GeO4UTl\)Rl]oF[C,:."edbFdq>j)IIho_`CLV
%;2KN<=)O@;e*/B>(6[28295":7sei]c.?"sl\"i4,LY/#]K5pRV;S&J#ieW*oFfa(D=0a@Zob#?6;3Oh]H8Z_M+H_BNbg4#6lX=e
%(tcUS@$XY)iDgT*7D]pV$E3Zk/pl5]U^DGtF)W642`PH94k5$n;%;bHPT21'5Hbd/SR95h^dD\u7'2B/g*M$5')rI($8YED0BfQ?
%AIt6(%>f2>P^j2e*bZ&@&UDr-oF`f)a-Bs_ciD];eFqQ&XXMbtFVBoG\H/c>PpV<>&YfP&37p&bc`tiCZf#d4-%!E``[n"P.VJAj
%n'#iI-ISSnk"]5leG(lnEHm5^S;kp!&aC/d*_a>V^`h/O_YN$s6t/;&Q[$si`jF-=a=Q#\<r'B=043@l@ikVDk$Le,TIIEn&p,Qs
%c>aZ<*e@P+1VFqXS=X]pS`IZ.^uQ']`jf<.08GZaBgcUUnUNT]cWtJDZ%4n#R&726[Udt0SnAc'*@;s2G2=5(<IYnq-cRl.@Qec\
%4E55Z-pgj+Vq(\5j-D+'`OoV3I7RIQqA=6AW<80Rn]Z@k]T8`Y5`D]N9"<)?@(:q@aB0jC2fRBHMq&&We5(!2AB/eQ(7qqsS&Dp.
%HSgOe>b`R.WWkT8fu27Wn\kK_L@')2$@U62>&?_dW2;Br0qp[dO_MQHH$YhINJtul@Z>cKcXITfEbur/^21Y\R1_480]`sZ1`)=S
%FBmoh@F#l*/i9=`6r(VDLiA`5br,I!B6K`r.7At-1_uq[X,`BTIk8N1*$Zn;^^a-9XNAWWZs(:ORJ2?_B,sY1l8/lWn#>@K"?$$T
%)4?XYfDsZ+PH<!fdG&pSoOdq)d6^pr^f<?:\>@8L&P[F<Eb<+TR6K2(dbJ]Q9j<a]HuJX*-C$$s4gk_$FENC.Z<bdU63JGUgog-%
%1@#]sFQ2#$;AF_Ll/%Z/3XbnpG(jcQC[B*2AjjQ&@91ct+HXRte.lIcfb31VU4\7jleDtW/KQS2/ZD["rm/Y\83E_jPABoI=FD#[
%JF6UbTVSF+_T@2A"fK"7XIeLEmbGXi8S?56#1+I""lj%na;i']aS7_6!]`P67Ik$F;ma+[$@4@2FZOW!kGscD.q!V&_?jXKg+B?4
%(m@_/+f=;/'(p*Y>kptpn1Z+_\CI!AAX2E->Y7V$E147X0QS25&M^NV"LtRK_]m=PXS*m2l.S!R=/a.g7+oh^2K=pSc9W&:CbOHK
%&L@+1,$Tn_![q8Xm?rL&bg!3(,T/a<e>Y7O1j#X1pVfGDWcYm/NbE1!;-cne+1*`Q_qVsPD?Rs:2sJA[kT/q'HG+lQ"NI25X):\g
%AW"Etqe.%BnonjiLmTH':moo/R0rZaGHU$*:S@Nu%;6fZ'2P2[]Pja;gc0@7cLZdWZfRo$-kD\jR>OORQ9!n%3kA2N:ln8pI#uQL
%S2uNA3Io>Kce.BI_q\0]oBs(X/XE')VO/%$e&TXdQpW"Hj:3p-IS$q,FSOhaI07ZJ>2mg%]lF"%a:<YZgeDn'#/2'oKh'NOEm`(*
%h9^nC<sM#L]Y$:\ouSi$Ub:H"[EaGGPKNuV,Z3_*/dDpp.K:>l?;#CGZMt+<i_n2?(V%+=D0g9HiC7Ln:34T_/BN*R3HB@956tm_
%Eu:p/J+W?<i1VXFBql#=6pUoYNm_p%oRg;lm#!nh6^G%n?Q0fd*,Y@h$!oWASPNELATM1^EZB][R:)<?<6Tl=TZWa<NLNlW[oPN<
%74O)_fSt'a&A=#qf5u#T:G_u/VYhFZCV)sVdDVtCMiEWJd(jIA)MiDbj+e]/V2'&q57OJtMog8'i(4'1K#oC54=^:fT:DQe;bdTe
%JmeG&(H`XjF:(JV:<kEJX9&SQX7dJ0KKGX8g[h_mjNATRe89i[Be;/M`%N`'m#5AI1NW;!NsIon.QMsImsMqtB$bW$8WJFE&-e8E
%\cMI;83TcRLkA2-O9TO^N?cJlYbg*,7QuSG@;cuCMsZC;-0Rm3G7_#++11d[%=0pkS4u=<'K:sj&qs:+0_.WV4%2Uim$,CnItC*a
%JWaH^"-n)aRLU)nlu4/rK1-96M':4NML<"cr?dZ%To-8d&in^7d'*0dO\8AcVg76_W.:Q\lZ]kso78*@Qis$(OgEN[3UXN$+8Z&#
%:Xf"rLHM"m"bn"N.*]4!L6,mo_79V5*_+g0OO"MAG'<pHU^Y*EIiL)(mNQmZi4,9m=R'2FNP=?A!uX:_`n//=7]Q.JNcmP3j"Qi<
%:^ZdgBVNpkn2O%-RJZa:Nh:4-[B\b/L1Y&apb":N:rf&h8kg<2^P#poJ<#7hU:qUkk'.9S?QdCYn[of$%RKS60,uAa5q4<AE'1_J
%#&g"\R]NC"j2MrL8M5RJX7gZ12H]!YolGLD=Q>3*Z#1^]j%*>-T8X_i.b+:pNRoS!$da.+)esH6;%hTQBR4+,&JM,mZK]st#Pa(C
%<u<\&5nD'8Fu&T$/9rsZSAFDfh\gL%=U.>Ja:0g5dua#Jpu7*BW[c/9E@?#6PX"Bkq7K=rPiC]ADR7<3TK?ID>A'g#2dh(0K.N$D
%TV4V&rsH>rii;-u6P\N!qS7sn8S1o?)+2Y$Tjrl4#XU_BiingVoF7TUc:='Q5iM(kGdPeIieY?gpk4kH>#UPWil%VLn<52ZL_&7t
%"AHI#>M:KF"9b.7nfWcJ])afJ**77fMaL.?L4`hInRdC,L581s4*`X#+V:O/NY"]E75Lj2W>N-N3p-SfIL5H?n0eLsq!]%?c_-'&
%VA,gR4M4*aZ=&Fi:OX2^:1n*Y2oGq]S2Dn:Kc1p@Ro2NsF2LRVSpC\Z2B5fKnc]I-LkCeB@"u/UW7_7j%V`#:9Ibf?)0J4m/*801
%i>4)9(mf&n3,bW3q&c\WJ=K#n\>-nQ0]o2:.D,iu3'cF["b$Bq$*TJp':<`,j2C[L-+q0"r.'GF21W?t@"_VEX)CCN$$cB#&7-RZ
%,m`Jn:clAg&.m-Q[EaT<pu!%?2G*e&I%t#-)\.na]XV:eEu=BD&:t<#QdX!m15!CtZDVK@2]!H!JK2oRa9U?$V?-QXe]%Cl"[=#T
%$fOBE2/@oTI>sBK?55CE3,Q<O&])el@2'7ME89r>"*]Ie70>ao'AG51_dVaV$iCPpnNqdK<.6J337P2))$V)(Ue80k!O$=qX1Wlr
%ITAn$*t7X)Vmd<,K`F>B/\;>IdfH!e!.6gI)>nCk5Ss>;5FI#k=REFNgGf#!Ri*<C&AqI:n7Ug#3s7M;qc$l"`VnYF#PNL;KDIau
%lj/n9]of:$!aTEEVg!&kKmFEI0>S+m]nO<"cF`j/E8NB$+11LY[".ucY\t@_b_QYXpHcQlU#&iP/WQNH0sSI3F/\nDI32.\/`SY<
%pH^8Udo-\Pr\<D]Al"oi%@Vnbi<S`hC<C6EJ<JJWg=WLq*!#L6l5MWCK-WbZT%%bF."uSqY(cH;)<Vqr7n5hX'-S!+A0%%UeC4k`
%o>#`@K9Fn$R.#ZHr^aLHlr)Z)$Lj^9(K*bgaJW_VcRV$1o$Ac#<;J!%4.Fm,$/[&04C\K-0psKjl-B#m=pq[_!q0F#"6;cB##8Ig
%Sp.\gN^e]<p<N(?^!Y[J:q;%:]sE?T!VT"Z^_tf8bV3r.OZfr*cm=qXC+'PWk(iAkFc]#ZT&\o=p"n,)H6ZpP-.]p)k&[iZG#^tm
%&YgtbMII;:@Vqbs[\/KI!.("$0F#iBGnR2#&"GRr^e$@aR3uGA,@*"l1-KmcbBp/Kh,3%MUZ2Im,]?Y;&.p"?DLe."]+:&`m?;RS
%T#"V:<pUSa8D]]_,k!YYW=P*b%i"P,<QE$g)W;^tXaWq'icm8uO(F4Mnn*=qlR3esDg]1s2gb#HSP5&#IQt%)F7q\GErpOqNb%;Y
%cEVr?@%mr`47hJ3fcO3cl@=lMT"V91]Zco9J5E9]93!;&-QHY,a;Z=$F=%6<6bCf/gUnYI%)i;Q*61d#42RN@9a#\^=-NJGhU((,
%;oO#YU\D>RN]2DG(bAk[YjceH\^o_a_d6)pZOEi)(cP:5oSflpnO>nNSm:4oDql.d$V-`INIW:FOi]a*E$:SmSJfHe)i?5[d;r_/
%UYbl&hRKlr\],'<NI,CKdr7%u(e&!%Et=lR:(Z?'<K?Uh?+7nhAJf@<1INCK5)_F<g8Ab!L@H%A[#E$R(rdLU."r600]'<B>LHf7
%2Zt6S_P)3Qes'Y;;7o>[?(^4T]OAPh?,Ye<Dqt/ISo,Xi)hKO)P@M7FY8lQ")9*TtYg<2+hY8?;X5P%:$ipTe_srHmFS>SlhG>n:
%D0(Xplp&PNJe#j@G>R6rWgDb*f.Z`(7D/l_(8GZ0%-.k(%Kt('6/LOc6[(9JGag2=[-M,4iGM)1kGO*pD6!ME2hQ?b/7!B9hN3aH
%p(=r3:*\p%Dfk09S!c(FTd7-Nc-Pm66Vo`j35XDa);:;g]TIZeaQF&K)uQl2%SR)rL.s]#O>l3Dj";@??Dm&I]A\Kg4N#D-h%2gP
%W=7VmcRFhAmBX@?.B(\&'f;<)l\M#`34TuHLSpA;0=`$[/[<h?\gSo0)o*G82k0s#<%6lUGFL?N&'%M-i7"H+>__XcbMkAt_khND
%W6A)mkgt>qW9]j,]C?MZ#5<,!h'-a,&Eto,G*`c<cuN_WSRkd3:ua=C.;Vdl(XqC"G)2u&<$]Ur!Or9THlo[6K'BgbL?un[\?1N2
%].niR^0P8.#31OkNpObEi9^XefaT+s;H+aD)dM-r.65Ie4MHB."-2`&+u.$@(YOd\7W;iqB6M0A$joJab\jL-HK*E^mD`P)mA-J:
%%T-jXF?-]I%re2iiIc=60cGiA:"9B;SY4uhD@E5JC3lT0\>bd3WFF4l]HIXPJ"54%dhgh2ihL\GD78q7:@6&W.\hp-Ms/hlOrrJ=
%aq)2IP(C69rOABP%06g2DnFY>#c/JA)7CIdnAl'ZG%1fk;U!>O7Md/CPKOrSb"pl6DDsVZ:u;#Xh.TjJ()G3_L(K%k758[=L/7l&
%QeY;fEK^tZG@P+S5VFF-6NFfM_aj.7gMLnR"XeLm_h#)*)1"o!3VP/:RpQ,nZ!0`_#pu))!hA&*Fq3\O]B!kbIa7!aK"H#X3ZTCQ
%gl3J!/9o"e(sEcY<9b7Kkn[Q[gPtZtcj)55Rr8(hk[@ZWG_?5hG%Ue<^;+saqmkO]5>mS-"*[,?dERamgeHTKlq"3jM\A'?k]p[%
%e"@F6rGcd8Fd6X!G2e%a7HZiQ`pKX`(0Pgkh<:@`3UF\4.4HasjuBghPsr:8c4+*II.7KG&)7Tu"?i=!Y<N*3M&qIADE$SC7(1b7
%EkB`*9^h+Oghu=pkRhsIh4i'\;"eqAn^n]H%-$&[]F^7oCLZ(:<;l>b"!=ukK2GY0ghn#SW%PRV^")&G-pTHor(M_FmY7Q/HFf2j
%]1'Yli8oi$)[,RQo(7=fD@BS9A<Q(K)g"_9#BrN@h0/5hG=/TH0VAX364)uc$4#?\6ZCGt$grb9dTaaO\/X!iWUka^]4"9n,8+9u
%2_KsH&M9%1#06nh;,60Vq8_+G>]Mb_*9dMZ$O)\/4[@#sh3u3A.=&2S&1TB[(X>/T5bUUTg8ugl<d*(Ad+EZ*KC%1!B]@Dr`k(^C
%]/=b1]#3h<A=^NKlf]:?CY2W?^ROLj._?R`LDi3:-gnd]SH'b5gC7_uDM-43%YG_i=S)lgQdr4=m.?&HNPafu:cJFB_fRtk'[j+!
%CaUfiF9@@e;F>n$2Zh/?B+rlm_8VE-,U[\$!55;W$g<?.ke\eOF@5><#))TY%=rYM+.c^"\#44,2c+JW?',Q@%EoUq"SK(2OiFJ!
%ruLrK0EAeBN6JD^N*kfQF$h&[9?uXR!/6tA^kDi/.!'F<9BF_.GN0dJOTJqqf*j[()ZjuJTo[<t0qH9LEeBDfC#g8UXn,EV+`[[j
%%WUMKaK=t?PW=dD+K]nJ_2%'j:kg^FXTIu3h?V85ga%E]eU/ocNEZSq`=79'H>sm6@lQ#[+,ClFVW&VGN5H*_nC.i]0\fL:Gb:al
%_MpL-S#-SPf(`*UcJXEciJAd$JfD$"6B`(mTrLs.Du_g"TORBODf\1:KAX[IQ&>"X\%V%9n87=qB?oAbq'$RZD*-1^8)=GL,sCG8
%^tUo^/Af5;)uQR,+*QDcfTpk3RRo)"#J(B!&QRYJgd\q)56-Bm7H);*)0+Eh>?uWlD1aXY3H,ptFl3TMkA:<&*2a5fDVGkm_i`EV
%_=#>)F9^KC^AD$eDC@kh"!<;*6]D?'%-G4mEOJTeTAl5TYXok#KcUQ:rVPs\65Qs;_:/\K:-IA_Uj=`LBOPn.[X6%NCr\lr(WU>Z
%Lb:Dm2ndfDig@=D_ed4Q94ncqfesQLDW$ar0T<5Op`S=eOGIRi+PW8<XCMgo7Ke=ZOkB*T),N;tll<<j$j;4Qb3>ac,/:;:#MI*t
%`Np]rZAmZBf*aTL)ac#(fF-BPMaD\<W,iu$7!dl>Kl"NUS<An5ofF>Ok^GpgQk-K^_71)06aisu;V#-L2S'jl]cUS%2Yt=1B+p&:
%6Sl&m0ZZ0!0X8Oj(u%jlo].<2CqBm,B5H%jDR0-b>VE>"Fqm)tD%+5nW/c4(j3"R_4j)D8%V$GE-mk6'[de_saqZ"-)bN_HfQ"hf
%F@1r)ieVHu#jIX7+(F!TJ"9j[csP2kkD3u4oe>SJR>]_k">dtS?LWm]I2oL$+h5G78(^:9#2840YUq'uS5BM>)Zb*hUY,)K[\3rT
%NDQ.LNS=j*&Re/]L1[;1[s`pH33.i(1lg4C6YdBWcd&;ToF`N9?Q8^Zn]Ls[A,m?L@d@67$q\son^4blItZ7?j0d9aKUXeX?5l8]
%I_%EH<U#^W/JZaO'BL4;NUN\;&UX'%e0QTkXO-Q_Jj=aD%U[sI3!\7AfS7jCkc!KgD*t3:["HuMdmXngBY/A'\EJ^NQ/YI?Rm:u$
%MPIS%FqW4.eqQGSR[gF\o2FKcX0(tjjJ?UDBgf.VBC6P+_hL0M)i02-c2*OU3kJnG+_p=(5=3YGg&PYN+-;8U%6">+ltA@21ZR$s
%J[nXNeUV[0*?&7Q2B^D/=2AV)R`rG]%&T!q27c]QU9lf@:*2sRL3,NpD2kaHqC((=6=F\Ige<:R'cFghO,H=Z'S56i>_Y.QU-Rlc
%7qfed+Z`mg6!N;pp3ZjWAB^H`)^;G-!dt*G1<4#X3o(J2a(N:j07#7<dBd7k59Bgdn8*esL%)@R@=&Vb=ZAG]Dg,^e7)]\Hc:T0:
%)pTg0ap"PPWtZJjOkF,Ci@.tQ0cNID#r$N&+8/j2CQ:cc@4)gZ^NabO.Q`.>d'?YprNbT@`,5?Jg!5:ES<T!;#?nhMPRUi(E08Vi
%abE./>GrAc>NIfEF%S>10V`htGp1ijVc.P*2V8#(`4'<Al@9l%KY3+WQtao#_?nmL46[0ANI+T(FpcP+a9InO06$'$Crd[kE/qtn
%/Qi9%:cri9PFHh;NbtfoqF/ED2DqoTfZV9h:"$P0Q_Ug:LP_$":<#b6VT],NGPAG"qi!KNgLL['%Mfubq!2092D23V7Y>3Uq&5&V
%`J0@dk^)keYmm8]L;BP8-Kgn>-FV#Zmp77t/Fh*YigR1\^ekPgT/N-51:q,?7:Ka\qE-_M>=:A(gF^K'9ni+FHq\>^2Na0<RFoU<
%6I#jL@Z/Of2EiIr-Ue6YL(MMHi_XGgA-W,5:i$8o@,#ZL2QhN[%.$B#Qq%:4U@^aV;-cSDK0un`d2AiDNl?INBtAc2?];r.Ps\sR
%!kVEJdmQTX_o)c+!8bK7Ok?=8Ll@J`mZ)l&+^DM95\p^ffXW6f@Dd/r9'4$"j3_;tX[O/:acP)DED?CtMV?+f7NdGEa%^hI5]@q"
%RFAB'.sPA?2HgiQiR4sXUk?nq*/9I@<.<'B-!I'BQ/]Ut$l^uM.kV2KQ#hZ8XQb4t/lcp-2MP%KW6S2H8F4-O(P[o>=QiJs%#0`f
%fCA!$#/bUNHn]A]P&b"k$lapM?I.QFYX/:ek[>Jb$laf_c-IAa%3_t+/`a^O;.XBrCX4/3;!=!Ea][8H\=cnR;\V.0^kVHcYVC&E
%!#Z,JFKV"i-u;$FJg/m+_T#E+?)BmgB+T[CLnV%M*9%PM*srt;;9lkP<es;-[lYjO#bejKHmig<U[^5ncGC@e9V>(g.aqXQ5V]&u
%'K-l\P+oK8CbUV._&&-KVT[2.0pri3NK+k:ST#9$>#t:L%gKp@(nJO@>E=sip+ju^1(8ns0KR+I'K"O\&gsjX@+`!P"at:tL5c3h
%6XOX$E]fU"\\0D-=?^;U^ei[f@te7<`DP8!LK9iSKoKnAFJ!Ld2QjAqDE6YoFF)W``b)8;#!5iG`.R<6Z<8"N)f/:'MgQddoO_#+
%0I("Y:.brrNktuR"SJto:tV!OAP+Q^)ttu5!Qe0j(kO-_HmigB+&nS4'K1Z%+miCl([J$$p\I_=k`b1?F;']NM9JTO-u?7W.I5fJ
%_PR^+K']59Ylp;!_,/eB(Lm^_0+&YMfh3b$)uXD+Et!b^+m<G,Ts,]-U)"UR)ro<a@45qc>\$68(PRj'&OkMpegTl?1t\@p\D$$I
%ph8<O@"uRR=&=Y]Vd,u)MJb'9iip8IU^f^=U;ZFSNl1RDG]DAR0ZRUs8P$<'0H<">^4%!/aI";rCE1\&E(:!8@H0Bq])ot-nVNqd
%;]VhKJ9=OBZR?%tQQk[.0J<[#DSp*=_Ut;,>Nb#dClEunZO_^`pK5<r_An5'I3n7F$L2g8^R)cS$$S\fLenh*)4H,\EUa?d)'"<h
%A!-4<n6T+j:t:5_YTZ9LKj@Hj7Sam'8phn#oJ7YtJYTG(K[+NNKoH+T(PETYNNI`skT#;99CVSbCPK\1G60q^l9eu)6;1fEBR8SA
%(5I$UJI](c,^.8[O2AoM-PF/p"3#l1&`9+4NU@Uq!oCu7L1')P4"P1V_8bIcC^e/IPs,sAVMI<i3"$[r0R-/MB47R-7aV$/fVegD
%lqS,SCh#"@#DJ/<()1rN7:EgE*/0C$T;e52$6/<UOL77d2?_Jma&1J#6FV,X'K3tI/R(CQ2?mZTE>1=-)]GHo_T"a#oNE%!Ys7$u
%.583>9]p2NMAZYRN@R=.;ls=B2S-moj>eo14PPhL-TU3*1_(f.qI/#iG);eePOB@IHrMK/8&BF:)=.`L4^tmcA#F]e"oJRO")D4>
%6[fNRN:e`V*"4_^2r5\=:p;g#adaH)XYI;C_naij8(p7:)iSjs-X[n;l0(sFfti-(Ir4[-kegaHkiMD"7[_4*qq>H@C&I=53&cUS
%[M\l[qhlqDoJLH(6#X8oI*Fsq%f%#$SY<:J0PQ@a%JFeF+cqjF)>4tLSclrb?K2ri.JGR#-$EV96!cp/aY(W1KFgu.RH*,BcQPq$
%llQSIL.b;2<4J,^PM=GjhDH;#5\;[i?#p"2K=dHF"lVZ!2/N$hQNLl+j,RbK69+6Kpf)[3CK]b&-c934r!$e/\]0md_<?MV_oarE
%(h8M?3;7sTC3.D&ba9bA`&.\W8hVPsbC$?7-X=Q((uFHC"'ib6+&d4Mf!)/?XTI(=i/eE)?g`PN.ji05F1*qe%8GME>AJU:WfLs*
%.n5DOCCRmd&?3^Teo:3_k0cc-esJna5cs!*,ZJi^2'e-059J;l[T]%,%SoYDE;30`?(a&k+N+cRj&s8GLY1cMc5O.Ei-`X\f!#pM
%lDY;+NCK@%ces<WXTS-OF0+=.?:*_j=G,#B!YJn$7O/C?cEN&Dn=CR@_\sLSc4LRL7'*W+Ln%i^qZA-fOg#4tL@S5U2WIm!-5r0G
%mEtldgI"ZWLNY7iG%/aJ=5uaSKe=n7g+.'K0PCk2>n*KPZBLKQ*Dc_@=)4<tki5_(eMo=l4jYNu:NA7+[EM2G5&)tA3Q3G06`Yd3
%N;Q)hXB$3:aG6idAdqipN**3&$lB4M6NFWTr4HbM`=r"d<t-8ko_NQ227uY*nC<[`HDnl?Z`6<f6SpAb<T>i\5H#Kd9[M\;3RrWd
%_El3seM>l'jJPu#cK1#o;@P!N.+=D8Wf\<W]?%XDC5;Au&_.FXVa\$>#Q_H+`CHkmq3:q":^oZSPQdRQmI8eWG\T397h8q36V%at
%-S,V&Q8CLEI;EYTD]@bNC026P=YtGmUIM5]4t\^o(#tOp\^V1@=!1<j[D_N+ohh]F*^E!o%[:/UrJND0<Kpkh888m9Uk_JM'*k[*
%F!*@4Dd9R>nYfGIlR++Kq+;3qF?uACW52\lNccG'g;Ls41$$-K'm:,#_kP`HOk;i324705KA%/a2*ti[2@!*c4gTSI[=L4Q$\^$h
%mN,=p%Y`V%oQ!0L)ON(#<sE;6)pAfQ"D[@en)I3M4^/DF>3?\s0`&/pO5'Kpdi(ADikhVHVFlV,NCscMd*oMO_Tul3i+>oR_juP]
%+gRki/pA4/_]aqiA#H#A1CJpI)O-'-)KMP#1/k>8F'@R,!_6#G8Ue\5G)4Udi_Q=^:Jm_cHUq`Bb-R4)g5B6VmDVf+mHU3"XeN!b
%FCEW"Sf^e)51h^JfV6PAC`;*8FAFKD:#gt-JVQ5^ZZ*f4O,,/0+GAU?aD',l(%u!Q'S'ko4B2o/>%)2n%W%T?i>gFU.PY2>%lFgq
%#`@YQUhP@5cs*@bBNjN\@""PZ5_bpQ__KWU!hkOUN%thC3fDsc8#jLti/BB"$bs3HM^,*-\WgGtjDNdNq,q4iVh_CX-rCjA)D8,R
%bDQj:g(5.EL]o!==-[%#Zmen.KV'h*Tm0=cZ_^BF2%)oI"(i@qcM5K/VT<Y@jBu[]N^eGL//nG:CP"aOZsg1sZoM1@?meA_=u;m8
%OKIGn9'Zn6iIkt4r2ISuFom%^BccONV.&m8mh4`PB\8]2QF)]#%3(2(LPUX&,,<.UR^DtB$^9_H%SI^;fV[W%UifFFnWBVULUG"p
%dP+P_.bi@j3RSJSDd`3NZM_.U:6F-'-7Y%7elB/Kl=3?eiJV$Z9G,\W^Vta;UgY6'J7OEYD5cf'&k>K&J?69aBloZ!C*,^pi4(>X
%O#GXeE1A#0pWmVi+$LU1Qup`GdA(,c.B[qOGVnb1`Ob]HUE)N97n4g&&sqVq3SIlJC-OZr:2A6MAp*8Z+hd0,A"u?D8BbB.;PPsG
%P$M`X5%dCr1E'ZVLhH<&UJ:3*R3:IMc](b3#)pP(Lm$K4MZt@DqTq2S)YOrn""K6FNO::ZIB[C;+`B@j)LUQ:O>8%L6\\Q7p4K)"
%,2D-F6`0?d0?6JM1>RWMa$df^`5@4t&oI375TCF(9upm6)gm($,GGXY4QbRp\TI?4TjdOF78Pd(1sjsL1*,YdXtY*qNt)W2'9E[G
%6X_k.oUqmt>J4qJOeH1i$ZW<X$k;)+VTH?p]"i4toO=M&A^"OPkp_ut?iVkjKn`#SjCe=Vd$dSQoJoTYYd9HRb+[0WJ<(')L,(<e
%`n4,uP8MMRd5a>.U!Rbn!PLU`R5Jrf9+sa\$E]\;)lk%f%=Bdn<@4lhJ__Sc/eK!1.Z(]Ah6gXpb!:r-JC%]:WU-?G*-VsE$DS+:
%%8^;_b]4UY:n6`L!=T17F"k-0#-G-^?4I>]XZTm2=jVtiQ/t1D1obPik`VULAaGMOd<=+54qKR'fnc]fFfqqn@L`S\!g(q"UHepZ
%$SQV`'PKn?R'I*NmamD\^KgLO.KoV&ChJo[Rf#Ca-U4FH7@"PjW"AH?gh`LDN-7d!,7t]_Y[>IU4MUg[s,L=YRjcW*Z^3bA8rY+h
%YQ%gL5"!%cYE'0SRme8\qht*g:[=^.J(JHFnmd>`Y[,BF\on;d7;A]:ouAMG/%&j@VKF>A<qdM<pIG#-rMsMiNse?]TCk$q2prdK
%XiFn9mE/)44!7kIWmbW,#<_"g8/LI89!MS1:`:*f=G7&ZP^`od`kP$U#_*"+_I(226@A5N?>Gh.-h6Ms</L_!!g/4;QtH?J/p%cO
%?DC'^QtQup5+XNp:j-,$.c!jM_YIZE"=qWnai&)#SaY+q7`#)8G3Dk3<f<1::^Y]cB"O=G@?AS%'W6TREg<(6Up5?QLK-<IXfi,`
%[QD0+O;X!I*1Fg)$L66^a]fcIe$e.[UmD:JT7-6b<B07/Ou7RYP=!mt,>\X;7Lgh_#%_';/E:(F8NZ[3d.$,noBIDib@I*UG/<$L
%>HMqB&7D5J"I\HlUFm92NBo_U?Ogdp"W:FkSmjN\G2):?gB#IV7NM&E8N,n:AuF&d2I(]0/l5^H3WlE3]+eG@QuXERS;A[R8jsR5
%;biaJErR)U>cDQPrNLJ#XE5f/gr,TWYKP.'!2n53g2[4)kerdVfQ%X0DIUd`Cq9$.'N+[/[ToKbN/9,&Oa_g<(T\1CDpK`r5O;R^
%C_`FhrosZuEO9rRe;m)e&"*+oW0j,n0kLA^@9Z5'(cgI:_^\a%ef-GErJ+G!0XZEOX4QT8X@?Z<kselq%aa$h5pToZ[&pWCOK#3=
%`47>Ln/-H8eLZtHG5%3J0ZIW$"Nr]hUV$f20^RpP1i(A0g7RKCG)L:1q5Y:L2ostfX3Ut%3md-!93/mS(9CmInjT1,K`@tfSX*P@
%km\Oij65G9K`F8rPe'r&g?F*rRLQk@Ufd(-)-R&nQS7$.FLp&4b3(rDV?R:1,KW/Wf?rIV.cp+BR_rm5;N/1a0*Z3Ni+DpAFc=d]
%V9qF7k2BM>IG)]ITmFfPL9X^(!`(p'5D=R8_sot)-8=.ZD;8s!n#^VhRKNmM/Q;u>3o7l,80b3o<J(_Tl4D!_OEMK%`:9*Y)=;U/
%K9SYCp,qne(<O<G_iO_cBXKAHEo$-fBpc/o)f(`,WDsgL+\jB)nMGj4j6?N&+;ndD*nfos)esCE[@Q4Xm:WlJDp?73Qd93/c\KIO
%J'oqk2*b;6h&dK4IuXFST4G929=/R5mf3`<PB.[-iS9/)%<,:VD&"S7+>q"\%bK;0.D)mCQ'rFuaaC0@ZN(Fj2J]Ta3nZ1C#Pm-H
%c"=RfDUt70!@FcX1dc_X(n1f7&J\V:l,[+kP<KZ=p#!"qI_^Eb5R5>!>\<("XLF/7p`@:$NScV/a*8Ee%m1[NW+V+d=T?dHqt!+\
%iGfH?64ht%9[ED;fLGk4SF%EOc8R?hc^4eA#42li9"1J6'8Clei?ui0JO[ZCmi':QkZ21L]*'S,a=h\+#?X8bQE<WoY%@!h>mTS2
%H2ksiaqkSm\G#ml]mjS6ZV@IJC"9;:?+1d/,HE\f;bl-maTYd])[f;/#k<C3mllWCO'`\?56fNoGf5`1La,.7#4SUOcQ)V90oEl5
%ECi+uI.Whg(iB'aW%CJeF9FU>3L7==!;?'[N;<O.q<=9;;S^OJV+Rj*Cr]:fGRYR!89p*R]_iTSn7C;LiX`)ONFjD#HWb;$<UZ+d
%@UI5>ObZr<!+W:g%&2'+LKB46V.!R/G0Uo*>2cCtA-91dlHiN&5q9:o3=Ij#"`XmuGf)"'gICK^_!!3_/)A>iJ]<]`FbFms;S-'B
%,/#_bYf^D)rj;Y3d+O6/d'_R.'au"%BL4:9EJd%!@l2b5/ISUVW<\ke<dn*[IK5`e@SCs>N.ca_pdmPEJeVg%g_Z0F.&5jq%Fh^R
%IB<J4SLB2a[1hX,?Ps[`0K40%;1`o)ELD-mHnS(leT+@WUATgM-d]pOrOjV5T<oC\87<il;'pWerYr2gA1u)]ffEJV5l$gp;$'>-
%Oe6B<dU&.\Kc(\dHJJ7h"DWil+!!Rg01t1Nm6q=ZQuO#:^N,TO*;@qcC<LNdNFB9WGf0+SmI6RO`:sp'`hsu/CG(@0K-/&cN:/p+
%OJh[AM`jJg3.D,%pl,[GkGQ/$IlI%5W.O\hPaRA5qi4q1-?:\''hm]B7'98Fg/uG(FIRqWe?t.E2TfLRL/'dlC(mT?4fL>:egAPn
%7&itWg/!iGhA)`^+foUC>*T5hK)]paG,uGZ-c>0F_apC.UB":J)+KfujQeV%&5iUHi1kui&%%,<'6dOs)%d@VQ%.Pre!fs]dk<lo
%30XJ=mM6.+8Su)r*!du12g@ul;7&u]`o)b6IG;>:[ae(U3]ZYc4050),toX^RZC'!!`5=\$]luJ(Mj.pR/gM>+I#[J^A`-cb&GK8
%'%\EQ,c]q/&0h.VPL&=ilf<iJml;.=4:C43`0X>"NIKGIL&V<DG<#J@"'m`I2OjJo($C'd)uh<Fa/BOJDm(4Ar0d,,<W3@AO+q`8
%UKMLm42c5(km`eSs.MOoVBAG#dZ((;#iP'M%e?!4)Zq8n:$i?cL*38*3lF<+U`BZAMttMgN-78kg5b8FK01clC.r6[^l&-4c](u;
%dOj)<DNLiHD!/ms"CM'=PN4\U7!u=X-R\j>-iGCX^V=XapD5(M-L8FA.X!3*^Q\?JankIE/CrlKO3.7e&59m]qX:Acs.]2m/&7=P
%*`/&jXSImT.qljA>E^r%adV[/c1fs+:!g&.%>[@F`?&&-qoc.mRX]clZs)Rfga*OV"TWHF-sciT6dlPIBEsf#WRnD=bm)R,)F6d/
%]-i?12$=KP]lo6GZ9`i65Pg2Z^/:M:=[2^JP>^<OrU^b4'+`c@GfTq\>SB'L`(`.0P>0hC5M/^(lS"2;U:ml3d^JP_3meT-FY\/@
%?CL20<15\V]ABuSlcllg(q?_3nXg6m\J)cJC"LG8JGplkgn>0*,=%Zu^FSt`GL6#E5,$#,%bXR?Wh;e-#[5\RpSOabTlJ0'\$>;n
%6l>l5ccX3%0[e7%:<P7$otC=Y:(E5#Y@AkSs1:_DU-Kd5pQ#`bJ-"dIT%e1n/DiZIEP+sb0,)CL`:5U&]M':u'?A;7nabd8"`>+@
%G[XnqoY4'>0-b:a:)kqEEP)]U:\m*KHq),,P[t'F=F6.DA]'SA8)gG;W;U_CM;R_V)Q%$`DqIGh5es>9-A$ad-Er?S.)W"$-@X[n
%(Vr&]NW-Tc@n@?A9)$i8%.q#)-H?]6BVRaO:.S'R0ff49&lWa02=g@u2_Et0gc4Xa2^'mR/-=9Zg3#_hRa@CUeP5(N:YE$RD#QH*
%Uum.1;Y7:jjTf1/9hsf2N(Peta4UQ"'Nki`;^k0S<n@[VL-_!O=,)3cqX>>Il.%>M3d)</6ea3t'ZoAnk"i4?s,/eN5AArGBafr(
%bP]@kOR[%LM1mht(7HWZZX<IRZ5mcEO:uV91S1NJ.F+QN@\@RO/DdT<'+rapKaFJH%8iAt<eqkjm1=DDf8hY;/Pl9]@qZ0^'0jJR
%fed4-a"Vsm+!X;o-@Uo9[<0H+bYS-R'0jL8[EQRM1%Ab4M&ugN[&t-W"4+nLq[)t!WGNB]<pdD"$*ldb55/X-36;]-8;1E`RqG:U
%Kl"6H/IZ['q$^#SQ`JU;SN?J`*a/pTE;tk+Zq#oVT_@HKNh'n=D`t^0#\((3`?/.6K(+()^%r$I+b'X[Ibr/@h"rFOB4jQ$J;/fg
%nMl?[QuIdD.bP)HL4j5jgM"1C+:;+iGbt1t[%s=N(^d'rPhOB.&<W"#L/jBY#YY$eXJFf8J%gOEqH],R>d'^ee]>B_Skd*e>3Mnh
%W>"L;Ve,B=>T9Q@p3VS--B?LsQLW;Tn.hl]A$Y&D85Vj(]2t(<N;dEBGD^hfFK0_oT^]i7'Y7YNA`L4hn=r/:crrZV(GG\kB7,6#
%<<%e.I[KurR+lYt7a]/CRoj_FCMmV+NCn1;f%_Yg@B?Q@!(th\RemEBg^i0]2R2Gbadrlj_&-*l/jRN*k1g4QU5:lh1$9nGgh<-t
%lH_6K!Yo?AbdiQ)!t;bKKc#6%m]+qk^9k!bP'(6[r<.K8Vqim95`)'4)2<(M"[#%7-J-%m4]c+0a..)p`fM]*`5;HmiUpsd)8gG`
%f8."1Y?YGXf;q;]4[apk/ZV_4rj<N_?.eE@<=@f_B(:W+mfM>s5;qOM@!Tb'(hKB#NTDPqg(6Jgf(gE^EfNjUNK$p'+O2b<ZXhg8
%hj5/SNi$X/$D[t&@LoN7rE0VP]Y2<;"HRpWjh6B6IpcC?$d`YT(=?[!J[_igZ0hC[(fol&m$Hu/g*Ne-#ORcTkS"'l5:T.\qe=)_
%?4)/AmLKPnBE8AsG)^kWkT9H9*L`pk",IWVmn180BKa_!3NVf0'Joq>cgOc(;AG^=%YLl9YPc\)TFa(n;uBa4F$Et!R:ldLXVlNP
%L>K2_%YA*EGfeG7DD`AV+EdS[,9q#!nB?@!S9Y(T6n+QQ7DD\KRcm/S4<mueL<!IHqW>K],<j.Cp*l'4#QM7`5ndo*DcChYKAq+p
%"!S2THNd58W^-i;FbjNk8/VX!:%4E6)=90f_YEoK+:ifOq)S=VKDTXYIpTM9Q#=-M#J+/LXQIQ,V0crW#+CX;a`2t;g8If-5plBK
%j>\(F0^=j3E&ffHoAV\\i5sb6qL.d]G&A9i&+\ee_,43YIZKR4TD&&^\JWL2nH0Xm5O2A?+&+$WOp*Y%$g9em1]+fQHlM3I1?Mu=
%\j_bi^blr:)(pXHp?tMDS<0pIM][Rn6lp=f7,c3_>!(g0c6liE`nI`!2;:WnNO@.L'0f,OqPf:3hgZhfQt'gr)&\P:)W&P&1*Sr6
%P4AF^9LC8Saa`P;lnCs0(dfXaU"B4`Xu6KB,sQ:"*@rL%/*24!^%k/LP`.o_N4_[mK3T!NQMRttT`U`2*4Jd%p'UIgRTQ8e?'jo$
%VU?N[s'sP^\812Y[-h%@-`'W>2`MTJ18t)t(OO6O,h$NCcGrhAr1m('eO)[eVg#J<8N.T32\U\T0M;gsEsS3oE9'%2[Mk]7OIHqR
%Yg7epWu61/mFu8>-B=-qoJkPu_ptP1Y)eWI#Ih@bCUK"Qo2#8LA;fR<fjacHEq%=HOCmO"U@=Cb'V3F/0MI1nVrMCLPb`niTa2$%
%fIrMEpQpC.hf0$R1[&bT[3#-jJiB*Z%)n.L]H'VOH_#3@aD+g1Fusfo/s8>Goj`gWR^?h;apXa@=k$]_=^*2%H\M"q5Hc\oU+A[-
%&H;%oL8#-u+-^/0%N!gL+\;usJq3m;^Co?Uo]ri%dbj'ODAIc\*ASTF)U1Jcp^P7(6G1]^KL?8KlsnI8E5Z?=oiB=\iWu4kpqo$N
%_8"S;K^]FHf71WGIIcWfK`+K"'fl]X4U@b@^W;K!2!T4GUl:eTU%c*AEV8F+^[d0Y[$1/p-VhV?+)Z7&EF.ofMXD3c$ct.q3(0NP
%fKatWXg0o:+$Z(Y>(u5XO!Ul&V;Q]th5o>&5:#3Sg.@c&?Km[EUi=TH\Qrm3*ab^CNY,D36f4nIJQ=ARB8G((JgW-_b`eCBC-T,[
%h%.\oCc70a8p=*o5(=DAqaEYs?@GG\/Nr?:$Ps6`>/ei;R8<0mA'sOhme44R&eJ(8:^$e*+^#E,W3.NoQ747T<#5`0+k6@$?.H&Q
%-Z<+VUf7XUb!QOQ*BX4Th)Hi!^JW1h^7p:Z/.73,KnQCt)6t^.#?;Qt83!WKJn^>H)ks>M&B?I>;)J:B!<+:Pnp(rrC3HBI+4Ut#
%n.3O%VfZehT,*&APQ&$skWrfE'l/"=g`jo$_`s9ici?pK'dRHs9fGX"is.l5aNP5R"]83C)<9Uh=)kHP`n?!g31d\@lUg<iWnCpm
%dUJa/KBIU?m[QDsl*bRPmU6]Ci;.Aj3WBWiqS1Lr8%#^CKrd`:F3rXHYeQ;li1E,V^+"_YaFB%@_0K9CFibc2U8fW`.QjR8\h6<9
%Os%m[N((_]O!Q"X&kNB.-K)(kQtXX2##C&T5__+E:h<eMO_m)XYuDu7+fW97"T3C?&S,0D9TTUE.\I4.+.uGf.7iq,cVmdc?gouT
%Ip%Z,$+D9AmJT12jH)3sDbt[*rqAR:`r:`3&CGLfa6[1+I'X#KrI8/0[kDjM)d*)<bsJUO2nCH=958/6BpAq=n:e&099'."be+I8
%*c*ZqaH"sGhb*#I]k*:J1]-gDFZTE,0\>MNrF*)qlX-*X,Vo;eV5r4i9um9Vm&MUCBtulo?_8toEClF-mHu^[8V$*s7UI$i_@d7<
%CMsB5=)/SOp6S<9bR'@,.m(_"?4iej!+qjT[<2Z(2?Jks+K[`t`rEbL=Sj>Q=FdoVdE/)PKjL\3XH.o,qlO.GX^cq9$Zd^.1r4P(
%Iq.8E^Y\_^hp0Qo)TnW!T-M^ta$>f3C6cZ^&`]<Fm.YSUWdRe)?oQeL-9QM+O%7k)?#PdLE%e^CI`];Vf9`CRkhAV'4HUa\p#W/$
%beRR1;C%D%h$0/mhs:uPim9<#:YM)#YLiD#1[cD()>sR>,@/;_J3/6;'F6ItNC5tqG1S2Vc0?*U`r(lR1L4PZO[+??'AG0g&iJDr
%6=7Ct,VH=V`V2bTjLAWS^=6qP%^!`Dc[)i`Vp/8G`VX<Jf[T`D.^gg((.hq#Kk@I3Jn0l(ULb0umb@!1X';-0s%r'hRbdsf<it@Y
%;W<%sGd#j1SQhYfh6-ZmpIE8%nbNMk)oPuup:?raG1.n$-a">%=Y76+l;[&^RX:.4'cmp_$_+b3<ZCfR,b[hm7!Dt=8r@/(,$XGP
%^1k!5+hV20,`r=JVdk)l\a>d8?Ui;P/Lh6ha!Y%jQ.<^-M;H1bN9`(BQ]^)*%;;G-Vb&Ap-98<X0uJpFabK.-b^4'PCA_L_Z>T&f
%^-kcOG/nM#@>Ams^Up1]Z-p&NQ!1$]f8&DG*&Ji-^ejjQ41/\WWh%nH?EN72$3/JbB$:)<_VL>[XRteOF.3lBa'A/[f_oKbASSG5
%f-%a;oA'k$4@c.2]FCn6aR5:`/s"i<o,^*L"Q(FO]l&c#q_'!g%HjE`]+&jN=>8STIJaDP-iNN%+L.*FM9]1PK+e>)j@d\`ZD-uU
%-,Z=k(Ri=(#.+pk3H[apF03lp6XA-Y+%4XA;6<<s&gH>QippSF<2)_/]-k$*hokY,2;U*T,ho,8aKL4a?f,+Z[;3BTQTT`L/6FcC
%^^`j/G\2//PG6h!]p(1Qp\,Y0YjgpAi<g%;\d`3MXCjif%NX8QfX25Z`(0LO_'SNp#I3qu[b#8VY1O'>MGWNt&%gY4=1iDD@FBj5
%V*tSN\0h2L#5ek.0:ooG$4#H5D=!RN5=cS6@Y,"H$gB(3^8Ak>GE_45SJP>?X-e=[p26/Em<sa8)f[41p/:p4IMBKe8YbP402uXn
%]s+Vh!<n/k,*Uep_SP-e@7Gp1*f#dD&YP^dQsp\3.EPcXgt,0eih!C"P4`r5@8O>$3u5L=NcCut>.p^`S`k!+?egkEL(,>,e#1l;
%e/$"%Wk)l4!UGY5rjouEnHRJ[N>/V>=Gm'"p/U#5h0[\[6WRQ`q.RLjX]mL!r%j!Nd_50T0D0':&$nO-</OS;LMI"pj4CDV[IZ#b
%pd'*$anIhS)21'5n1s!.p[5;9\"`86q8\oqUSogf(%n>XKk>teES!#*I$A8&,*fB>6m\Dio=)TtAbl5eJ=+S^U%q]I:;?B"/k3+t
%Vtp&*kchSu04o%/Jdp)@1`F)*q<fj%@_3:"V@@88i`FN"]gfi?iqGTr7Ufi#_u%^!3Q&@-UZ'iHT1#F^%A,IpTcU>J>0K=rHm]N[
%9.)UEe?k#G'aN4uH*#P6Q7=chP@br"a?[3bn$K$;.FFQh;#dTm8O[r72S3P4mBij*a3BBbD:WG[ar%>%qS<P#h-.0Vdm=Z.]].sn
%+ZbPEkp`7CD&&bECQ78_BGJ9UQ+!n9o:qa!6fI@&!0Po\\SNP?gdfeT7.`MnF`UqITDS=ld7e"Ll9n'teqhTl/8!KOc_'9[7W!M/
%s%,CgA=oN%+MEY+IDo%^Y>D5n%"n8(mKLr6-,ob*'`.-3E3-7DN$d+dm$b,@l]:dh=@"e9)13&'B&'-:WOt&OniHE``)2Y05.aV>
%`0ajknnCLm6YH?n#6i'F6?3lWD6MG.'ST>E`8(6k*"^ZJU%>e7m$#NX@^Ogk&/F$t@Od/#,r4qTS*dsrMuU\.W3LiG"47q"6pL-k
%/.u;@(PRFfOHJIsp1;0,^*m]nd&Ii[qF!Hn8;0Ore%SL"FXo>A%Pj]AUqpeH.mS6]Ln>C^'u7"1!K>TL[[I]k^_i&gCX9fk,VJ?O
%h+H9>6;^;pW7;Le%iTkg/G_c2r@1^=h>Br(`&K=m>q:o_B5/O.CO7siIed;h^uVV@kHbBbCZ]!L0YZ1FDn3T>m%%bjQkZ-^"GlH5
%n%OhKc,iK9W7:$#MmY46+-"cbQ^Wn073BJ6o^^:pPWrob%OnR,iU]p2Hj)(:cPjJ1D:gKW\EH,;"We*!r4hG_&<TXLNA"21M3+=j
%'_#Tm7j<-!<mbg>T@F^qZFcdkHZ]/rc%-Wf#!C<*O(:J[;>e/,FiUfsm[Q7t)=mRb^9Y3Q:TE2Q:/lq6YGQ*^\ZP:$Z.c!\Zo`FE
%O+VlRH4V:W=+A_^>YUnmqr6G&C8F?GlUEa>EkM%8&$(#kRGT4jc<J\&Di3g@k"[H,[VMda]4<uXIGT&1>2![p78OU`<hmakl(:#`
%ku3AqX,4=M;n/dqmOA1JW))R10;FR3GakT@ZIU,k&[<o;XdU:!X36"P"0+2X[8*'1[%:c6ng<%*<(!n=gY3Y'25`VcC!16NdYT">
%4&':RCCV]CAueS<Bn!N=C%K[XrQ4B@drj."P4_?BBITm0m315''\q5,L"AmYS(uaSe.emK,+^6O<OP]cmZof72Wr\ol]lmDmNdsO
%[<Lot[?j@-58.@+QqpbaBP0fHfM-/1CU&egXWqD(mI5T(.+[f$oLrFL11isDR21HNl8A7?,0\!V+/;K6NKmNleiAgma_PAOLZ(.P
%[GO]km%,6;2AA6BXDDbh;UO_+bI_s=(2q8%oi,OH9u#NKVHt>Wb&(Z8?>gm.85JH8Qaa?d?7)Mm>U<]lo2k!1WKOKXs"Lhuh(7fW
%B6X+?>V^UcpoWCtCCd\0C??\JeqqtE;_,2fbed,[6sbN=Q$Ig>l(pu_=*gSVX'Moo''4#:XP\oL)L7oI'u\#!fZ*X_'hsKp\s%Mh
%H#/X>F)S%kia+SV0j\MPfuS8fB&_Mop;h$nf7i<Q\tGWH,g4?ZqF5j5Sm+r0Y<4JYP4KKXUto8/]%io1Y87OH'g>W`e"sr;IC1K)
%>'de9o=S+Lgb1!hZeP)6p@<VbI[H[QK*!UDf([?CH&]7]q%/HC$M3rPc(jr3]md_!dIl$b8WL7fHfB'g9luOLV"Qm:Uuq;p>JH>T
%i`[Y=C6:t$O#@du.s@YaT@R]oD@U;hah<\uX7V:K_I9+ehOQR<V'hanb8Zee]/;$%rIF-M2.fFB[^;lFBU1aI8ipfR<Ga%^MctdV
%d*(FB+?iI@V,j^X\P.8D[LKFfi.jfr"f%12#l1G_"huU,AN&2=NN;[PNLsHI5L\,X)ekB*i+lbHCFd(BV7'_h=[H2Z)sbJpj%!o[
%-c[LGPD%(c6XhA8SLcn5=V)B-cQSUV@$hj-Un4g%;g)eXd;HAD69LT\>u$Yc&)Pa#2*[;OneYpX];_^1Gck<8`_U4S8+E)p6PkRE
%%l_tuU#KqcqK]^9e.V/]^>A]gF]1)2dIo22[$t[-PYDt!8kHVFipt[mqA!in8=@+;r?O"&-C!ip9W[&&?RT\[=52A"L0A;,U]m)c
%Q4m!aZ+i3q7JBhGY:A89O;)ubqXS6:+d8p_$"71H,Cali$;G2,b;Wqs\aEEZ\)6SdYKaf4oMdtlrTeVD_K$dJhP-9[IoZ0e9fo[8
%f31k6[I`-p?J&@Pg$SKj@%V>>4#ruli`*tW:Aeg5`'1XBH-X3e4c$!/??M/t!SXPCp8rcT5C#pBAWim<6P'e!`D!R>^HkHf5s+EY
%C>.g8S%.$4gq6AJk,(*71-o56nmS/dG,hl,H.U^R#THnpX^*gAkI3Z^JUCYcm^/k^VRa@B*;A"*qB"&WPEem36dZd^4-^SZpNGA5
%XkRW4FY]i?(SR$5/T:(7mdmp%g_6)&P@%r5QZfr9`HjZD]UrB0CbB73!i>]u/Y5%=^;MXFHWDJ1S6_?1Cb,tYH`'>:l':D9PaU"O
%Y"?P*b]KQT2TO^*"/TU,0g0_>In4,3k'[*>elqXa40s*e.%FB2oC>d9IW1KfOOn_&3fibEbNX'qahtTXkaOo)k#/&Nr1e1&36u-,
%(;j]7#SFi]Rg^l+htJYi!YD'jRs@,W09KskVjUl5'fJWPSm@I%IQb$M[Ah:CCHT3ACEtEqZQ^)9$rM&EK7huNAg=E1iicIQQ_anG
%T0%qT->NEE'\_lu*N6QS?!1'7QhaY[FSG!(bWfFPjgjkS>$@GA9StpR_\ddT,!B5e'^YbO[^`W)gigQCaD:\adARld?P=P*PP?DP
%eZstY)>q(&O#q8N6<Jgd(#OgXF>]4BQ_&)!Bo'%q&fTas8BQ3Z!b*1^$.7A?$iOeXSEt/S:TS%?aNc6s#r;UY+UQ,%AtYs,b`FET
%TH&We@qtFI0TH'8JkU[d<rC)j%?es3.hj(/LL7;/gMUlVaH/JeOc>_#1T(kk=Ja;Y2S>l+>B&oWp'odoI4[`ke(5H/+fI%QE@_Ar
%Q+odHZ!?]u9ZhYRNgg@G)LmBWIFRdND&/RSr8a*#^=E2)HJ4/1,=(.:aG3O$h#>aZF'32]f%26#.uk`Y,F`SM+nE`Fp"D?8a_RD]
%h!?Pj;_;ea1q*A98\37-YC1?ND;u*k:VZEWm?ZLP0eu]tr.?0!mUYk;&L4Z`ZI39f/hu1Tea:JsVk"$-*P)7#V3C]*8(%qVkD[gW
%F[g0\<bWMu)_dWARNX;Ti$[4]:0D`,10Pm]r)I>BTc%decV#nr7,^7Ap!"TKguUgH',/>7H-OY$c4d/mF[>V4/A8CCNQb<[[hN$_
%:;b9>bNiFt[mamk3eg.'kVo9LnXr7%h*@5D1+P#)N&T-0#0fG#RjU8UinZk@94,Fsbf&W.bW]2:rZWqhq*87r2"q/:*Eag?WIsRs
%`VZ+BP8ul+A1urqmTr&iI(6cGs0\/LRBnJ_F.=npjr&TbhHfP$IZdBpU1V<MY.CfSLm\V(RD5gE%7FPV>b&k-qu--9IXC>TUBKTA
%m_`B/i9C_mBU6,cg$2>q`,7B%n5)c>WVesFQkn)q9oI?b$<0$qB`Y3tqSe)8O=HfDZE'8>4/,WNhi^qVQ_g[nc`O$pV@n06f332V
%.MRm]in*^a9^;<9.9UrH<nC";fb^CZ/r?B-[[qX?]\%nm79m6WBt2jMK:<QsBU7Au1-Doia)S>KHAO1jdl3f=>L,]g4./m1QZ&%f
%Q*&:gemA?UnsLt-defdWf3/BHk&#n&?#0T5<d>Ur%#;4YZTdZraWR'_DMr[^G9!.@f"gcoblb^ti5r!%[1AFr8B']7o@'"ng:>U(
%`+i(@K!_9mor!-P?G,a5@9?;uo+sW`V+MQI4%*gr;UT#/9nsp]ZS3\m</<\TbZ+n-00Sq%YV_nB2gWfuXB@K,(YDiX=hQW`_Vot'
%lnh1(F&P;8Ne$!2D#EWZH^RGW(ASJYT5W!]HF9)('b1cF/_?0RG>:]<<G7k4q*)I"]X@A'`;A.RPVcnB+Ak:*-Aqh;aW8$0i0AR]
%<2IjDqh*o_&Cua3RK.EO0i[qMlPBSsn:S4Ml;obFlI\1S>LBe=m7Zc)^EKMqedlYqLl#7Eq\)2NB6T6:Uhr$E;X>TD@QRsBCbG?*
%)`h:3IfPnF?1.?hV9Le?@``C,/WrT+PC@8'q:PP_I+71UPLS=9HDu,b)UD\k2rkE`2'I#_P=]q@,EAknGBJF#Xd3[e#5&q_M43JB
%fUH'[@4_;GOIqSE6.4b6WOu\Q^Dt7bSA6h-JI\5R4KY_u;X1Bk]QNhMoKL@sh>g?_LRqqE3.*2cPsX5AC&>SCoXl#tXW>/WSN/3u
%9k>57k"R+,0[b8_<`6!MlS2_BoCcqPIXHl"mBGC5Uc+W#^"QFok*H_RP:`0QI-SeXOuV^J\"pU]46biQXlPnegti8V8t25t1Lb-$
%DjC"DDZ1rjG+J.M7HHHcn]a2kTj\_o=Llh&0lbNecCtXR`16938/pEgVsN!V+mKouoV"#L@8cA5G;SEq?b`Z_k/bcU4d1=-)@rfF
%/d2aEoLe_R(KY,:]6*#=[b.KH0lQ3tCm@OmF%Yo&*acp.LG9X,B&nC62\oliLtR]YT!(>Z<?@,4C%\MQBH*#`6g(Al<RPdqQ\a@9
%J!#"[0<b)a<SDc"PEpY(a5464[eg06="eIP>;&inpMttAO_+e\/N<8:aXf9n`P16Jr8F7.VVt4ZOQkdrU/i(&Usi:][B6j#S(N&1
%']0^e`P],-;0Cp#\MPuU7Th5Wo5F)mgdY1nGrqWig0-A*93G_uAkX.q[.77SXdu!4YgL,#k$;?2eW%hjoc4o4WMB660)#"QK1pKP
%Q-H(!Cb7GYC"qA7:@^Ai\a?>T)P:s?NCr.^[9#=P9dj(@pKd)L:5?r%,+N3[p9tRWh>9m4.EJS6USPLBB^5mZnP\X`qE`N\>1"Tm
%Ot'+B;H+Zie4OltqVL&Jilpa&FRkE5IeC/2=3G=7N832^2Y/agQR*q_^/$u-FpmNBHs`^3h/kicZp7s(G-igX`H/T#Ycl5dmlBVR
%18boR)i%B<o<7ljHHGSs-5h:U\moOe]RuX%8ksNaN&8:]24i+4Fn>OM<1XbG;TseJ0FH#3(>)NCOiC#=;;6ntQFkqT`\t8/YY::[
%22&LNd]aD8q<i\u\XC%]h7QhO"-o/9J%ektUA+GOlJ=6M:XVu+!7YIPQll(=5tVKcb1":\\2E)!ejLa1S6<KbmD]ZS`1lFsRg7!Q
%<3^>Dpf9LJhA1po5H2B,d[5pQk&X\u$s@61K8SRJj5t-WAFA&Iq5)68H2-1OaM_kR.J0>-FW0HFYTUH!S6Wa'*?8ms;B8Lnb=47$
%Z*]TqMk<f8<kVZZ'1$M9gW[UF'&%.p:$l)kfls0hG.L4ZkM[B`CG^1<2[,5E^6,e-dQ>.a`.[OlC%t.]'4+iSM4Jto&"+%J61QfL
%O5#C:?$U-mOW'm=:4M?J?a8:u,s53=l^<I?HJC(/+&?NIVaoFaCeGplk/r.0aba6@*L'5Z,+i,R$Prm)H?M=e-i`SR2BpPfO'`!o
%k'"P^Hr"4JjnFCE\f+Wc&f9ed:At9)MV)9C6>,Bq)hEt+aN`YpA.K@%@O_%[)WL[D&IduXGdDe'j>F&')m\,n*M`,Q!T<b?mr/F2
%g.P%@fq&#2fprA#FIHsj'=iIWGp$B82M:i4/p3luXi6;ud?F-UVt4e?/'Z;dieg44,A!0C)R13`=g$LkiKC>'C&8_'Z?gp6gJVX3
%A]hFPhtJtr<8K*j1(+=KVRND,bF[Nc_[j/"2W#u]K2U-p?4uo[j40ni`HGI(cL>r=)gonq]OC'jB.'VID!s]:5Ja;ce6]i:+nJg1
%:9n!N1=&Isk$Y=LA8MDg?-/l$iUk0-c4pf+Cp"Q%q;uSUMg2eCX,"(T]Jl+S0@+q+Co=1VFHZ%OCXUuQcTZlne3!j&?!1Tf.6WfJ
%gg,4NlM05@1J+>qI;R;;BBFLl4/)9Z`"XC"\]8g4..marLsp%KQ?[g@NMZ?+BAM):_EnIX;toLu;nQ_m;.E4BkOudjebcS`qLMt"
%plTU?1u.eH&UN>,r+tVSbaF0rkS;D?]rnS`\$OI@/9klbg/?"o*C&\5RHI)>%R!O0f&gna*GX%uG\.$pn['WTL$B\H/$9[dV7G0a
%eii57AtEbb<W?haO"2lZ764*<g>d2h<g8pIgI>Lca@&TrXLL#Mh_`<QK@RK:e*4_5"JY,I=kBq(iq6:9@/o1;AT'\+\W''1JnKd2
%gSG[J,kn@n>5i%bki;068Z],Oh98gl+d.],gH#:kSqc9Z#odb@S<DPd(+C3`Ke#5H[modLS^59Y;D7<?V,*776B')@BB#d4M`"-G
%Rfdgu^f"dMI(/X3M4_dkCIaq%e*g#\Zo?Ap:DK$n276Cd/a+-og.pOkp<nso';K*[f["/;Y-R%V,WZ*8P9#lq[*h]fp"]0,C*qJh
%j7;=M;+'IjWD"Oc6tXs(@\UHJ&RfEI?]m'1fO]E?U:V:r8k,-1fi1:DbeQE3FE&o*iXq_46>i7B1on?Kpj)K#=ke7,XEk=kW92%r
%`aO2T+V?'I8p/a^MtKMNj800_g=G$,IO]haT9E]m[C^MOe9XT8kmX<f[I5p`o.4blE?<4qC[JIaD5%SY'7kT$QG>UC/lh.PTaSPK
%6b><0Y*'rTZ'(Li(Pm3^G.s-n&!mE;)//)sW*R-&i]';9Ae4RB^;QS`d*jak[kE_?WVNcWNi!=-hb<Sg%.Gb0G'_QeA,P8.d;Z\t
%Cak`I(OB#@`lYBR1Zao#outn-j][.JS:kqIB&?SU:Zsh7;U3M()S4nN[$*aJgPIlH3ifJrj<XCp\XE.CICl4]D;VoeEiZugCnD<q
%pa@r51Rm("4*D:BTWVn$WVtpmebeW8G:$V:Y7tt\_NhLQK'Q?Vd/$P2aDL^"j:?QQr@u`YkE>ZTYtU(o&7:E!nRgS%\@JB6a:%P2
%f_WKS6>u5P`72]JK*6XSCb<*<;^8$sZq(C1AV66#Vkp7HF$#./GH4Y!4D.u8g4&-Pb=-;dV0"\[==lIher9EFeL$^?L%G3K0j+h?
%c,7%o?7NUaKUG@5VgL@l>S;n8:nJrO^dW\Wgo[oWr;X4\%>+R2Gq!:&"PSU?E48oLol,P0ZQ8liVp7Ii#R[%::K*[ZULp9(.(>[g
%44X886/d+X2fO59J-60TL]X*tDfee>nN;'lBsUi[c;o>&Ona:Dh$4^G""cXc"B5b,2bC&=fbTiKG=_=YEpZKt#^3Q[LjNmMfR(?M
%"n21ao=,co&NF[FHR.sa>b'P%h@+m791cQX4l6211kIA&kFPuX$b8$lk)e-%6f#$g@V>C$*P2\:h$O$_[Mtp#o`oS1WtBs'=N'BI
%c\6f[Z9%KM]A8_c:84G?%OOmKG3F"]K`>f\67pV/6Hr!@VN$MeTS^Cum0o6aI4jUF#:gtg@OH^2.8m,!KS0\UW.O(2.o`k=F+42k
%a(i"QYGE5#%c"<T1;)40i>FI21&>MU5#R"rP3Z`%btt5Ml8>S,BTEW?VgRimPRHkNl\hMc]MUFpKO!4+bDQ72J/5%fUWTK]c$A)n
%MT'5=5R9ruG6VZPCrj"UNB5+*#38%cRUE&F"*`$XpGC'+dOEqYL_t%H]fXV+0A?0>i'9;K:h^X$mq)5X*L&n^ft65>i1t]$Kcs5U
%420`34<E"rODGTHn7T(5ouS7He\8&c*9lrq+(FLc3WB,MAjG#NTihT.4I_9&)?h;q8?MY6UsFhXJ16K0MDS^!qkt%m_'.]\^?HU[
%qHe6QdmfEJ0OAEOo2bV4qTF&:V\5rSH?tXMdsbV$k]NL3o^gal<73GbZ//V58@-0-1jEt^Y=P+k;Q;^sJ-'i1:G=u)M\^eR]c5d7
%NjFcckSn1AB+f428G'"*a$?bU)&3:Wojrc*-lA4FWssC=-[fgXWRH<]m`PO,SKr`Y+d4l_8?c"++_*W1*Ie65i6SX>9)eBDn@c(>
%E7/8[%M#5JPFS7[`=tuH24jDZ?9`bq;[V2jj.UD"oCSkTk=Bi[e[9J[?9R2M.^^C64rZ%5&)8jhejFO^XGNJA;#'3p.?pfM.MY0*
%gTnLT1i9SH4bl38:eCFa2>P+*+R/b/J]+3-5>g[-F:?G;VoQ[5E4T\RmO+UC2d9L,C@u,h>gHNYmEJ&-F>SCoY9/P;m40>BVsL"q
%ekT[[Z][>[s4]NDl'9Y,s829"_r8St<&hNI58=Y]lqbHLZ[/!&q:kk']I#2Kg1PaVq(U9PYIV1Bn5:JQB$\Pj.:X_;ZZg)Ck/n6$
%NEn`\/WpY9oCt3A>hIedYNts@+WKb%nF_H(cJ98ei+iA.`f2db76W7r6/ii'j7K`I4tUZh=7@-rbX^\DjNA1SRQB>oXWG[He&jC-
%Sk`<I\Q/E^=]JDJo14XaLkthA->BsHi9LPoNMN2UhA5%%7K/Zh67V0Qpm%/b,^Ikg\f2fV/3RhKXkd`oE]Tg+VD9*i?9B\ZDD0+g
%e];GepXYbWU_?B6WUGOrFFIih%[S)4#<hkpCCTT.7`Q<ZJ`ZZK\1FKMj<H*2F13JY?]+#rs#nu&Buf'j;!M9.]M6K-n3:`&BYoZ?
%CVlq5/Ih@M3n#F`1Hbna^&3P7n2La3-UjRjGU27u$BI<W##0417"3fNG;H=1Vb*Ci[gi043%F>ADJme\kJci!7!`uZ_&P$p?euij
%;d7esoN_!6Bd[o(4X[7F`Kf*19dSc_;/WZed,,sW:DFT,Wj'=tV3flVm%%hD5lj^hm]J.>Nt+V232&"'%l;7p4OYhYrV(&Lruete
%eSXX-c*Y7*c?6c6i?fb^I_QVOjY/iG>KS41]j^T,[&iKa47T$u5=b$dS_]KO?<HI2%rS7;Uci(O'+sj&%ZUnAj0E^,-7<QnCu0A.
%c[:7o13L$$hL4%8B7&V.E[!*#G2csm![e3Dgade+V\2Ki>Q##S>4cb"b^YDG(WApiHF6Q[:DJ(\_r9+1699$H)%LTRG9Nk_XMG[=
%*i?f4a4G7gV)<<#4$.:b&qu>%Ka7B2SQTVE_Va'IUp_9//A;tj;Zo.,GV2*9pTPF)?:c/mB;FX:GZH2eG]**Up'-66f7]^a_KP<!
%]U6u&_b17#dI?_[<$Jtqq03d;go"Msd<oIZ]_YOZ$k)aWZ`r*0mBA_/SI*KQ$SAI*D=!%cQ0H>n/j?\\7dNYURi,cr]QOm9%'LK:
%b09A;gm&r;g=eatDdRCrKOYI23Lj2U8qiIQdnerp>^Iff3IQg>G@t.SiOtH+FSI!,Mh_hFfr+?0p@;\fFACQuTB5*uE-C\@$"!ti
%(ZEQolW!Yj\WRH[5&J.D>58*n64Z;PeaC?$3HZX<^HBhsMq>)!E2g?i(bRbLDR__Tm"XhA2fI[;8TZ?X<k*G`G?:TrWUQM0S!n4@
%Ni(qOdrSFqjm.i(jlEj(($Wq+:C0PBqNNNPe]DU(eCV,,.H>Z%@;:4mEBgigDf&1eg,EqKams_#.e@nX9^P"0eYWiFG>G)2MFYh=
%H0q[fFj[nH:#-(#U&0(OC?d5eI[\F2afA)#HdYmTJg=0bDEU\$:(:;<T'FU.B[]o5p<<0!Z<a&.XQ6R^,?\l->*NraBm!0WSi5k7
%B6rT`]eg`kJ%_CJ*UfUomq.9to\iemF8GP.9UX2>DFULAVAJEn+3`<cZup,kVsTgeIJQr)GU9P]DO`)te"+&EbKSJXG%kQ;-2B=&
%r4#[s&_7J!B@QE>IE&pLHCNSKBSC)^.<0fK=,od_Ng?luRIc]hk0-hID.i![p%!4E>+<6q.30FnB<':KhFsu^':fT9pY^kHm+h:(
%iTtT'rdIm1[MlJU2nhDdEBL]fRh/3Ffq%\:H1pH0F)a+=7q8ka;r-cma'/.Q[eO%RAm_1%:M3n.6@CIk[$8,sC@Q*m3`g7E.JhQj
%gtJ`P2]&O5@=`cC8%UmN41_RQk&PMnRrc&O48Cm0W$l^?[X'ma86n[IHBH1Iq74dNA3OJ+?I(-g&(14GZh=4k`'I=ih`Jpqk>1QU
%[cahD$a'6F?MS9KUtmTJf+7VIk.B0r2Fta]Xj-?%Zt*JrBVr5HYk`$U(Xe`El\-Q-,8YB[m+fJV]iA/_m^EZBC'd11kU$e:(?Z?S
%@<"08I(H6u*c<QI5B`cZ4)_+Dib>c'>eJoh?7e?"_Zu*bXW4ucnZ?E%9=(V,je_1rh=Qm(OEt-bhGpRK]CLooF>haXQ>W/bj&3U'
%h(MbY%sL\&k0r/Wio8/!Z=GeaQIg>Yo#n"FTsT3[P,^*@*F6.@Xf9V4o';DM?1(IYlf9oR$W#6.'e-J5]Wr,`hQ<S8REEZDTejB&
%o5H1_'V=FY8j-OpMG,mJeOX4oCH8,m7H0I)n_7()TN5es0%G;/npGq0'WFRJbE:Z)XUnc5g`8hk\U5tI/%=Fod=]VrX6A[(`_=lC
%\Ccelp)CEiWI9&%20+/;?T!_il>!W6qm^sXes0<T0D6Jh8U"-8hbG9b_SSWe6]`suX2;;[AVC$Ml*PF*P.D:sB<j!DaG\$j]`hM+
%'uf4P<H0h,=;LW^iCLUplB7MNP>/<eH[7-c^/a0UZoPlPD)Kd"kofeH,@)rkGGLt(eYTaml$7P/Q#4U2ZM5sue`R>9<);l(&*?PZ
%IQ`'5Pc:\sfYFPhG*C+lk(Z'tm,'?i.G%3K?,aOGkpRQtVP>bFQb'2BV,+'PalKOLZ$N^S(*YD`qR3]*CJ.<WD9WWaGI:+R265ia
%ZVOc=[SYH0baUV@l!DbZF0UPa\TT#)Y4]siWN$chbpC&%KZWB?jN?--h/+#7ab4-YDQP!"Q%R_i3IMO(9Z]IX2%t%t/b:N!hCtSh
%))CcBNKpoJb0AVn>%T6X`7O_.g5TBUX]9D2.Irr#R=e[a>tOHpel/RDc?_,9E4B5eg7Ma@>/JgEYV<1s`0.<hNRMoVDo4?u(H:2C
%\'LP+m@32!el$L-o@PN/2P2U7%Q7PgWk>aFF3rdt9][A)NXqHL[[qAtTF5SD.]p8K80h?ohE#O=CnJ'E:UdIM8ntuoZHUtdaj+WP
%Y06FAm)!Qu<ifA,naPR+2(i*WQ$Blbo+Jfa\LPR*kH/c6I\Zb.0[G(<`'I%0-QWp_dtq,;YRCn^dGlN5)4(iBP1a_s5?Z.t>c),9
%Hc;4uEnj7RT1#HRLT>GXeTsF%VH;rh.d;Vk[$\S;&'*.aV><nurp$nT=^NbMR:EjTOia5;4$2E/`Q]D\@Qa)F/KVfFFrk6'7ltY4
%MsXfd4@nn;:>==TlZ.;e\%YggfiuQ=D!f1X(LQnhmL%(L=*(:Q^Y"a1pUBMRjo'"ur30PB['pM\:@:.JS%"HF#K/_^M=@Tg%i:2u
%c/IfK"GbnFZh*^`_t)pFld;FD^-(,L,a([.Mi)WKRTL(B0C(:Qj1(Dh42+UjO,rTGpSjA?;.fbPodE?YG>l2?PIGXVr_t@Oe#.QI
%pV#%RmUPuBr(u[L)4BX:fnm6n93u[?>1OJ8(KO=co54;'5JK$U\'OB\(]2lcHgW)iZ[/4h5+X=6EoF"pjd_IfhT27j/Y(m.\u#>D
%;W2Zm,&qh2G&a"2SR&UDld\Z$EDsM4.W6>5QKHW!=,Vp:6=+^JIjnZ.h&<Uu=7+F:qHDX%GeH:D?<FskW?)dlQChg^S(,>EroW07
%12b!1V0'=M52<lsXfOBulflC+40d:<\iZ!\*q+uIq5sP5bsM1h3Es&-^X'Bt*l8Fb3,%uhI_:tr\2_YQ4u@=<rDBi,l,T"WD<\="
%03p\/0.t[KHOHSI<4FP65;+L5^#ronX?Jl*FUQdE?N/g8Na5so\$=D`e_</KbHIP1T&q\aQ`'ZQ;Z==:*-^?e7j6V!mg@<l4fbN`
%]Y#$+$:;@,^V!dXQ$ks+:H*2*FtL7R?BTNi$DirelX$PoMTINW,k&F:AETOjWh!b3/>"fNbGVE6bAs`=DHE)"`V%C,`S+UoEI8%L
%l)Su2fR(m"0@sQ80700gF08QF?Dc_.[I`+XC)cCnUNY*"mJ>=TIB+FDaO][<;J*Zu^L5>GdduIHUTc4a2HTNa\%07(?T$%&Xc8Vl
%S4pCeZVSoLk&P^=]]RI`hGW76p8k6:=H;,&=S1RXrNrBhF;AL^VLOTV"m/XbYBQ[@()7W?r_Zp]mCrS96E]M"gV/S0BAojeTYgWM
%F586*ETn4Lr*!k1X.(801.%/(OtS;<*p3LqIg[)T,VFf])earGgYIoCBtDqi&^-]aINl%2\V2CDrPDui6Um^+&mW*9p\I\,7(gJl
%&<:M*@[_8rXC02*.,bCu;"<u-W2,Q*i$ql8:^mMU1h9Mt[I;rX%9MfPI6)M,Ln>1A]tB-m8*:!SXYd9;r;d:,ASmF6:"O-me@\jI
%6MM_Z"^e]Ap=e6'eL9#8[eHrIrhKtMFAQ/T<7f]a2RpW,\YF>OnV:,F'`6bLM16#r9(E'DcIURB^s=<rm=sHj5:$`\'?32EMNqL\
%D,'q/D##0=,kuH;P/uP'>O^A;k=tkEGnXIr)nUNp0.pN0q.I[_8TXo8?aRL9"mFKL4U^1[h1(Y(JN`[;5J5s(<FJ^`mWr1"hlTH.
%bN,ijim@D<M:;"iNJ86SQXo"3,o31SmgT!E0Bd`>]F8$:M(qR\UDdD&*>*EKW_/]d1.r7EW$+]H-mFKp$'d?/;51(Q;"C%\R7j9c
%,X\4MM^/<t#t7OIK]t>_IB(2KEIo&Sj\[CWDBe;!0'EGWN/Ed-#*O.a&N+ZU:u#D%nNMGV:[1AKU(iTCkZ`k!@am5kN[B*FS4LR+
%6o-uEqDcl-+,l)_N;B+m.\[><0Ihmi/rQlu-U\]P!",I!C[).NT;8N\0cF#uM'NBW0T#@6P$&1sVI8Zr'pqlu(1`++9Zbcn'TS>O
%Sg3\-M(+(A4T$nd+\GEPh+7cD,j%L(Ne#&)U7,d7'8\^PM><4?8sN(kWW@]I;ko(=KqrB1;-=&?-])ln0URrdM%nH)*/ZK`SH]aj
%,eKctksS("6nh4Mp-.$#a[h!T"'lT4M2[tGa:XMrE`=d;cTC/T7fF/@8Hb>%J7qnn>u3eS1fZurdBP+@'%%kZLbo:_e7]hDI7B&A
%PXX[Yohnea)Ms%iNbG1;$;P&*)lfo7_5V+26j9JZ6:n3k_+Ec[N>h&ETTK@NR0ZQ^l>"i>I\5m:"Xh]N<?h8eJo`+q7mV)$g)%Js
%M;\:@K(EH5n6s)$TnUJ4p!nQWhGanH.MI.e'N#8j.Z0Z'nl-s1;,p!iPmm4FZ.j%>PgmFA'%olDor+OA;Fi-qlbjKl+JQI\\OqHI
%n/I`+,Xj"bdmF<0*qHY?J@[4G&s9E("=Yg`8ub>,+B40>7-MJa1m90uObkioRA(QsA0IrlW^nA&ZAAmf,R[$"6Y8`\Bp,4A+HS^\
%a=7=];:A@cO@l+1@<4&57jA[A#\"+OY1$)1\uB'I9pmEe'',NQ@+CJMbb6IS77!d#UD]43,'lXV2ITY&]$j1c5,cE:Ybhq6-1e.2
%Ir5`WdmlN]S,E0@q=XZ*ghbTEg@qHT-)q6HC;)KZI,bh7T9`(J-Y8IS)&tV;Ils3J2hU*Sal)WY9tlf)7s5Q"/uhO[*#1LH223qY
%@JA(ohlT\G+]3if(LrOGcT@Vp7!L/5EpfJm^<n&%dj[_D&oj_9l8M[^,#\p_[;0'p6/U88o:gfBKLq,F6\-rh6p?,X,RXEq*LsK1
%e:@B\H)I,U.cI[!KXmhVFOC0P"3qc>dI'l3&qNcqY8W!88Wn%5;+[A#1a<ZjX!hf,0Qlr0S20$t%uPcQZ;)bU0hRB02IV]aW$.8]
%,+8D^*$U8.6q]oTK;9k\,1mSJSM<YjL;>2AKsX%71=W8$82u56H[ne'+UBhk#n%r0<uQZ]f/5CRAQ]aF^an@&0P$\.<"`!C*#^La
%kmEn$'_6./:CP^6+ikdIUCm?q!f&^C-u)]romk58s5aPSQ3Vci#>>uqOcc4gK'$u,?&3$%#.6V6GJ4@<`W,8q"dA_'K,Vr8TSX>=
%$EC9p`4@@kZ%17:[Z!Y2C//kfRE@giPmahNJV7c+\:^5$'%*Xk?iucaSB;$=O`lpbh)E0ue0HO>a_)em,;>rb.^9M!1sja/h%5,D
%KZk$S#_]IV_kJ@#.586I/48JS#*F0sf;YR3NMn,Fph"LAW7:[*M7$`ABcrn@AP!q1MF&X[a9C]r;2J$YYp=s5g6<kKTG#dCnC/t?
%"P/?"'-nHZd52E!W$Ia<]SKDe$o&1-q<rr>*1lX9_/VA8@2Yg/Q\jNUGjp22r:,nWb1CU.s#2_.5;3!^14Dqr)//sD`'9Y>A5O8p
%>CM_02kl$R%Vi\,,lPL*a8c%b+85n.7A?ahBFSX,5U<d/>tThsX0>/t;fmSHDZT#+d#p6m'k.Ia@Kkm!Q0@ia.`;sf-t'O)+UaN.
%PD/97kh$N1qWM]<5q:Lj(o1h#%FSW)+\A7?E2ios9@S;+p)ue\6kBa;N1o<V7E3;B1,23t*R`I0W$G"eO?=j=kg^8:;umXtF^EI_
%3\N"*&HMKL7F@Jd&'cBGk=l9?&,NpIP6=bH9gN3:,"!\X0$1&dJ`;`/f/8^O"'9A3cA8WtJG_nR(OZbZH(fpnAb&1!aGYL*'?hI&
%'dV3=(aPfq9pJ71AEEo6a&HJZ<)f!-17@s6_;qQC:`3me#SL+X\10anTVdmT?ku<FW=oq$NhKQg'dc>$`=lC1!6,`X8[?Ql^u`TX
%eI2jd8C`V*I?k^N)@[=poYVg,pd56X<##h4B3EbA%+U1d.FXUp9u3Jg1/([b,jJ2.M?]Y<r[;JiN2Mh6aKc5f'7pp#eC!NUOpX(C
%aALB)Re'_%`;Gb>S;\(!d83r,.#ToQ'59#E(7[udFWpmUK;f`iVF87n5r,N&@ZW3/&5ac^a+i&.cr2Vt&l&3RkseKpY[SobB2)<8
%5m""nqCF@uB`es<K34NsH;72*N[XHLes$TV>LoaJ;hTg$GCf:_Tc4fVVF#8o,)V5&-45="5fXucNiAb=6I[moC&jkP,D5ho8`e*n
%i2E=?5ar?/CoCb1b/F4TodPJ0&82H6:_d'l'G3:EdYMkNJ-LiK.4#H6$#OTX-CHZ'ECm*H@_Ik"&JbhL2FKpQ+Ggf!%!MtT%7-^S
%,1-U_l=ZOi#*RCQ,1YmJMD>VR9i8bM,"F>Q5akKtYV21E'I4AW,-4M-9L5J>-\BBBf.fg^24XqC&f":UWb_C2?q,;.Z9Z0eW8:#o
%fd)9)&CP8921`t(XDP5_TmRu61:U^78;2GS+>PX,W!b&a11Q\.8;0fscP#2&H8#dCLpe=Uc7]b!!'r=&,SPgO9ZDZT]sII5;;Agc
%#c($$OD<\l+::7@,,-"t-%\hK5lu<'Z*5KQ6TITB>Z0<5U+"E`OW[db0M$dA?jnf4_rT,V_.KuL,!/Wl&P8\Dq16V0;Q6It<,g3R
%pc->60E>&r'*K&0$j0063hD11eRaj\,SGuNN?f]0eqaJ%6A2ZTq[c>\$<pNoi6Y"dk[FW#<BsU#bTZ<1XFVK+$lP$50\G7,C]\4V
%BI6SCco5NFdNj;fLqH'N6(/,?72J3OYumGC;9>_o0OIGr1]fB66)H,g1e<08JP;9g#o^UL>"!I&@Ek;HMZ5nfn'WF^Z=N.D"n[<&
%:_LR\p:'pdlG3W`&0P5Wmnft6TE.q%Ui$53n#q4VR7ASA8JZS4WlS*dEDSnAA&Jl7r\1h%Z=TB:\5,REeY9*%i_<t>bHtqik[$-B
%>DjJ8dnS>rF/1Vc&YE9GqmnCB1I>`$2D*_5@0N-#2cLbXdnN6kD!]@;"e4H+=1fO^Q*F,5)W)UegcjE4Qmc0;bneCN]Vg<Fp-pYB
%YX.$M<0*l-=jUs9FbXJ75PidUFL>ZDT)?9RCO,?WBMWD6d:-!)D-6:.H!/HE2B?+Cm=68O'Hnr_m$?uPD29cIQVpV+7pZcuCjSD8
%':^Wp/7Q6"B'?Oh[]&hHC1Q7EW@\9ApP+*?bT<V8*%$XUK%g`-W/Wb9oiOOAI56Lk5P@s[An@HU%b2cFHA-#SP9Nm%ns6M]HK2,l
%B+!Cn28.j11Wmi,'@N]J3!s_;IqY"-doZ9M4[5CAk*_%hX>(3&OY,fd$=odN`B=.bI,%a`bL3McR-+@1=49.-b1M4.Bj>JCJMJIC
%bS)W?3-"KX,Pr#/_0^GTC/Ue"0QA>pfl+X;pJeS#`XX*W9<N]tY<A)i]N(mgO8pTm2Wh#"BK5pjBqj#jVUO*J=VJ3PaKgpb>MRd+
%h>5QKflkfDfEdBH\AITgLir'bHgbA`:[Fr".G%!(=RW[um)$[fGI\63Z:U8eF<K;h6Wcp,nGS$KS$&E4U!/X`iZ-BW4D\@3?)#O*
%!#9rL/_g9,l29h<W'-n[PTB/R*Wpba4DC&q]<B#4@r]!MC<(Fb&NX9W['?^)ai.&Y+DDS"<Nu4VXUF\.7<ectG#GcSagZ;Nmq1F!
%Dh]G4Q[mH>V!"d_\1Fc;Se;bWAd'Cb_+I=Ub9l_@h]o[Jennif=QeF[83)Bd\@6gJBU_f\m?tN[mT)$d1Rt>,1n)14W"85MI\C+W
%YO9Tlp9+A:a,1n+-R*.D+1L<2S7<u<L\NL:orD"MD5I#i;>H3IoB%WEojgY+D?EJUO!Dn"SsQeb[V#*UakRU0c+]F`WSH2jSagSD
%Hn8p99`"$4Gs0,p`,]/NMHS8NQLh/PO'%pSDMj1X?&.F9hNh'jrRSSs918TWc\6M'6E5"[^)J_rSUtpujrESE]iGGd>hA9?HV/GL
%YN?5YAaC/D<c#`l?7^rM&XAXG?QDQo;S3p.aM,cCOuD%k,[X7$!;*-;fcOr\bhPL!:)4>cP@N:4,GkB>h*5,.XRS$'B8h(NgcaSW
%VR?.1U,B=rA^'J0>s"e1-bFa[93S[h"n_1kBu&[giYXN%`&9d4Zl;p0OIUN#dZoOA/fJko!gO,R7n:"$`Z`@m^XA>-i_tSY[XCt?
%>=HPm1ghG^p3G*Hp2TLP^5J7*,GhW,0`D<pP*<GiT%a+KqoB7?[Yrha=0qj<E$[:&(l?k5@pCS<'AG(l$^K&8aIt#jhnXrJIA2h3
%72j6T`CbrBRHV7eiV<%9RVes^WG<F"^*U2ncU?VBK<*t':-<F@N=Hsf+554G"@bl"V4QIV,pFge*L42F$;X=Gi_Sfr=aU';dRGQa
%m_H6i/G#a6Wo6.s&_"=8htW>nc&R0.[(Pt-m)Bf%Q";J.p+<QQPTH.Q_&]+'/r!eN%X1KNk8*:5$>CZ4ih4GMhq^e58L40bj7K2&
%rSd+ISDgG+!sfu%<cuf1ob?el/R%<O9L/;%k-u#,;JHt#_u!oMTe!<R=)9Y&E,f%33FX-ZZd%=<]p..P;l=$\gUWp;Sg3'-P!.Xm
%I((aH&c8GbosoUq@KpZA*;a_[R86j_.qc=:)*ScU<b"q!9/&5DC[p62<Yu)/KPC'a+q8cd/&hBlKEEpu;JmZ#.?YbiIcl8NBp3BU
%<l_1sEq#CIA7V"tn0pV+7Vo&@j&Guq\C+M9NoM2$gm[s']5Vj-&[W;ageRYP,>+g;MjoMonbtn"6_9nDR&EbV_f.LB@V0`=Y\Y15
%L/6n:TO;_n@Bj(Zqppn.>kGAW2@B@KYLuiu-*:XrAa]4"H#KEfl(4;!/XfLd"QT(.D-L-"<EWHgF$,XKr[kgh2Sm27$<Y/g:-<gV
%FflMQD9JL-*Q,(=Bs[_TXgWbm'gan64k$UHs)G7*4566O=-OOq]53l_COY,lgDs/b?*bp?b3QL$Zg[Of:s\cX[;Cb%D%j`To-IIn
%V-%a-;8^i.i[/(n-F[6<BWqnFeE'OtHZ$h`Hc7I;G]K:MjgH\:ijG-[7l0:qDC9lRZq;^/+rg7hN/p,aRNL+\F9(cOifsAZlJ^2e
%,<Eh]2B0HMBgne[8*uK[M^-J+j+@G@:jTS5:na4^*pYpfjTQY&R%*L$AeIk#^R;sr:;m)0^T];<IRM\Z_9J]9R1qPCir?E90Y4`:
%[U"ij1ojWH)kFusRjLQB1Q&GtRnM5lQ__TWntp(`n<d4iPsVRsP$GjP,:4#=[r%$4S,j,%D.1.^FV_M*Aj!2t\@WOg,"7L-Hid-`
%FZpo&X4R(lMX0&F)#'q#\Vq=N:TG*/UtZmJK/elG:CV0sY!&E+4+Q(m-@^0q>YZJRl:;7(,\l.RCU&pRU-s7DRj'k#\k`lg`E:9k
%5Lo;",>,Rd3S\ad-<E;'?&eC6q,jK_'oePc;.;mu=fspuV0iL@(r"J&:66/#NbRiST3J_BD[[ss:J3"+O^.5Mm%/bFh``\r6f-90
%-UiSA7/NjKEHq&Ak?YRc)/?V>9J\,oSp0LNDm/9Sp<R3Hl)X][eolKX^SDHt%EoP7R[HddZg0V!<E^/HaXc4k5fJ7%1-(/pXsIg?
%VK9_=Z?1bfP(XY.U-6V<+(]=07(qI^8"`6,`EtXF`jVB29I59s[`\<unrJTslcCPs><)KoEMc(6(R_Hb>kj\PjL;qAWFt)*Ci4bO
%Xr.uaS""ral6A.I_W,N*Z(A2rjsY]59^MU\X>AJ-&"[JYJ=9$H$$I+dBUQ-%3$MD1g)#UehOaM26IB,<9BYWpYr8k-TCR,^4=Lr/
%:;5"P^P*KX&W,@L+gg*J2YJl,>&qE,\(r6-hoVPUnF:6gA*mE'e"O4r6@<-m=aY_WOj$>i]I,UDEXWQ#;X;EpU"u".OIAVtC]j0P
%WL5=fo-?j2Yk.YJ7?R[KaZ<:U\g/S'L9)Xlb"3nAq=%\n1t@77=l<@nI#o<qU1'EMT?;/AD<]o/OqPu>&r%r;A89Q8:4)@+U4Jt/
%,&46aa,ICL^+Pr9Qs&"arpEfk8XYHQ35pug8!ZoY+W"8h>InaUV0'U'^'C*HQc+tt.5:iPhNf9cM6)i^#F$1W/tr1nFf-=YIATE$
%F@CM/R%Y[r#nobBfo'Ymni7&]eRl9bH('.9a,bfPeUBs]j-3L_)CI.6q"ne*lCZ_L4;&o.8Y3&;*<oQu_pMTKa`5p*Smb^s.Pa$k
%=p/)Yq<^pBObBbndL(!giI*HfF!IYc$IQXfG[Ye[Gl'#c1@rW$L_g<T<\Yb^G:QO7_Lkt^C76INm(*ucb*VXf[j5*VDGd)G%jQeT
%WdSb/ie?"sTiK-F#]qRih"IV81-R=9;,.3*S<-lrE?FOi<6BU0]Y0,,Z#rU=:X'Ps.D`"YY-^`1^4t*4c&mg?0P/WsY*3Xji<qR'
%+L427jXLm2gD9)2@Z@0>Dl%-(du>r<W[:Fp]K7crE#d2Xmq1R*>I:]b?mI<K,18`d[7E5gV*iXiQZjVX0O&?Dd;:K]M_7+]KoRp3
%;"pI(amnWV&Z%TC;J=!'4+S'9-m]iX#scR[k"%iLF>e^GmH?/e0!1G(6;uH+U:mt`$!Hp\5[DJN7B#q=M#m<:jE]rQ$IMu7>ELU4
%8%LBaPo[JO,Y8Y=+[Mf2Mr`k/SleZL?L<GbS/l4qhH"/;o>F!Ag1/J,+rYjJGEie4QDU@k+STi3rE+oG+\M_"g4F17n*Xtsa=Q;]
%@c`CH2*=SRNf$VdW2"EVKNa9jp6O"TL3&gDd_tXbjHSdN(rY?u+:<q3%8SN2ok(096[IQp6\MH&YZQ+0EuR4>K_Mnk'@K;H)c7fO
%&ueZkO0XqZT"O,B),X;-EO<]I$NA=7gKQ<-=*#hhc+Oa8CiWA"eK.k_<DBfmi2TjZfE\.]Ei\t/MYh[VSVo:'_s1(*oa7Ih8Y(rX
%\9`P*k;qH&\0iQFGuiUa$:5'RZc3Ze8%V(>*l81<CLtWqgN*oLp5Ql]S5d2+4c0m[gCoC3)7`DG5p[X84jZCR6_C#7-)@NDKC+e,
%-u;\.F0hYEg9]oTZmQ*=V]Amd5,IjF5^R5UBMXYQ<BGIf6$o+Q^jp,(fot7qZ=fIgp)*fsLbMd:3$,\.K(et\q\E67V##g(ZDX8s
%aOP4-TOnWXAC$&B3_V#n7>[A89.jc$])?H4h`uP.FeCl5PXW;>h]aX-RJIB4j<V5J)<p(*8u/2-NN]qcdC>ckgF=QWJfBf1BYNUi
%8ZO?\"1Gn884@'^d.,q?\(17Zr&!*loq\_NJibaA:GO+_E[N@F&ND+S<^lSJp,aJ[c\bOQh4g>^1.M>lRg%"DV'HC3%VM`M>IYE@
%_/jbG(9OpO@$,27ZBdhJU_cpcHrS.b;77Z1)i<BsNak4r.,+gT*moqu*>+qLW'1'g!V#(Qhlc8Pp_fK5,iuV_7MbP%1Fj)^R)ku>
%[r`L$`]9NTeV0Q&N[WNi)<oFDb2VVD-rRNmTG(+KM5`)#)5^/np6I>\7Q*>g&!jXp$SWU@jG\[2l8@#996I0JAY>CGHM'=RFqTV[
%qCSO//>\LrKI4@`P7KPe=!9iR0>_ph>O_1OU?#A8(q>$W-"qI]7_hG,c:U]*%3d+a((JI$M"gkFdU?kj*9c8Ri)H@I.:@RY)W?kq
%goA/gY/+<uQ\_0@-b8Fl,DEn$OtE,R!godLF9'C(;R3/I>8<?@*UHi-3*d]p4f#G/;T\$:'S))VS19+=a.b'8E,`p`psdC^"lG$!
%j^8Wb;LGhF+WYkQ'13A$5?MFlqSfg`i)_^&jb2*01YVH&P*hVP!b`Dn6<^Q%".b=Ul?e(SUqsKY/1J8pC_@sbMWkGSKNV#1dc"1P
%24NcZ"Jh6"SL=QujY$1o@(X@?L!5\tK7jojlM8tnFXL[T<rM=7\H^2nF1(&G$?0Qd&L:)3,HurBakl>;K!8u1&4\`)V;E.]BdY#X
%A$]uc+PZa8-=u*IFPlV`j)"Hob"<@A#8#I6-g4NH@?Y!1H3sIV/*eL^BXJIB6t5WN]*(<0=<$!1WNt\W^jO82aaE+*I)U<f8,`2a
%h74!j<#Cl0ZZQJ6G\-\,K:G?7g=h9dp^t0/7K^6?\3&,C1[qhEck"VqDWaVuOXe1"$IhW&'8(bO[4!VGZr9g->`5$0DJ0:IaAUV%
%f5`>25rtJb0Hu>nUQ@`X`18`+J5Z8(;7qdMjS]oeo*'rr8A+=a"Q5sHIbP^Y-O9k]^7651/3goaL_,ic2ak6oio!)$1tGVA#cNC)
%jrE@r3/>2XN=\Wh$meE]_Z:Y.f?[JG+L79[[P^TdTL:]N3u]eFV;61=/#K:XJH?._T"A$;#rrC=K6#QV57.(Z3j&K(dKhg#)Co^V
%JnHY/_m'p8)l)6'X7BZ9Itf*_foQTg72(Ss.\SPDf='uO2j0X?GZFEP1P0+C#:$BF&_ZKaqRLE<.MuQM%:WB'1.l.c"p'5-`c=$%
%B&#XL@>%?D?()ip#^2=7ag9!Ihrgn.[%-pJ(NlnP<nQ..Tb"TA3I>Q!"jp"9qT/p6OV6M-10N;/"sLd^6!$o9d."0Q(G(_LMQq2!
%'4h*m$(9!+,TSo$B`L[7PYZJ'E\sL3Q=aK"@'?.BA*j:8-E3:tf9Rq-3TH:iM[lr:i+^IeJh.KLNPh^nM8Wb<[]1Vl"M#b8>]&co
%P>ka3F0;?q1++Mnk?:*^r#]][r6#b-rE[Mhfn#ur9L)5D<`@*a3!r/Z0LhgJOa'Jd;);&=4nK+8/r+*^j=\ge/3<Hsft3chPA[gE
%qD`l,F=YpVBb_8KE28[(j@74NC(0e[[V-Ti^-,Bm`<ZMH3b[=[(:IF`Z@RUJS@(b@-j`t;nAAg=D,FZ63qgnD-M9cu!rMG=V6+H-
%,doGY/#-GA3!f3jid,#O^UAg1Dp9JW(ICk]?d5=Nf\]`eQbNJM5Gi&_3sPI=?aEkU?sV[0E70^Bq)p5D[s(idaLC^V'eFgSB)&,/
%(7k7^fqSi^rM(*>b1F`a@5(:;'bHe]i@<d<[q1GCDi'.V5p**,6\"cb=R[.0;TTVc(Odlg[8&iVEX/m&3T$S1UbJ<pR8G@hH_gUn
%>I`[D!nTs<]W+@2%cHQf7Tdq()aoOZ1f(-.)l,GHXXms3Ol`Xr'-AbWaVgiHM^mgeF,F--U81WLr=o5r/\eF1qQ9\#Ihc-N^M<R/
%M3`po3IdSVi=e*KD4HDHR@=.6g9j.Oc'+s6%Xr6>DDaYK$!3k6%Wa`%G<jE-,:i\SND<93CCi#<ASW(rBAbH-;NP,8^rdOEYd@pg
%eNos'NNNAha1`mB#FoVBT4':K.r(Z+hAK)4FTTiTX<tFl#;:'G\NsV3#5Y&)_B,*^<TriR##`db,>JL>7V_^NV,q"/F@X'rCf^l;
%<Yft3qap^*MI%pXr#$qS^>g'CRe)#$7DEu`qP'+$YNUICri*XaEuqbj_d=jr2q&J6A;BBb/Q/GF_9u9mGsN`T`-7N"/4krR.34it
%a@@tn84`)S),]eVaBafn20DX*#GAJ]Gis+iHP:PjAC3/XL`4ibWBhb%Q*\Xi0sndnJ$=%5/^YG+'7!U)-#V,QaeJ2i8T(g27%Kff
%]_!E.(IO_GobEf$fE;3s#5#cC8EfU88c4-C^:KEm<Qi-lq4CC):J_.#hjU`PrqFh2?q19%%jZ#FR]!$fS<Bi%%U$<aJtn&L2^usf
%V7WIeP,KZ.nR_4R>I+TiYtQ%u1ncqWQtg,620("Q?S>DeMQ]en6)a=NTHT^+>H$6i[?8i(7%r9;=KEPF^c>HFO!G8R!)"phfJCJN
%dh!=:To1)-QQ%MPc9:Ht-?W]N`+?r_X:1%jI<(Qr&`=7/qed=%S>OUX'^@V88,K=mgq7Cu5Dc6bloTZK)um*+E:^E9HLQ5,lFB1E
%IC-kmbLO?=@1QT770p^XR]GEKfHPdj)K&Gr`-7F@k>7-aXCVB]+I/a-#6gtH/7""?U2lUA`u5WoQDbWi]OdG!=V,%l.a(C07lBZ;
%T_=#74XujC@%7+fL/5oDW"50c6q&P]gYeb+69%bDXQlWG=PB\=<h\!YB.9)@bn,laN.q1O(4W!O=%_GLc,78aoRFc9^-U<Im3_e4
%U48u5T>1bcn?p`+ntQq3Xt-;5MPTiCXVS=AUCs#m>V^&-BCMicbVN2Ia1$\#Ui'ZGPJU>;7f[#3NfTk(!cp?_E$bnm&qT_Nm$A91
%"R(CNhFdS7M?(=DeT($`i'`Pi>ZeNLSHnLom(B?X%n!jO=UndB7B[daXn@PQfs-3,VbjOgnm-"+?^SYOVr`gL$@ep8m&QHPZY91!
%b0j?Crr]VjKfulN#uONbo[2C`\jf6^ljepRb;M:$9mc0abT4O:<QaE$QlZY<bNSM(rA1DnWe<JZ5S*Y#*JTJ<9q"W;>hlK&/sWsQ
%jV,4OV8001<`DRkcj^%<4]0Rm@"M2X8<E$Sa[P;T&4LItj:uH!Po0bnp)=@W"G-M^5YI4'P0JJ(^q6d3Jj#dC?^ShTW9TXHpbQJj
%J*,=%YH%R`<'<gUo]8P&YH%Tr<;#Vm.@+kSGA6mm=#+3J*6.P-^QCcn,CKl1Z!!7$PU_B34ZFj:O")XePZnV]a-=J'BF<8pR9c]u
%WCiGY)59b':IN)(UP/\p'K%_0kT,E!&`\KV_DSH"$GA3Xl8sTR^?XBU0e8td>:VaeY^`MjRa=CrrI]fLWK[r97?fB`VAM=LBJ36I
%hp(&>;t3lPKWd=7H*udA<W%nSnPl<E=)7fUW-I$<f#)#l;<CA!dFiT&0,O9B#>9u50Z@-^<-jJNE[qftd`J5pC/?Lc6c^CmS1@-[
%$PfW_/1j1DU2W3TPZtFe)-2V&9Z7-F]H\lU/,36)b]+jF[:JUs&#cM?%PR?E@LWA?l45d1!taLS$FVf[FbJ<Zl0rsh_KuXi?q[\(
%KBXP9knm_Ks8P3N$%b@1_]Pi?7IU)AKRMDB5G+P))?O*F=$?R.oK9dNV]K+hq]Dq.HTkC^SXeOA99[K3M:NqepL+tS=4#NVToi,^
%di5"u>?&Y\:gcVLU2hMDOR(oYcq3p#D7WtE>+)Bo8-H6%*-I5Hh?]"`j(YiTn_M`(.4jj3(*K&4S'@")XS>bfOu,=8&VJ#1.S)i\
%F8[k&8<34s\(/IoE6X:rV4$4sd*A*s-L_6iGpO,Qg'$cCP5cJ%nf[`(\+OWfXb;,,P4)4jTDgG-XngB0ZFI(M<%P82I]t/hj,f3V
%22m0#`\A7'"df"$@"CE,HHKt]Ngcj-c)B2"-gCq0B-'?T<k'&UJZ1GZ`urqIZ/3^R3i1-cS^MKgB!as"=4l@MbY+>Wob%E='VI6!
%?S42GgnNdt;e-hncpW%s1'K8"3ZrmUZitX[X`W&2A\Y8*5kN#5n4qe8j,[.3:!&'l43+P)r`.MK!**CU9C;%GaK)?@]i7/%<FXmh
%OShL_*ce[9UE:K"YTM)P[2_D^Dc>mo(uHrqNlZ;r^.%Ws-sCPK/UK[P`1UW:@,VG"0_ebI>?eP@6AGW!(Br/JIH4"\U+<1K;@i#l
%;61.bCc:)nKiQ+j/r)*:W_U\P<V>N#(L*YKkFgUG`N-h'oYJBe^a9Fde\m>\luX99C,9lpJNloOG@_H%DD]$Vq,\mB,Et;1dc9*L
%q:?Oaa6@j$3#rB.68W0C"4fcInm%9k==XonBgrc`?CLZuNKgEi%8bmZgk2V%[h9.Qn)=[SGlJlprF"mSk"Z:7&HpNIC'6h1(@*:V
%rp!p*DW@_4hn6?*9gB]k7+/!I,[bV`DPG`f8.09Q'ph"uT,__*45I>_]SXN>O_0Lpd\X*803.\YA(8Ct*?;b3_S.^\5>]ZVQggGs
%r<)`j[fM%domEI+ni(;E?M46bUuqsc0Ok#^jcVX0[h`7]6Z-YWk6*0';PSpHgbA/)lK3G$;Uf#PAGOIgDra8iX&^?uq0WBr)-niL
%Ad!6L-<-OV<sqm#UU-n-9hAKEXrfE'DOMO\FPS:NSiDFLM;K3=(G4Xp@!sU<jJ]Daqe=LNH:<%15t%Zk.p(F4I]tYsCUCp$-LU7a
%1:KT$:`WTZ(FJYWl?Vq,^QIdWlbZT7lM3Z$Sei>gs1/O-)RT=2'KnS3%YoZd_/TBe4Z]UBW3L$J0p#V.X#g&6BOHWhMi7J>PGt96
%UBQbfL0B%@<AE`D4i.W1Yf0-h-UPr6,H+40*=geC)i!Uj!VssDQ`kS$QPT>aZ`O[To`n.QC@OA93gsC2T1eUUVKN/\`Xl(*7N<)m
%m2W=]7fYas"-80n:jXiSIEue8!^6i#r<q*Lj&GtR7c?3>q\m'Aq,Dd9Rf)ITI'9RLpJLV`n)+)Up#b03LH#8&hqW$+\N^bpb(5m!
%[@_K$!fI==e:*;KPnsn4h,E`^;s8!ca*,s]Bd(W#^,9.tmQj=WaW-fXB\FfM0^)0G@&c;K]8KuP<ClPO;dH(b,N*`6Mqq"D.,'XC
%jGS\W[DhOKe;q8SMf!6ABqTN\>7tMfL?L%WS5Q#*DP2$K#,\Td#>:!P@]4^V>3[Hg)P;W7m81GLNB^2*:C;7-:TF-?Q]lGs;Z#AJ
%Polms^NG(1C7hr%m2NTRB^tmejSa_\5#q%&QP'RRWSUuhFKU,#g4*6E`P:<uKR]\.M)pu>D-<NH]YI@lXGT5G.>*@%^WbG^1c:u;
%M&W#`_nXWgS'VK@5aa)t<=ZNMS-Um\L";$]X64Z'F0/Vg;KiJ!B"PIE/G'$Lq\%gclB:hKJBac`pcC]ZWWc[Z#D[aemk*o5+/?Vr
%#!6CKLU)!M'NdD1ZU1_^Wa7N<C+nlD8V?Vm^3sqkfQsp7X-rAe)KK[D%01*?%SI]C$[L*?S_iCn>3T%Fp>a\:S1^Xr19n<6''@V(
%Q^+=8$Xosdd_8L#S)Aj54"P=VD6N(<3.CRloEuciR]c#sn7jhL$CA'%[J,tF#FI-41ZO;<rmtuleJVFNdtoufd>R^Ma$-@SWTu9k
%Wq;t5'G=(aa&3]/do[<AU:]Q6dZ/%VdL3,RmOQmqCp[l6ZYb>QY.?l,pL8@?%o1rpN5<l@Zd\UZpSddRdK4O=-&A[HIC@\Sm0-m"
%l%T_tgVtm>Wrl]%K-r-\Kl4o!(&GAZgeFgCMF;*?pZG0^F'YJ<P?)21\A[FMm'ei^B<u2kSX$$5P?)kQC[;$>+r.T_C)=O_fL_M)
%H+YER"u]Cr/'O<\NHVb%@1Y#UZUM?'2;"Y<qAAV-k[#=8Lk"nT`hG%I>V0-m/M2CPFl)P`n-9#Nkref2?2Gkk(I7$RMs9@?bnkfi
%BD,ND@t9(#k"DT7lhj4Mecaeb?*SiS""*9ZIh@;.gk*)pPP^N6qV6\uNa;X&1grMBgqVBk3EF8Q:N4bL>@LlO?S7@44(;_`/ahe[
%#4YDh8ng8-DS/GRB17IH661oc$;@FBR^l?\5p,dQqru,'Y.,9:fdcp6d(7ttd-Z:m:$(,MEEUtji=_O%p=B"\N#>'N^nnKFREfmG
%BLgZdH-1rQ(:]CpHKk78eNHd\D8gH7?g87@Qb]C3ikEhAUa=n"V9%-)=nfmcPJ($p(H`*E;\oO)nN@s5.>*_0b@%a;NOB@7L*\Nm
%+^:[T@oXK@m:=]@pt^kWq#5'Bo=fF>O+EBJI3C6.kGacs@ck*Q$g(UJZE:`3p4<'OYfbagWQN@gfTAh-XBtU,5IqZAd2Ye5<f3Jq
%$.<s!61-^*T04A5>._sNht]obkG"!J^AR^tV55kc)1WYZ/LoO\]krs`Q(i1p`p=X[91lRQ`(8O]&<.'+p2=.25o3,5+"iMf=`#Mp
%BQr4fMN.So4[Ndh[Z)j1^%C(53$AoN^ie4Q/t3\7gdj17fQOJE@,;Ac>doNhX0pfs0Sr#U"(q(D5@`"040Hp%rVH0lRKVM+^fQ_m
%?p]?g#Q0EPJj1NJrOl:OJ%Pq8d[U9TSO%s?Q#2W57$p%;00_,hclM(lP9>T(#5`H'f&.ln,#uRJKDb&1*PAM!VM0)Ol0BAAm>?rW
%B_i=+B(qD%[^J[Op^31P9FrWr3B:4H),>EE;f#oG(Vh(/5F[(0J3pp60f;EN_[g!We;>L_iFqa;MsrQtg.GU9Fm`Bt<+noUdC+jQ
%iCKt<fSV@j%IbU#H<H([7A]_lo/.Wi]2u3f2.0a!"VjOb\=+>p*(^qUJDXS"dYcAROdb]MW)[>LF'-9gkVW`/@QEDt="Zn0o#pjB
%)H57E!?`;(b*PAg__Y(6W.^YTbtRSX7C]7e?%=)RBU'5%8PaUWC<2CqUAO_hroQm\1YCX<5>*],Cf,p5iJ!,6kepua<_+cPQ5$E+
%)8h>i$qjZm&R`1`YT)0ZFf"a8;+^9fQ1Tt[rN)#M/:R7nX8&Es5\b)F78oJsM#%Fgj;`6o[rLY?([Z-]I-r23o%rMTat],t?d1N#
%l:ocsU,m^p_@j<M'g:b6qNTSc`-MT2HuWiNN(KZPj+Vc(m(BC*nsD?7@#I2,Wo`nLqk*Vg^UNhRh?$OE!K4`^M;>iSeZ.cX1@mi>
%JqJ_Q]4smDHU(g,1j.s1Y+&BjDTRuK.hUr=jumj83L9B5YPEN<]1>Zg.kB>;:;HoBD>c1?.QKmG,"ZN%2o=A;".o,fZ?o$-XOK#^
%gs=/RV]E4Sk!9.>6p:D1LU;ecFRQj.G9ur@@rteMC.KpW]t*B`3[H5[Z1jEHdrUu]jG<D+86i3Re&\efL,rCg4YJN_]fT,n%S7na
%p:SD.R\<*h2:%42fnu_e'Z5"6&>D,c1kkDs[.ha`$MNQ^&%jrUoJnHPC//e.0b9k#g=ZQ9h-]3/]\tY<h%LL98o-7On\#/5q#^&=
%0gBjUjZ_^\B'aAlXR`K1eqD>n/!SPY&8JV7CqX.#l+NUdgWQ^ULJT/5geguIhSRjiN*_KtbZ#9`0tOOC1_e>W"Or2Qg+!G9])9]<
%I;u`p<!@H5"c@b9R$boh4LSsEOob'P9/L$<<A]4J(%]Ck9:I[`8@M6Ze@m5UHV_5aX-pb7[Sr#`GcdbFC6&h3'iK,9Qai7R?\;5]
%]%YXRo/(KrVP1[g\`/5J6UudnE7CFQ0NgsAm<h(Va`9p?`Sj0LaIU0IlL/>WK1V97m"P\HrRNg("kh_U4Ef_`A[`mKah7hN$$e%<
%SiPWT616k]V'De+<CAH^8$r$HZDaDW\ajI[Zh;$L8@3jLOG9Pm?*Wq^V'Zr39OYZK([7an/r3o='d$-HpG<dr3E\WtU^?Fm7GBMT
%!=nm*W'tXf7Dt3%I'\68d3^eOnH[5p,4e6)\JHUTYnQ"kBfb_s_g,G9e;!5EhF%S9ZDsUAB_7LTS(p9umDf,HfK1G3NS)K$02\fc
%@,\e&8C\FWDC]);P5lVWSJ2oH.HY?;_VYNHjBV5k9`FRq3?'VArR_=c?@^8GQ"*,]ZV)"15hY[M80HCNU(PH\;]-uOO'94hlC/Te
%k.st\NYaLVS<l6`Lhl_G+&1S5<5Ck)Mp^qZQ:/sJQ(CFo1VCXkjmuWIbB3=gc</1hVR\IGn)Z-i0Q/1NK]t&ih=L%GrQP&peo91t
%NUqWg+uYEpHC`Gr$r<j3M;f(_7<Fr*#AK6OJ."keE/P4jRKS>(n)i`:e)&jL@4$a#.Yh&7gNV14]'X*JZE=IUZ8>Y18YC6RN3:&E
%.U&U',f6rgb7iQkS/o$K#)#O+lA@HgV!DHe\G?rtSQctIk4]_eL5QT1-+0o?33fd%Og;e"SF'b0(n_GK*CFOpUhj,cKBXB9ig67#
%%Fj-Pga:k1:ji"9o@U#aq04V-j#Pi3FU4Plnuq0qgPe2f,gQSWi""J8:,(PB_ebZQScq_/XFKne8!U@#%U.'Kn8U=LY/U.hU/nJm
%l6O(4cBXP/!GASq2Z7tqCU%Ip"2S/=S<uf?homRL`)<$YjO+-H4iC&Mr6gK_TrJrN>o'j$bF9<Fk-7i\7,9p8`nXLU[-tWdT?JlF
%)&5\C[bO<5B5L3Ie]g0C,_N%f`C[!!`ZXeM@S/[GVs5S_SJ.@oV@L.`"k+clKuc?:Y?`A:\D9&]Jh:8C[]N9>Gl^0Z`FNiidNqJ)
%"G!n`I*e'Yg]]\!FW+q2f8Vcj2=pXF4F##hEFJng:iZ0U./Q-?p3HZQ)f.i[j/L3iR&XPb/[dRYT5.$JCTL7Eg'rDDNJuL`>9OHl
%5HhS^pQd$.-Ud0%0h\Q,dDZYkhkR_,G,<%%P3'o$-A[5Oa7Zr4MBaHF(l9a2ZD+T)2Z2!=Y^`N"^8=>GfC7V.WHmj['?.$C=gWgM
%%=*P#[e*Di\9>elL>O*#ISo)Y[B9&F0L;qYHS$;B&jYn;/^6()U:EGYR,;m;&nMMTU6O!Pk2LoWUbeXf\Fd$A#&>B>j_q<3].!t>
%J?(.NAm#5\qqeV>;LGbr^Y-9eJ,=bRiiUs:Wt,QRf7*THMNQ$(B5!91.FCsI<F:_,D2Qce,Megc%10T4K>rbj">^Ucgg]\`M1uR4
%RpQu`*(ugBM*5*Bh`9HclhIlPg@n*8RHb(JDI#FG^rGn-60!hsTE$lfR0*`24'T_!_aHmV(Mtj`^tlS6(KR>3$>Ii:P]nI`4ne<L
%aPYg.5.sGa>t6mDE)M(M.O!IkMc8:L_A9;e#ILLm9h/0G/hTNn<c(^Y=*uqCgEjMS^4`A5#80M_paZ7_J?<CF@&FWCe/>skFCfSf
%eViJo0r&o(MqIpf1-i2d+5,+.r`PD?(d(Fs98Vt(B3*d;oYGjCkfc6'>GVSj$Hcf33M.mLPVZfd`W"XBP`:WgQJtG@l9MajnTR`A
%XjIu)91s.m=V@N!<0Mfb5(ds4ic.+%]mYT<+S\+Z_V;)RYGueGfH-gOUo_6jl,a&]L<!TIU=KUl^#9N>#Psha99;e3+NJ!HL7f+h
%`0ZsY3IOh`0q<oaH\p&Y6/fWYV=VVlG=4j,fT6/SRKKXX(sS"TSe>QE0Jm$32u!3[J*?^Z+Gt%*7IM$YC9K/aaXBhMN!iK3on7%h
%6R>pt"DKRThjk#GfU[_p9$Gbl>"GWhd%$%7B-IYI\4(`J>)9=sHC?Uq39+6T$UW@o8V;/3<_>b2>G<qopX0`<MHE^#=$D8)jbhY/
%7/Jj1\CC4/Y_DLXk.q_'O3Pa(VtKXO&$=UA=AW%XR&I'>g7jI%P-0e^mXWpMh0C+MF*fWg;TeXDAm.\r\o1#>82O=EhhW`_)+:O3
%(l7nN`<N131\t-M1)bspkP!n*-9S^L.>EmsqZ,r@B%^rE$cS"DBU6OP,bjl%@+'j6Gk8eR4F#GdB.n>'J@]0MJ+Ts74$jp:,^#&V
%;4W#/G$)4a(!$(H4H-h6fXsBC2>8\!ckV7$+0'WD91_s$.Y<E#cX%/?s->(&CD(=bL*S5B5E\kHU]E]d9d#;((h`VH`S^j\[<:3o
%&62pGK3=qk.8!TGeQAG(old,\Z<-S&M0\U/6Zo8M`E+)/o+$Xo,tgnQ!CKaU)pod#jpe2q+CB0F+DojtjFQqQO2Q1i5+Nka8K/'B
%c#1Y'ddMEr=pjg9dqneMS&2Xt$4V4<rh8r=Q"Ts*6`'nZrm_)[V^E5jn7&?b/_oVShP<$n4>N*%:,<8cl0d`r_:).p0?l3,b.1M:
%HCC/p/L4VJ=3;KOC/soA*.!gnW.V%^eFThX&mXW8QD9ZFi=IDrFN2[-em)V](5gmpklc/&QmE%IRHD3O]f<$g_X&M95*$SZ.V4N9
%O!!"TF.>E8W$s&B"!mhn85kGURiFHu7QCK;iY-TGAfa)+SI0C,;(gQK]3'dY-9"=jTB-jH^2j)+H^CiG%1K(WkD>XRW5e#fA[f+0
%E0uGLF-VUT,H</A5s;7u<ReIojPWT'jju(9:&>l56-V41/8D-s9e2-R.Lc!q"'bF(\)fd`U,:7):XX$;=?%FpHJq_4+Pk;dK4gdb
%p)K9UWl$VgGtK-D-KtOTZ!9ah=t++LY&;XUj7]e4rbo8HfTXb+H.f&7#X'TYP"*KFe@KMEa>u]h,IJ@Vo7s;UOD^=G6CP=Eb<E$r
%q.fosP(h0LNg@Ptie]h<3*'0'%G(:[Bd*/Kd>T(6GGXB.r+p*h4S9@<N);jRR:GA,*:u%?7[B(UkT_!VD`i5INQS:A2*]o0n1DSo
%)1*c<G,s#*.EqRU.ZcNNX;)CPVBDjoaGKo]>*sRAU.cAem;*0hHjM]]LplK0aPB4(V%Vs072FbA,_:51WjjL]dP5Vr(u^r7)3rY-
%gs=/rVk##@c#BGTCkXIOpUT9s83?4\1pW&/F_QBQL'u4)>(i]Jgs2sD`Ts5_XHCkp<:P:1MrnT>W@F+,b<7S7]ZTe4PX<Q3iSKJA
%KTu_=]X_D>ZpEn]U'n2W(d\N2]^p=tb"4tM@<s"n^D\"\"-N>Z.4>m@hp9GTB,tO\d/8'WoHZu;+S>;aOEC:<04GiiA%9/@6G13N
%L^(-]GNXf<_R`YCl+H7/\djMR!8S<RLmK6!=DN_]NPE:2Ud/]o+qMgidSjXX4NHO;F#,@OFG#D!9DY3og>oUr`&=1279W1gC!,7S
%lBepXIcI\F'FfFN2%Q:),#F_=;='`#&o#J!jcIoU6Y!/[6uD4+<C/'qJ0F)e'tj]a^GrmrY4L(Q#Z2BeI8/8A\o#h;>H/&1bA3dm
%+5ITkifFe'9PeBdQZ-IIAa3#&AYii1h6!#[@d/^uHdMO/mk&?jZ]/q9+5MQHL^_\M=aFLc*^&sp<178ec:E)-$p"K5J43YhS/RlV
%4i`OlmY4tD;A@;6)*bC*ScBts1saoO]`tIjV-SgO-#8apD:Y"#RP3E)InC9pGFnVJUJTD$qf/+Wf9l*H<D^j5*'M7G>A57l<]op+
%[`Qu3<D5Mbn%91130nj-:A-t`N2i8''[:mo_Lt's62$SoUoC8bUTkr["+*Qh2M?o8k4rDCc)a5JQ#^.)kXT24q-AZe8`ln["Q9@:
%gQHH]75g2%>`(V=F1YJbZmnPZr5!b2(*,GeI*,3K$@qD&heb]^#cDIaDegas*Z/)SL=E8m-R7p"AiinaY:Z<308)+,GINRiMnY(U
%6__4'6-$En@XS'5b-?nS=ougp,]X,IQW0l)kX)F'-ZgiHlpEsPNG4t>!UlB=Yp"EYhniNq"FI^\R4>!XP65MG1K__V'JlNN1U&KA
%PHQDRFQ$Lq1H)ej,J(o#+d`_3Zt[^g,4Y1+G)"OP,-2&%>o#^di7#c.o>=c=LNLldgL\62iSC6]"eFKp.'>0-l8FE;bp<6VO@q&#
%'I"Gk-cP,!-K"8T7(A$fR@HO)e0O6WPUVWr8u*>gEaaO50RF=9SP&ZT<hkbn\((LN/)Dsb%^)i+QIb::,C;[dT6u9j.!^ZDAK1j0
%6T!B1U/Np.c_ON7-tQn#c.Ve<pD`mG_(R@^<tG@NiPZEYZmD6H9]%Y*O:WWdf@(Ls+P;U?]U3r>7\]GlNJZg7``hoHJca`Rb@?_O
%.&cRYhWuqE2#9:)R0i:4gQEa?ONB!9Fp$[#i5^_-;:NupEOZl2SiHuR]94a*kA2"7Xb=G7,54C1="NL5Ja[k#-'(tM67d<k-otPS
%/LHT,Ei/)AVUQ:%G*"-836PB_B#*&)h-6IX'J,WOeJW:q];GRFC*#J0B`r`\$r$B06"8/`fHbM(0lEY1"YnK#6:!Jmbo-_o)E\-L
%CM[i#TIJ`_]#PCe8fWnJH94!LSO=rpE$_5@F\LdVO0Ecsm]k^2n)%?\6B0?e9k\XQ=(c/&Op2Q<+_YC-SKprqm(@)`m2^H,0XDlf
%^.#L(DIsrKM?[^g7WAdk#95m67QF&Og=^)nXZd'AH4j)9%1_t4D<hbPmNu52"*tLAZcAZk8neS#]p2%1B^]?*1Ap/m->I;s""H'7
%d4;Zh71eOnV,aC_2?N,J7,t^7e:B837fuKGFWESj$S3d2f:29n5`eIJE?Sok_UL[b(S(ZAM.3Lg.R"cJ5*^.X\n::bpbULl:bJ"^
%Ce9L)Nj0]h3dFA:D\BrJ?5Ao:/;NDZ%!;jtZY_.(Tu+!rA)]Q+q)]++T:FQ,iiINGkpg=<YDXbDY'FrEJds4BV)SV^\euSTUmK\L
%T0&\a4Dl-1;:G+5H$Snl0>O(!(%ci*N=d`B3CM#;@G\sM.she[.O71%Gk]L@m@A+YWOm%(q])i=*:F62><=o]l+>3Z";20o:sa/?
%V3n/ES<dT>CTZ6^f*Xch-)GS"1g`QV;eb\^;B95X7<&P$BPh=]moQ"]Wm8/X._JA:L]iV#E:.B$Yqo0p90aOuA+]ht_ni,[L'_er
%WhNV'."O$=U@>BT%>5-62laMU77BQbKWE,gWOcB9Z=;L]Tb<6O*V-Q#3bWV/PSorF7A`D)hWp'&?X7@;8Ihs"V`WLg6u`E=Yo0uc
%#lDRq+I:8h,o1K-CW_432_WCuK0doG`T2r>QC_,69i7hJ+2-gi@g@L91oX)UMcsq8.#_2mW5ma!0jXp.:JJd$VSJ]Y5H]2ha=U"4
%T\CJgbgV+1nsr:\g5OQ.-mqhJ.&qE=7HD"4-+traoS;2([M?-Zh<0([<&YC5n]$44emcf;>EL6u76#M?nmG.5%cer`FJHeMUB0Wl
%RTh$P%Mg'`>]D!aDQer0Tn(,u[/k"Gd>EXf\2o-4=&UV(-X.b)&ShahICV9GU@ZVqZMpC"=B4IY[@Ut^;d7%PSYB27Zi.,dX4M0.
%Y9:E23BFUTcH6G;>QTVZdS^.G4De;he"R3$g'dNCi-A[\h(1l*3OB5(4"!HrEG0)PdBUV)LI;F%6k'm=[8g=%A4IiAcBhEOq=J1`
%inDoY,RT`K?6TQ4BW?HS2o@U<GH4inF@@WfD0'_MN##[q4N(l2;th,LdbYep_<#E/-a=F#RV+n5$.\;bi14NN2sn%f(0#m,5;A4i
%Gj%Hs^ViKWF1'JUV_<`_E5G-310X<@$d(D.M8Dfu3"q#[.Q!J?m7P%i[8'X(ie0=(TW-O/VJ8!-^)Q@,P7:0M,Te!e<g;W534plL
%<#@Ka[]btFhP&!>%:RZr`=\3\4AWkN-0mf>LFrZ!iS&S'JI6AaVrbaVkXt6>h>j<r=jMUh'Ru(Y("_,JR,KX:i`W0kWufQO_jK:i
%B+JaIkNQR*KL45W;-Cg;cu>:eWHNlTjdbksfr?n=B`?ChHfbo:?XWm`Lan-M^8\,,n`D/)$q_:4MYSfSWBqHL5[8=^.>\#bZls0p
%Y[<ca#@e`F90!E:!I.bn!#'2*!)6`#hclI8$T:L-.P^&;gC:O`'S-(<N?.f&?iAerS/LP?O<\en.\`c^#ur"*'f.cNMGEQB8t7_b
%QQ]@"8+6!$9^N5om47m!"0)Wc;!$4N.`:*B,V<=YS8p53MQYM')c9N7cMc6TGj:tj]&kShCPt[P9*^h5CcHrcm-kp'.J-XTZ9's(
%!?.\,LgkR,I<P\A^i33<Wf@<2]R)'kjp6pmhM+XYAFi(/Z)$B#1^A@L,YIaRBdTj5W0J:-2n</r0Fci?M29H07'.oteVggJo[CSo
%"fDYdh+u6^-XLbObD$a\gGKKYY)=Dg!T00_%7dp'KY7?t!J\*nLDQ$deY;#$>.L?Y6#^/lMHOpO9[7$n:@T,G1\W*q!>j+@P%s@1
%d`W)G1%L`2Tm39=W"JBgWuCr@-T4B#*l,sX;h-r)`^`Fo8r$;%hhFRl:!5o%rBGan2"rXGYPV+(q))jd3bJTD86'n0j(rE1TC-I5
%TnGC3)MNGRY\G:^g>t-^c5*l=XPXdR\[*@c^.KghEa"](aFlF$LrplD[=BN+i-f?*<YDi-!4#X#Ok,70=8#Y6h6!O_D2+bHk_tC4
%)?Z28fj!;:rLA^kX,mVYd*F$$GA+'-&i-[s70frH*J!aJ;ld#uTcgr#c$KA2%c@:[luPSHZq7;N5;+]1nhXZ(.7H=uIRQsF;GcY[
%qO1%S2.c'I(f`Vg!o@8#blSBOKd-YC\VVK&OD9"X8[2.<Q?a^6(X<7YhNAMS78W)5'3?g&&Mi=GP"cV!LfGfq4"_e^-Ir:$\a8N,
%3XJ.TpC_V4O#0]gB\d2i"r/`c.p\`GOCJd?N_+-jQW;ntc/.%b4MN\34s&M*f_:\j:&\VfN#+M;oT_(-lM^pVF5J^f=3e@h<#,-Z
%P]IhKq8F,[O("QB5Q8V+/UnAkgimRi^KSK7P[p@TOXc;.E"GoJJrC=*]lF*TaA:n;dOq35J6+6b\>Yj[aF7DH-DM%ChWg6K22aZ.
%>\Tqe<sTa2`0Wol"j/E4%+X8&q(VM0i#qn-_N<X!YFh^-2h2#2;i%`_GTm_#A/5cl0!ktsNTqN=r"sF1R>N;>5<"W\V\=5h>Yp?!
%Ndq5W^>cQ=TQe20/ns6Tdm9Z[>:REg`Ls4P$,b4nJd4gP(rrK:'b<uCE4_VAMO_8hdAS4:8F/@PaI:TrLMo)dC[WkBJMH"s3(;W6
%8e8H'2Ak6;Ar_>+X9OP"Bc8-hDLk^q)hjN1dbFXjH+46gD9*^oE:eVE8m8C&'e:-F."o-c!_Z)7_1?u"m:S%CS&c,N>0L5#.ifGG
%NId0dUO6(=?>W4[)(m1dMQst4CM,gpbZ']Rhc1WA"5#Nm:o#h4]pNtqO'dPK%3/^E->g/9i8\sO/W^+_\s/\?Za*ZOM!E=Kk.u*L
%I7Hu/OA6mmC3cm:I@b_3C=TWU<KdfY[lun&=VPFt`:=8I4Hjsde_b3=8-]tG<>$5b5:G*_Wh4GXU-pG,P]j^G^KMj)Nc\i$[?1Nq
%;%7/"*e?Yl9j+),#HH=Z:;LNlB+nNCJEeZUJqE3u..YhYH$G]K7Gb1$5XBlVV#]o/NgFgP)bGU=Efe.2<bDEa4e4Asae<eh=#I9J
%8B6i&JLfY1=GfD-#?,p]fO._SU^hIC.98ci_<5VGRYa!=2.nd1>JsQ/m,PCJ%fV0,\B"hS%'X$R4%Oa-SR$1`)+>6K>Z!+.eD0SC
%DB9dd%JEOm*[)oU4V5FEDk"Q\^:3_ao`k1e%]58Nie+!I;:H8XLY/d?p!2o(RkE#!UIUju>,.JG@pJ<.JLI0+<'M>k?`A<0o!Jg*
%lOukC]>u:KAOV0e@dtbT6;h"tVM]gp&Qp3m"e]>rOf4`1Kir\?*eJ^A(AgR$oZBO/:Y9iASZL%&6IVj?-/,boKVj^7C\J_1DbO0+
%aC:tU/X#Bi"]H`;H)\\:gXC9qoFFsoT-0A2%Lc?]Jff)ZEA\972_u:jW3s_:fdmmeR+9ZE)OKjN]%LA(7oZ[inGK[peAnWpi!UC4
%bHR?=8,MbPk.stlH).RYBldO!#D2dAZDmT>]g7WmF).2S#EeUV9P?SPW<a-9jMUWqnPVNuXdkP<fXbn87bn>Aq@;`d"KH(&hXL\5
%6&tEr\KW&ZIVCDt6s>fY_.Q=oR[KBW8q?\'<*C9V/KOe[Ws\p`&=9=A17DO:QNu\9YmG&:Z-kH@mhs_>'=pTY"B<"OVA4FmU=n\r
%[%Hhg+ug5#I+FK$Nh-nb;DZD&8ii\>BL-mXqPi";3Tn<9<Ni1o'?V*<2="0e<!k+Z'"e$U/\&DF(V"`_9:\!g0a#o/Ag$Kol&hXn
%Zr)Q'K!8^SJOI%<GTLR_.[AMZ"!i#1b40Vn2jF9c=)<kI%tH&:&#*LSD%7i);G?I7pK+WOi+4>Ui8%!g(-LAC/Y@@-&M0gh@S\Rf
%+Y1qTJP3rd(/r7]&ZlbA&N16LOcSH\Js[>43+f'D)Ho)oIDYsi?FFA>[,;s;Z_X(S;4C<5:no#H2j4WUV./0>Fc<X3VCQ!R67j#&
%+Z0h)?Dd$V;L0$.N\hbor,b[T46<$3V?>I%DN8*Tq_(GZoU7M?j]j>+E'^W4^'`Am:Gm1nmI=dmNBC%a0aIj"2PF6Rkh"bkF"'5Y
%Ua&P^dfuDT?"t&1>P_=W]2%#W'_l\t5j$%k7cj$E;]+[U`TESK#'94f[&"$]mNWf*oa87Tr,ccBNgFWO6S+XA(Zc"(n@D;G$WQAd
%=1g,4mg3sbcgL&^$=O[g,g,GA1!?US/#:LWj2(CElPH$k)>_Ulm'PfE.(YQ&St$-3Eth3U<5'Xk2gl1J]34-PGp]&qDJ`rTFX=``
%1W`XWhLSh'PkrC[\/$V+K+[!dJD8M1"NY=Tj"Aa^f@"jm$(@UDe]<E&^GCX6/lAJf@at-_`VcdoUI!8DDlD5kU0L^KpA)?`3*)3g
%`K7]GKVDB>E^:>E8+k1)j5\<JTFF=i<V[anfj[9R!DEg3o*E6+/i%l58I]9OX@;Mr^+gJ7DB&))M&sNuHP]\!_Jf%aQ%I*^*4sN$
%i80c)LR*gs%QL<,h=S]HMg"<><"h6$3Rf.tV1(Sa3!&l$@;6kM[b%b@R(?hR4o)@nS_4D5CcSghWW=R!&gCAVcHTaA:]%qoisa9l
%N2WdDg3`<R,d@(7aCblX<Q,sGGZhih;5,=4_!i$g1uVYfDeU4D(.ion:!d;i$`LhY+!T3ZS?!BpHfA.p.AZY+;riE$95;Qg(n]*t
%K7.qYhZnp*,1$)4^29:iRCs?^Su$+':ga]`J;F'`_^oum&@mCT2U^8!U4imCoG(5/gKRFi&M#AYM3s4EW!3o(WBi9G>3f",b\.+d
%PfhPG=h+JW<iXm!8f"\GML;PFHYco5*4@K-&IZ13+:27<[)*9*PBK/H&"\%m!"\Z,.,Br-Dm//2UcakD@qr7T!amBde&c9AqpuII
%:d]5_HP/"ZF8it'+iKiUBAHlPiF,\Gcrn<Y,5YKU*V./IW9"8E5&TG<gDC9hN.J6>ec'X/#P/T+75/L1=K.'9d<K?,%_rcu-]X8g
%a+%Mi*ZQ^3@;q#t0']>ug*b_eHAoV@?B1rMSomRcqat8/P[`p\EC@_<!o6kC2jggs>-A"e0\]O_mcL`^<[]u40<Q_=(?HZO='PI8
%.Y+:$p);Eur]1@'@]G6=#e.0U\?\XX914[Y7&'n*>J+:9?<(O5q1pZ.9\rRiKAH7`QFi_M8:<\UYq7P\9&0V@FTrRRif\.JUq1Z_
%W&7!$<`Rn,8@E!#<;S`)"hfTFnJ_+>Q<fD%0%*LOm'NB[7sqT1H1t..I$:+R1bj3,P#P]sX;ViDLe:lkap&:XIe@p.FZ)N$G;Ia^
%1T#SOY]sS[*pg:1TEoPEf*E3tVlW@T)s2$,CBXRT-HD[_S/.-%FtGGt3KD2%N=mD8^h%GN3@9$7&s3!+[7rSWp$TWi<ICl9V!OY-
%=KW8I4HR-<UJ+AtFr0\Vb/*+ZM*BW+jW)2(1JV9nGt:Kfjd7m9`*$69TjO1TT+t0;3#uX?pZ2At7P-.KZ.;Br@Y7/3l_&@>q'/lO
%*iLIM-rS(UA((_!%Pc-El.1]D,i&#3&[<rf8heTI`rN>95AO"?W#]AG'V#;[/`&GhPT8@IesKH$GWhO-oF`1i8#>LFX6Llk9m$Qb
%^'JU%$6R1!+&r3^e13"UFl[YQE#%[AUNlO1h[cmcq[XeJl$rZ(IiGcW'.?:3n/b,?4jX,b54tQJl$rVtJ,\p:qk'L5"hscR^]0r+
%q##3;$'kAHLS'25AhLU%3PG40:Z3%p&E1E`rpj_%iJZWLgBZ%/Im2TY$qPF9i6*g;YIrL8#`h3M9eXaPe_!$M"L^SJ#](hFDPr2K
%5S4R'm2Ol:0N%3:-J6R:<Pj3-%lb';bb<b9I71>'&RJ$"QfFD0EhoDY%q*<^*r)@tS8;E!S5W;sW!CSOE"I0K$;>37OW#<pU3/>\
%!3$=l=*-?)mVuKMW<l?"o$uC;(Sg8V>U/Mh;9/F7q\t*LQ-^0$\c?*eZ17;Kc+j8hDuS_1rS>6cQ`$FtBbdB;689#\j,XBk&Ht46
%s05[_<Rh'JiEu>s/k:9GVPZ+rF!_HT:r,Yr_EP0eQj:i7j\^[eVR\2MmsoV[7Z-'5h2p+_`u=#ad$[rIpGtuGM8D*8^6$[-_H/7q
%B8V2tK4^,BqIK6FHt;=c.=oc^`g-U=.Ofr-P`q6Rl5`6"/.o[52Z1D/B$(\ZMrJ#Jb9YN.5P8dte__+]R'Ko.I3XdBs7r;epV24Q
%VgnV^(uoO`mj/t6oj&-KDu4YP$fC%"^\8@en_;(WmBcHhgu<O;mIpc:Ib.D6aMjr#qY5@]kB"*J\lY*ZqA/GWG>@B?;6H8?7",Me
%1".04\$:kK[Mf(hYXM$&V/NP$YhGoBGbQ+?lEW%I\5$a+nr%%W=ea2a#.<k.Xb_9:V0JE;fXi@-l91Wd&$K14(%nQ^f6/&^+d8su
%@#f5"71auZL%M^LISEUepIclV.[*e#9b=0\UW*dW,t][c[<=0eOObE4XB2cF8X/\5+c9er%H6,Q+$4:nA[VZ&SN7fj7M!KLR',R.
%'GG2ho`JuU2k4Q.-Nr<Us!I&Rmb,4m5'GRj.#7%-''1WuXfsJ`;$)^'RThu&>`fHRQ;Xe#_hQc0>r2iB:BqhFGjIeQ/VYUb/h*]9
%;MmjCXPaVg"#eXo#*HSBP=0(9NHmt%V7kP2I5@MfrA,NVA2)*!\Q1sH_1FsgUHS$-M#WX)@["7^ai\E4F]dS.,&1NqP1gWn'n)!7
%[/7m-G*Cjek7NB\D`M/,L)G/,!\6VX-p^R*h#b']DCXYT=>KjG0R5u_p2TsG"=NMtIeMR;cMQ4F(Z29SpH5*3J@TUk=\Q-Geq4W%
%Fj\orQu6`SV4Ngo#GtdEBgEUpWPZ?p3ka/k]6iao:HA?83i'"[^m)d1C$)948:l!RZ>p2c;72`=&rsYie6mUdd[4XmHN2u7+08Bi
%5%OZ2Wf\:`ad<nh6DERTe>;?XK>Y,qBTW`+7scl]S>34JQ0b?[nCWMgF<)7/=ToR\lKRm<HRI<3VLGU4e@u7tHs,0JeJt].>*NiP
%8IEpV5(-h-UXEM2_EKU)?Jb":q[+d`P34/lbKb+'=7_/`+=OlE'(?;eG#9^+'iGr%dujcs?ZDAj_$[1(6O9G,0[[]sCBVMUQ%#Mt
%>c!Snf?5L5/s^ehd0+0n5693t*kk1GeU>S>o(D43Of%"EBppQJb-XbJnlW0H'HG=?c%a?=%7QeE/->#R=hf*e,J@?nTa&2=1_mDS
%MV<TNc#JWh]E/=D+W(Q#US@7;\=?cK'"[M85BYdS"<GIf-C\J_"t/uI`f\7kP]\r28Ej[FBX;q_Hbe=ak35Fc60V\.3$rA4X%+_H
%>d;8r1r6]L;XIRuMLV6l:!N?%n+QaI&)LLr?+3jOhkd!P#Y*<FVE65^dNGJQeQ3AVZC1qUKCi&f`nSj0TmGS*_k3r74O!]C5'H;L
%KHLEkkU8pP\-:_eX$/7f=fnZ,7H*<$$ej`a;UjDhrLs9!=tSSqoWb/DU5`&8/ki6Q#V.K%b&F\[i-a'LIsL26(/Z;jqf&EL$`hHN
%*Og7gm'2TmpN#Fa[:<pu0;SY*M8gC4Q1`913ZGGi9U[c=)<+@W'.&>UA)MRWIIP%O0mBKp+KDJfi"VD;9l8`JS]jK%b%WkG]rCSg
%jSj)u:p7B-m[j:=q'M6#VS]QR:eRX5!X4[m2%4CUAeE8E:&#hN$:'nrVm</S-aNScmN;>aEGpJ5'boG[UW<'\0Lk<&;/^m%2HdNg
%dNE$hlu2ec\(QBp]U7^>rilu7-?N<jYSs]=$!WXekn]X<>e.@s1*u-_1CNP'=tF7%WC:Y<!O"B8W@pC.Yldc.a&*5U20+E*Q%>tn
%[Mi9-l9pbAhHSZ,q[C-@)Wh7Z/lL/o_0]9"GE71A\2+_a)MUa*+09GmZBhFrfH2^f[S4U#U9<@KL?gQ5l=o')>2^HUa5(eY4`KVA
%Alps&fp1^2>kQZId,<l"6#EsFNNPP)UmkfACdDTV(e^6$GE71A\A>P<;g]rra,drDVHX$+''a^+G=Z'F3NFb!c#tSaIf]P5't2TI
%F!!L5YP=mMrN,J1)?&[MU9mlE"3DS!4h%`9aB5GC`B^WkF:kDMd\Y#^FC.I/mBPnB#LT9u,Bo2ss(SoT?/2G(7I3W1_W"(#P&ZXR
%8%,Q()l'DC.Fc"+(I9(sYX%mI@f;V9%QV:k!)\L"SO?>0Q\mM:,t\IRW!R[F@PQBWGK2gQGja1lb3tcR6D9=Bl8<)DRPF[/)'a`b
%?R2lN4Ca%Gq/'XYIqccu6pULU'1N\_I4<Y<LZaTP&pXOrna.HZ^Go4-F_t6V^iGphJ4>0XU&a>K%Qj"n$62n4f];/D\g]to*Q$#\
%@+KNtrG`a=9ZktNR'6AV<BpHpqXGIR[f#u5IIq%7VX=7DocoI_b,8XS5H0,0bABl!dABPc&--CP,(U@Ap!cQJ>o!/gEcW\2`?<K*
%g0$khM9tnZ>^ue'<t4u*+^[+fc_VdTF2d13>sZo`-b?h;WWHt;5de^.mBh!!NkSAIRtRmceLY8%M,uA5=#.)R`-q[6@t-#+o#KFs
%HbaKuklS4s,9RjlO+_8ALZOuMk7`4oUDt0p2[6F_U0$168j9A;mN28h=8pCH159&X9*#Xu15VPgWs1Q87S_OV0Zmu2n0$,F>;UY'
%*t,KB-)VEq:A9hJH'Xj14*K;Ca`TiEjg#8KP;pMYb*3Np8L[TV(GAj_a')@!QF`2`00JqU>38./pH5igfeq\j,sl-S$0J;GRbg'9
%#e\Cb6WYtH_crL-"Tumt$M@bNma&5bYSO7'Q3KWt`%+cj^6B;(!KGP[?kga]^4pGtXBcRGOn*!llgiL2i9mk2IH/W[.O08-oKTtN
%oJ\L*-bHDPUIt`JO92(5HZns:$T2=^<<46VBqB#WKX[U`l>cqXe*'5I4a#.$j_*"]PM5JD,4q:X#*iuKY=Kg@&frF$Kout/V0>6;
%(W(CCj"3cuajTaj1_Gon?F.BBF6WTr.RoJp/30!_OYd.$dRp>*6X,%+W;bo4$(2\_:Y;KVQIEQ_3g=LGbVs6!daV"sX*i>rP*U-P
%HI:rdk)Mt=-D,@!VI+GLhjPZ7Y+.o6<2c[+lC96\37?`Eb#C[-RGRr;$jl]moHk">%>!;W>*Uu.a9^$tjs-ObJt=GNWETfBpZ7T\
%Wd<]b\h0!$07gdTlp&Z%MDq6O-S:==<Z4CYK7$<$,uc3+S5B_:R3W0\9c37-79FUZ7'=VQ@ri?Jf>BASqKS1'kf;+pUe>!1_0bfi
%"<e1r`+p6N0Q.tu,b:Q#.6XM:M<s,Y.N1sFHMp7cJNPd,1\SRGQe'KY4iiiDAm4T0.mK6[c_Y_R1R*f$m6$t358U>>dPJT-r^C\q
%>PdcV'K(@V:e,=Hik#5&XKJ&XgcEtH:(Hs);E3!s$=u>qk7#'*lB"Cd.Z_0p2L48\Nu^<+8/"`n,tF:N;;k`OU?M\Z3N"fcf`s*c
%23]9H;T;SQ,5]^uCF"%0Gj^1hY/3/lEl<+cJj'&q"doI$QEGD<qEC0\(2ER.$<>p8`Ru'l\dZj)+Og"6Y&7edhZ)5<haS&09lHhD
%ZuKF#Jk[fn`*dE.BhJX*$Csp:.4Mi3=TrR0e>%6Kh.%NhDE)H$#IX"<HH&D2h!+ec\Z<Wp49i2Q&9S)W_#,q(.Fp?W"Tl[5_IFZM
%m_j]t]-PaA:Hbr$O.qeke+42aR\9q6$0Q"j5?*nqEg=IX%AWUn(S:K]/^I\('t6&RhDY8akTWrY)'aT2>M`&>ZS7bd[f#><>&^qh
%-i!\ONu^3oA=FcNOtrDZGqgudPB"G4):0chL$,ct<$\4Yel7ar^?Bq&Kr7+ZfH%kL"l&_,`We.)pfGCf_@m#$7r'!k0L83>URXO:
%H'Uh733<<jGjM3')q$1#$pdR'C'i/Tl/FgDaQYlX1f.F+Kp6cG!r]*3,KF>ErldmY24P]Kd"mmJqe/+R1`(77mo?-nkSBM=MLo3X
%Cp'Ue\r[@ie7P5]^3f4Aa%`g):h@'N>6O`4MP&P=3T.HPg:<h_bI;e,UVICee`f5Ds3q:7R[-*:OD*+D\593Ad?::'@p[0$B=6_u
%%D5;iN69`=-nHu(S$!H\p[5SQ2HOj-9LOOlNW</.Puo$Wl-n5f0(Hn;lOpb&Er[VrV2iu?Ss&JZ]^X^s%m1#bfsl0P`ccs-^jG)+
%iBnA\/-P;6kdQpK0a9dRoBa5AnZ`TGGGE32Lh?-<Vs/b'Xq\4Cd;,s)=%30>>5R5EKYp-4VKJm67]TD4p\eSDD'#k<lGj`5'`EG:
%aKhjX/Cft669l`2?Dh5>fYJl1Xl'IM=$Ij_qr^0<BW>og%O>,La0q!T/3c99GF)d;.Q[N[P&X-oLN!t23[^oP<R&'iMq>LdmXkbY
%:OK/pAYS'_'OOUEII>q(*/N*]3Oh)9NN+aCLpRXk,;BV2&f9R9c[G;ul1>ifScK)ZE<\Tp[9]tR^,]JO1:EM;_0NUAicA1<I+[=W
%\\7':c[GFKYObe2q3?51cDU9RDN8C`]1(rW)('b=41i%m-Ee)Skl#!54lOh-LV#R8;QIEE-o`+t7M$hF\F9uhiCQSUFE*`+]=9Z5
%q\Pn%BQ*'cU5p,tI#'fW;\lJ^So:qd;O;&QU%E3>#qB=U*MC4C&lU:ScloH;iOP!k\2mHbSo2B[(_4l'Y5]IOnpB-#ApR.X;tKt/
%+^E4YAN#&$q\L@OBUr%oajJU9Kj^97f!`Mq@hMS\#V%:'-l';fa!`Z]C<BR.6V0:Qf'f4-pjm@Q86,qNnS2Xf_$DRYP3D[=_jnuK
%i_cgfME1rtBN0;1[6%U)NVg'&55<hOYi[?;#<k>@Y98b>>iBImnbK\^R,kQK$<7Gt<eFJ=?Y(*QJF2eIqri#M<$'L7pIsuW>YP\\
%Zs1YO[YN"pab]U?8(_*Q;3jj,<eP6qGj^1hc:t5%4;\n!n/M)fbR/5sQS,&\8Ko/15lf:]*r&)hG>+DZOY4umW1fDY\g7qPrNSl-
%N!eC<k;rj6&S&)2_PZ/$TUp.1b?MO(qD4)LRn=lE0RR-3>U*hCd7L1ibiI*!mEtG>7?b@V@thJnUSYqhA+9LC2*nCB'Fg2N/mC1)
%aZBM'[<8p>CFUG+5IjbOKcb[6gL(h&d0(b\&T;^uU2\1DA=Kkk1X255NY4Isd[TL!#E39RXkZ/8d0!IRhrQgpDs$egE.0+$KpOiY
%H5UCh[^&'K'_1ljk:mX0'%+d5&O(R*K<O(3J:EOH8e-eXL7nrgm$_eWp=o7)'OcY%5I+Hp$H3eB\k]IDZ<7dD9^6gHbB*DNO+*;\
%*k.TPeij%5q$MCd0I%[O9O2k-?\A55nnT]%ATl`"K\XqlhIf2Aq4]bY25GF\p>ED/Zt!6I3bEDk+$H"Q5&M'qVL4<bk'?h$eglpK
%1oma67pE*`hE0Q&g'SVFd\=(srNAB\FdW*"[\(\9?7jDQG-5;4GF>ZC.@1#mF.EcJYCXb*oO^>%WX">,"5<>P\)./5KAQeU;KGN=
%E!K)N&SIPXbnRepA]-me(M$H--ObtZ:bD<Q)nt4n1,D:DpY5uaS45o1goDnMJS';:4jhd[%J;O2;cnL<ahtNlHZctZC;*r)C1:GW
%2!nq:IIt&.c4ZqG?=opld#RO";.S`q(WY*r!XaI9=Jm:9odE8YV&0r@00K!V"34?Ah.bkc/GVUTO<e0%,T`$\]i;j6`GX(JqRr($
%lLP!k=M>sfUe90G<gXS/^X%U2*l>mWPnNhN&(CK]*rOlf-CiAZ.g:kWO^]qGn.tr4LrJU.kfu8NX5%rqX(\)iGb4<r17p`&Z,?Qe
%NTg+"l]8%X*GWZ^>kj_5KS1cD'FYW=Pp6aW`Y_-DSO%r-hG;4GS0^<pPo$%hrcsdm*E)/YWmDKNcntC\7#O9uj%-6n<=p\K3eVDN
%PsdtY$2gV.k-VKc[.sX"?X*QfQR[)B&CS9l]C?6_Itd:iENoCl9n0.ho"OVb,.$cc<]4A@IoG=(=K&t;nG`M_To:=`mm5/UY__N/
%7+=]NXpN3t$CRG"?N\C9U;<o=S*6N<X*kV0GBpsQ+XBpJE\%&69(K=Or_P1L5W$2ia]C(iUUB/O/bR3B7]7l$](r1^ql1pV6V3.F
%=KJ<dHDDV3=^j*$i#h3B$I0iA5p9p8mL2Q:4eZ%]8!IuL5PBls3F'u.>?gDncb8VS5D07%_G)Z?<l@RY1B4LlNfq(:s$kLC,BcaW
%AR#8?,AroJKNa,$CC*p@<2S-OoL[4l#Ae,4]j>sMO&L,-dP^_uc+U-fT0UY`X.bgLc_9LNcaeMh-iRXkY)<FL1^bl_A^-'p4G5NC
%[3_US/dn"*T;f@5U%f[?m4UTq#HBckCIWSLF0B?Ha/_5Ks'o7=5DP\C+@=eK7e>e?F)&bEPV?&keTAs=K#(CM.FK.4'Tsr:L==k/
%6<6lQiO/AuARB]MO,M;?"M)4/=8o>e\a*nVF+P2+`b,//o\9GO=2)YDUN+Koa7@iUkL=NEL$\Hc#X7FFL(SGe`sh_r;P@-1:a<;S
%NA`Aid9baba8S%U#Crq)YrCO?RX8%UJ#q8U_4(BDC(<5ob26[RrUm5%/p<-;c=p(]otqp(!JId$2)eNk61I^=L7.636_/G#?jj'g
%$d\dFH7k7[8BS!)q[)m7`+9Z%T:\^$I1)1u?b`1J6[Wo2Po2m+"p\:T4"FtJUXTULE8UlYU=dG>>6O-/W])O(fi*Bndn4b%IC83D
%[G6hpEWkQ+s'h5YO4J?8Ft`M]3qpssjgn+;-ruhR4?u>^4uBNGE03\+/koG(gO-<]9WoqsdHJ2js4e]okFc;0YIW4c4nfWR3M:,&
%jDVBeE'rjHofI@mB_..u_EXHcCFt?W3`N"Ie(*c'J<+@]N7;rO*Vu5jB$dLtT;:S+G&-iurNVforWZ]n<R\Wr\j&U3[A\HO\MW-7
%5=5)^'fVuC2<[PFE0;?TgrDD3.$5/]n.P=@P`VZqKW-SR^Q"G>Q*e4Ic0Fd-$.W/LR<7;]r?bNg<Y6MY=(OqO$W<<G;`,UIHBsF<
%q/`Mp%*F$e=e@mgSto.,0S]ZSq'kfd&=/4>C!hMnRb]/.f.pK@%47U,[MP_qM'\C<e**@?N/tV&'uegfp6,?,EnE&lc0GOI.m[\$
%`juIlM_5Nc4SreTZg`gYW2ofeY7`^f+^I$@^.GXL\C8X2a5g@6?BD$!4lfg$Hs8Y\9@B`Opp0,,Ff5uZbuLrcXt&uCW3Dq+GP()^
%E)q8`Osq36oT[O&Wid-SN7de-WOc9(QB'V700K!&KD2Pb;`r9D=IS2q2;:QO^N81b4`m@)D1cnu#A>'l&i6.jT02c9@l@2aG,`Zl
%@1O3S-VJeCJPW'0ZSmDeI9\ou8PLNl;nE(dJgWuiK!V0>Id?OmP"2IA10`s;`_tt[>eSo^h8I_b(%^c$`JZ!^c]k&Fe#1N?kd^;d
%<gW]NQ?>?M43_aTDb3`7&K*uh,;VOn>CD4ED85@1qWVK35M\o[;Q3/@e$4B[h/7o3BnSo;,3?@iisF>C1prR?Un9dDn`.@G:&hVI
%)gBCIm5$tDLg6\kbo32,XaVFk)OAZLT@=7m/g8J8$hihg4nNU*;Rlb_O8>2U(.]#L(c6o1c%#BY>L["a]V)_IZ_^T^ecCUnIP*3*
%850aQk:aZP7^X-'=NS\o#*.$*VE:G,poHV<r(9dbI3q)._ME`0Ua_+S5F:4Z['E:4lW?H9c5a$l/Z/(XdSK#kGIS=fPDI^DMejeF
%lfd_?$#,6f,tR94UG`]cX`<Mh&(71t`"cOFpQ'adfY*GEMsC*_]$s@k".?uP"t*[l?\\h+R2VkF?.&P;1&lr_5#ri1[$>Hf!R`Jq
%>ZMj@F=),7^R:nh2O#t7C?+ljoHS>T"[CBkBPHoS2+=ds-J/3W5?Rf6]bK9D1oV^%1NYC*=4]>I:Zk/QK6POqh0tcc8%_%_V*\?\
%P:&qC]h(He[D*(9pR/A\d2Pq@1Tjb8Bou*+-+`pMAD5.&6@/Qdc_\s8KGJ0-)Y;)F\F]D8XA<6`'S69Q;nXlMe>5ESpI0uMHYDAI
%SL/,RO:B%eBm*RR-)_YFJ*LP<XsR#^5E3Tl8<P<^S8$L5C$.(E7$+j).k06L0V0u<E?akCqm5_=5Di[CZsVOMW=BK<)B5*;PEY<X
%KE,pYXX'Y78QVa$,&V[^k'u2oI?MI&9agFEe"@X#35n\.H5#i!D7s8Bb_FjW)iCuak>-F;4oa1_l"tgWa$%,TrS,&5cM5<?kr&jc
%`It8`U>$Oq];U4.g%rH?QnV^_b.d$AU2B^``\/-=o(')XUh]gZCRCc)D5*bWM7YGhKQcL(P42Wm@TcPmSr]_,8!T]2lR'4AW#"A>
%L%D81Fh^'JpfE/ro]\ka+t^_NgsZM#?L0fAr`+IHmdU)1J,&M/s6K^_gOea`<3jFEmfTV_"9`Y8qTo365Q8hjs7cQlcX.)$56'^$
%s3H1Brjf>]MrhoR5EArB[;R[)puH)`o.(V1aHo-g%pp@?d3d10R[s\JD]a?eV#7WeqBX_jQ\A+OS2+;CoM"SmOtUJrp\d/)<nM=)
%;l);\.^t>=Fk]J$\',fa2MbkPs4SDjD:>'uZtE9?XDO.O<ANP\*8F$/g?-QLP85>_2>Y>g:-9UlD%C`9o!i>,k@a0/Sa*''h`O%s
%%@/-MH[aU6Ur.?[q"2D#f=4!3rdFgd:>9q@5E5U@#nG^Vhs$89D0tb3j&cV?;H1/pp0P]p=L96QP&Rhn4RTg5NgR>VoB/X18P0\F
%(*0[8A_b_(i@<lO,8MIDZ%<qe>af'c\k_uB5OOs'q%:51=^ftMT,rb81:K"4r.J2c#L()tII-2=DU5nDftXf`[B5/Z.B_r3E593Y
%;@blu@6FOYn$L:jiqO5TZb#1^8?WV"PnaBn\Smg):-@o4[Y;;:IW@$?>!`Yg2/N5sIA8"_s$_"f<Fl6pAA8"ZQM7p@\eKgm(M:@L
%^PfHlMJZYoD?X/^m/[lV$@[2)*X\XO9!MB=$u%<"[O$do;U9snYhjJJl+Ph<<3G]kOC%o9^Uj?Z9>M:&,?Zd:FLoQ3+60DgdTr#6
%oU.Hd*p39+Xi[;QSCaK$m5r$Di+G*fn]$1Hp9?@0r)\Aaj;;-r6PYbB:;;TQbHn#$:OV%eaeM5`Xa['*2]6NZ4pRt4JfaNlR-@tk
%!SUH9m@&^'Rl3OG<27(5AmMP(=0LsZ>]^<%I]p<<FG7+UV,Fu>mf%`-Xk?gpZ&XJ_S(9gO](RJqZ.R6;5@7uV$SB&W-BtIo=%i2]
%QB+qD6U[6;k`mY5JnRE]/.oEoG&25@!D/08QCCcNC2%J;MgJ@QH()I*8;S&Zm,"?&r7r[A),7s40c6]-$p^Ofce%32dhk#@]Q!._
%FnJ/l'."RmEf*el=a#d'Y`IuROk4qEKL/#]7=11MIh9Wa_5*+d%5kqO?UO!M%D=alXd=2HUt-,Dm6Q1RQ2Mq551kN"3>[U.0#bAF
%'pS+^/lL)Tbsi),WQ"4,jbpH+N[Ju.I]X7-UBe5q0LJC;6&+_a;EV&oN+Phb&rDJrEmeEoR_-@#92@AR;=@!Va#ObkCmG>q'44bs
%j,gG+%r/Qr8uPjKWfE]>X51Kof+AoHMfAQo,G[.N:BcqL*HS)QlB3R)glH-OZYZjNL2b8q\^]2ef.FAeQH7n<-XDmI5K:a?Sr#kZ
%p/2[nN)ldQ#i@;'93YgSIugOL@,j,Udg_Kf@X2\M[i:rU\TDV*Q:`*5P,[[,[d08>R3pUcgRd$hOk-89Wm4UCTDCi<-WCHY0H.jO
%+L=Q#TT1af[+j/(*Z^;W3g5A1C%7t+gpB@f/k/3O6l_*TES`9Sls*hGhTXMM)_^!&?aIoSrEJbWV:Y/Y2r-+?'"R8G=u0085e#c:
%lV`N1kOBUF=kNh)JN;.@!OHU-YYXUc3$^N,89D")/lQC=9pH^IHY'8VF%NtY,s#It_:H3-dENl\Wh#0K>+N#?l9rMUMn<l-?HZDJ
%3]A,&>,K..5e&Dtm>eo$/Os!VY1;l`s.\>gnhjO4c&2H-*<'<YGUM-5^VK+Fk0`L3.*\Krh[nmhqsJV'`73ogfe);2JQcEIR<q@\
%DU!=lkf[7ROJX"a?9b3[j8+8u9tO;_DbClj)Ju?]iRifu/*A/!mHLWfcO:s4(/$6^m=H&uO]$h!4AaN,l5_Ru3d3O^##?`rH<`;D
%,`Ka^/\[04k'0PY`EKslV(-#AP8h?nDY'sCUU5,6DKk_!:eV/.g<)(%-qTRH:q(*g&Z69+\_:51UDQZ$\O'43#Kt'ii**Pro<j";
%qgBJb\$o[L8fo2;b0WRXNbJ=$@7-?jA/idG6<baiK:.6-i%b\$FPNHhioLMq\j@)cRY$^P",/fS1%k%_Tjuii_N*toV%C$gKh;+)
%2&;1Y;Ae$X.$N6TDd\0pAMmV:MHo_NkH<kMf<W5/g_ep4B<@`eAp\Ig&<2(?P<.!?ge.%jZSE*V<rsdFU2>ASHuGcCDXDPPO6Fa=
%Dc4-_(q_lCgU#m8j-MCLA1fJ,Y_]8V^.Q7BClqDt\d3tKZ&Xt+lou\+2D-C?Rukq""0PVD&YVSA%sE\AO>2sEGK[6^jBfbNSU14X
%hDeNmc>,ndEZ\RoqF8J-<,_)'lPWC$;pVl=UiOFM=s;=Ra*h4Ye+KluD;m\&Y,sEN%FGoV_.C"U[=>m4RD#$%iea8U=YjD/;K2^U
%.EA*fAC-=rD#,<gcNRM+bqMl-B&:s<DcN>n7]QIRo\(OrY7p-6DA&5(3`p!iOAtA8cJ:UD]4Qj=RG>ObQn\.u8bu_Rg:&nEIr&El
%LggHu9Q<j%+\D:fKcBQeQh2Aa$EN_tAc4N[H;9i/+kUm6*%=#rVP%)hJF17Y:%Dp@Xc/S+R?0B6L=*?*-/GKlc*O$*UA`p8YQ2`0
%c_O:[2rt=;a#t)!rTl?!);_]th-T+?D',5SCPf0r>E(5jh(A2c[.4i6*O\VN]]tXGl\RVF1-5"_&bCjR:r)#_\M<SNT0M_2kkqNJ
%i[1KH4P%m.e'_9Ijne%>O%:d@)r?]@H\q@$(Z+k(/q,d,:#?LH`270r^*.r-F:6<Z6f`_jr:#UtoeU0sg9lp1.]<=B=aQ<4oeR]e
%XDNqnjRLemn0^BVogbga#,5AfiV#R+7iN^q*qrA#r3/=U0m<qS4aUEXLcNL'V_(:tD79Nel*Ju$O*fi6s0b\WFq8oU#0!5"[!h><
%IY)t"p==[qQU8Q]*3u'@d^3q5gEs/C\q%=Gp@k1$Z4OtuRrXR]5,^s6Z;8g,Sr#WmA0K4R'XQ+,Qg%P[I>MUOHUKo*[fIQ7Ze%0t
%Hf9DQ`XWl+M=r=/d_>EQ5@7$a!oI%G5*Mc*[Fll3!3V;Q1\ZK,]ma*U5"M@do<na&Ts*o(dCGM,S46eDEYa(E\CY=uSMW]i>.IOe
%I(RU0g?%siV2F^WU,88K!gm5YW#$K;m7MgGjlA5ts6X+HXrYQ&I5dgK3%kI;"5N,;j\_<Y+97N@8IYAG?tdY:5Y?bV-h-#k<`Sg7
%c0X-5+ci]V*juBl>Dk;f4l'DE/q&pbK1oN!8c`_m?7o_uW43+I30T8a)^rLKi<Z+0q,(tY#@e5Gnm*A0/0TT#lZe]X8d*'p/41Rp
%rB_*)7C$&];W9,87V0l8d8K'l3D,(#RZM=fRUajYi%B$maT_VuO'+>*Tqo=eb$^T!$$Dp)%-1;s/PK^@mhOhm545UBqn/4,:p[YZ
%'UVp55C=%*9Ttg6r&cIWLkNF-\NVj`j*flO3N&9)*Lem[X5+"%5<Q:eb#2ldGcHN.'l%sKD3+r7^*YFug>,E4R]taY-%!aY#g*gZ
%M17sC]fJnI@:tR0qiR"Y.K_/;$q\JI@Kg>HWaJV0)<+7b.$%hK<_Pd0"KGqVH=nb'<PKh-=<E8ee)]R[)+jeLOi'hZ$W@^oN+)Hs
%#[QWX+(SJGmgOKu3s4<ue\#XY]G#/'R%qG5pG']&Z.RYeDM7FH"!]^nkpVU[2(O8>oHNq07^8>j["^dI&6FRA,YP^M5T/"kJ^X=D
%[*"k+E?7MX-PrSpRoC9*C4A=R>&fRkd=bAM]dBJh==0UAImm!#'c=WIaTe2FatN>8!'aQ7`ZpR5Wh<jbVX(8tiNBmugVA-$a(-b%
%B+(J"bmE2+WboDj(K)_4#JU9+^()uGptNjpZlp%1W.98Y_mLI[X`:7ic2EAgIi#YP2=_0Upd1^>R!&[JBQk7a/&CCa8R<^hUBop8
%f`q6uLkimSiEHDK3"F`iN]W'N^$$>@T(T;&WsOCI0"Ndu4&9DXe;UH_ORF+1B-5&9\AF*@OMKh3LHomo&#b^Y"uW7E_(;#sr5]:C
%Qm.>;BL&OX0/)NKK?TB,@<m'JIMqR;&b@BPK)9SpIlO]hpRW!b;QC(WnU*_GGr)%R@'q78MSd`G/0s5("HYNUTNl^`pm17XLRE=Z
%Wprh$T%kbMjV2tNA5S0;Mj(AfEh`1]VGF2=\bCL;H*c;CmP1SI[ecX05LO)$-F%m1n@TP!Nrs_ER)S)R0Mg%*0#<?fAX$El6+PQ9
%WfdKW_mLo6$1#4/1^*d^f"<]"`5H.4aCg'/cjunk';ND`Le%E"d">H6k2HSf2Un,)OBab@b"&_(28o#;-JSUCN!LZ1:Lb?!5km]s
%Gd"d4ma?tZ3=Tn?jQqCh_SPcubs6;")WC1]WL3+V:`B$19,?.`+g?5F:/d6KE,<kR(?saTW!nk$6a%GrppoJA#.Z@JXK)AT%erBI
%V8$d6>*Q^(Jd/X=WI)&MJ[I`$QYM#49i)8K1e)O[g`MLK+HE3X#S:(;691*IAVNY#W^aBrV$R>`jD:[cnTGgI#Y-9nHh(^4^.KDG
%QtGGBJ06XT8YElV&UA+H%_b`4$m45FT!i&CIsBt5/K%=I&cIXWQ/]$T4_IJg8+[rIQe=4bntXbMRO0>!<n_8rPo%5UcZuAI/pA-f
%AQ/hpefGmE\4;L04`Q$4Dbjt3`@VVU,c0e<*T+%0V62s<Of^+aNte^d,>VTmPW&FEn'bn)]lRrE]f6&LLLCsd#-cf*Q@ZEQ]snqd
%+63]"THOf7mrK%k0l;*BYhqs27`cV!oB<J.1OapJGB]IQ%TkbmgOgF8XQI%"C#)qVZ*)@uGr6sMH7X&/*'M*T/d_c`a3qun=V;>!
%<mCSAENcpM/!@DG]FS"@%M:4\FMrAV%N$NVoT",bfhV$>lVRjiCeeh&;7NQ8%3Z1ZL<X@tP<g)2UA?l2]l:&]mj:E-.i%0Sg]e_Y
%:q'V$AU%(<e,3gq/poC)XJaQO%DM#5<W"7X`N\B*3k1?6"(Oj@SN"aTAAEf';nDDenr3jq6o&,#`1q(!W?DdL+/UGm)Fma_9,n5N
%aH<o)\LC'E',f..N%>(!1(?;02PlE0?[q363u`pT+.SZh0!p1GO#C[f2itl>5s-Bl#TQAREL<YAm-kI;5)O*CSZL7;&Drd5*Z:\!
%15\I1Cg[>!;.E9sA9\I4U!+,SJf`Po2F(4<+m\2F5HUI7j/9^IlWS5nrn-BBCTg;jA5.]i1L&KdaidG6dBO"D6C*ZpDXo!831uQ7
%7,iZj@0/^1paCMSYlZ#4%G6au&Z]7PoN8Ej0EiUi"6\C:QQf80X\o6X?R(`:5O[(LXiF4`I71[>$_R(.$HLAiaLt1p=KjuFgcM<2
%`Vlbi%]NU%;WK_4%BbQFTO;?[g5MteQr.`d?/n%9-+Jfm7N/[47+=gZ2F-k&.dHjL5;BitoK:aGUfSYg4BKME9[4sF6N<X%X!NB\
%o90bb:q2=hpQYigioGQS(*kJ&LrZrO[U$OpPiLU5Y\CDY]p6LRJFGa37T^99,I0gr1%@_q`hWU(f84MlT\roWcc.JklO61I]jflM
%X?L3S49[8ZP\;1JV??k#9AC[Na:^dh]S]gKUOU;#OiAhbWBb#_XrT'`1%"h3$V`pY@B,\qX'.$7V8>K,eo1(]VLAOA4tpG3#/Z*o
%?9lekIMJu=a5Y3um(AYIO=[KS`n$!&:QA\'mK97sYDA]/_C]TR"lO.T[L$*Ea]MCF,p8OE8G8R;-DY&f36kcJ,D>$WdhgdJOUiE6
%R#l='f$(^r["7&re6TZ*P`a0)jZ_bp>X7FH?<XCc_uNA,Y_DPRjhRJ(U>\_m1H695n/B[p<`.mF(/B2h:iJ#s<ZoS[?q+\s3\M`g
%I=Q9qZHPt?U`oe7.<0VQOu"G;S%cJT+Z072AdDeA=6.m4pq-k$XcS5XA!;IuVRdo5.(?rg#C2gN`e[SW@a-_[(kZ,DYTnG>Vi3VF
%[1`2h5]_ec6HJDK;i1H:NDiOcT6<n:;igV&'T'nA!U3jC>\%c<BNWm*R_7T/ToE@=.FjB:#F.rXN[ouD0k1[)/NG&m+C;u<:dmhK
%S5K%GV!](a]kY_I`u>CAmL,\^$0e`e'F=F3@Aca(qI4T(-Ph")$dUsjfFpIr'dWjb+b7dY_+:]g]u"J*#3@VR#/5-\9^"oCKJm.*
%Wj#njA(uO:h*X"WlB&P\21(R5]quT6*_BI4(A5B/\R0Er3ALG@P!*:mm@CfY9f<btUhS!h7nkn3&X\[18+J$HcB8`rLm^k>P1K1`
%i2hmR/@:HPOXjom-ZS`<%9r@;P\k.LB/^kWQp98SP#\R)^Y-EHR=eJ5/so?mT7W2uj].^8!1#Y@/lh"*<"*:$`W1]:l@LmVQKD\0
%+0KJ3]dKPq-g\]<3QiutD\_>Y),`jX"<R3(QsDN=GXQ1HcS*bdUsEQS]Gf0?ZR@d@'NE0.$E>9b1PC^+589Yp(1)p)SZ*aT8BTQZ
%PiQ8k5`hB+Wl*+B,mQ"$.!:&NoGS2Nj.7Dc%9#1K(>3a6fh&'a!/=TGJb78Re>q^]"<b8jWGk<_l&/E)7fYrW^@Gf:<4@B7KFta@
%'1a-U1rMSJ#>>4S'%;Rl[A2RnXT_X@D)-C:?3bU>D;tU`7`:o1M`@NK3ME\nUJk71@G;EV^b]!WRE-E\#":^_8)3W:P8Sfd=*PZ<
%Y-MK2+Qk+4HPh"\In:ae!)=d*_m[,V6H<8l\fn?[O#o,(!>b+W,)^[_+cF6B8so7%GhI5Wi+A=>S0l<b*p+40$VOc.V[;TbFIN5:
%&P6tPG=s#l`/^rom'tSS3S=Q=dcr6cA`Y!USJo;Do1K."9NFH&nnoL>:dC3f(#LMmki=,l!^0RX&6Y=a[G*GaGCf7r-61DaWC7$'
%l<cfB*V:d\JEuOK+mC1T'4Eo+\3sLbLjO[433f7a]2W<d:+igp#)N#k87brD_dFHb&[<sFMHR'\6_KB$]HO;+n1G-9V2NO6?t)(+
%[AoC77m'ru39A6l=%\p9*6Fir%L^;`Up?=)#kiT8U:-_lN7Y>UMc#f30\G%g8)\n>R%FMuHhISVUVtf4+/"QG&>'mY"tTL6DR58/
%EUBfF)^9Vt)fK/c)jh`"_J80G%ZqHh>L[aqR>Y^>;oW?93[P8D4l%fM&\J/Yhn()nPE2mW/ur9Zn?6drJiH3OAX/GR=$\VD]I7$?
%Z`Gs8_1Vcg_caWrZATHQ2o9m$Zul@Enr]6uOW]FP_'PCY=b*gAEJo]R*4isWd,KimbKt(YAggYj*uQo5qenU*M/rTiMrnU-7[5'u
%Xk-''@>#)VY]Y>j-k1;_;ffk7dI:9!D9UW=G72p0JKg[;HlV)SF:)\@l\A9i3sX%-eUra>AJoRs+NEbMc#a=Mn)J;F(6<#EF:-)k
%/\kEjS:fu&PfM/h2p`uRlQQ."be23,mep7N60J,m.#[CM61_hR'd>TQq)ZfXjETYgBO5mcN`WoN:&ti/G"]@PcM'K*q$cpS\d@k"
%eo5bMJED8*!M[cHd4%=m)T,:r]O.nA\K/jKkS-jtYkSE5hM&/ZTti7%^7KSWFh\6OpEM?Bos`<t+D.^lXZ&Q;4so?K5F,m-.3QD^
%O6%^%hY1,QEbq$JcIX(@gj0X(YOe45>],*1V\R;KZl=f1:H?T]<]K-g@=?!%e-[n.<Ji$s^9k6!b0lm]>gH923C<Y9;1+)$`8&U1
%,sV_TpsO[)7r11GqgZ>0N`lJX\VA;4-e$t$o?k.(lhOl)jaTSJE)B_h)"!G%%bAiO&H*iWiUU+8k&)W'SI)mX`BX)+>\80.j0Tu"
%^<p3*,YQIN:llX-.d)`2\YN%9$,&(l;R^@86X:CmP&&Zme@0uN8psaUU:s'ET/cLP*B>+ka"Ul92OJgVk0-Vkq)D@"f^-VGE$);9
%d.+O]O2O&44u"0X:YT6:fQ#pqYJ\<'9,W($hX48-,gHpl4Z6j5,5M+`RAtJ`-A.j&)l.7#6]l0K[KgeW+WiDG8XkO%b-+PS9>ba=
%Vic^^=ZAIe'WVe[46s@=3'UjcGP/A9ecLnedl,Nr-h#W1?sPuUcXYOM@,DYZjA,#&hXO<)_=A)Hg6;O1kaR6Egj:(9@r<2r:t:,I
%c)6#g.(DZ=Jki@D\A#:gH=]9rrFVQi):Aq&1s2IY"cTg^.&L+A;5Sg&61Y[Uh"B8ONI%<g22<,7cll&W=JI(K9+'\uNA@Ht!7&AR
%<dWo#@Bh4MT`T._oCbK:Ck7!kl8]HO:^5`4?qMAa@Z!#M2642L2a:_A]DgBX:J]Q>&>_UW5-[<1#*CHaDtM/EWWEKJY@XUZ#mZlU
%5qr_#>Cq)YVKi_G-*59K!M`C'*95q4)HpUm1tlIi[ll^c?k[bWWCreRXA1`F"WanuM:JTh8YLKR18npfQ3^rPVpUZdAVZs$e;9Oh
%eX[l$A0@2Q9PF\c$>%SX!_1m?'N;*\-r[nNT_XBemeU^c7QjnLLo.[LQ:?kgZ/%U2H+QRH#:c%$]:GZqSG7/Ip^3$?fI&=+B?pg@
%:\C66;(.'7)DIus4di,bI584bSsu?+Ug8K9d\eJY;[M5$9:]1UYVJ7o@uem.WW?35m__doYV[FlM<smA9?tF=Fb,f8I(mC\2A)][
%"s"UiU^]IA`>XFcp"LOX+0g[7qV%cB:KFDtUdLG;nJ14>i'=<U65`TV+?5moQ$-ojS'8S5oa05V@:t+=0O`YJFWV'%oZ<an!K=CZ
%-DoFp:UY_0RVu#:f:TX]l,hY$1'@D&CQlf$0(k=`Z`*/QkKS*L9nLE:7fM?7"c%^eGDV6.q4X+De]s#qO_rK?"/`H!-Djn?:SrTq
%KC^=B\Eg>()YI'ho#+G]+\SS4UB4JrpHs\]U8e=*e-Unn)F_IK`n6!Nf-j>aoG2T\@cNhUW!O;hRc#%_7b#ct;l3D>;n;;3q$!7t
%X&!$doON+8764tY'<;cV\(ufpDtg2F!"LpJ?,TZ7pkGNu%dJ^MT"[j&i#p6GS]UA(`$gj9LC+l46W$O^7\`ZU`e3CuL:HQQ>oNBH
%NPZ9Sk`DW<XARW%fAe$lB2R31N;ZjuV^U1V'oiWTH(MH;?/Qn15"=,%k<t7q)0F>X.;e:j/CisJWSR:'r.H6\qHK:M4^"CrS9e<&
%V!>mrAE6+4c_@E?V93r57SO55P<+3?-d;/2<-Jj^.<VrQUHsi&)0BPBOZ)jM'PeE*e8K\QI`*T$l>)_Q4^"J!OUbM4`>XGIi4ECZ
%m1*))i#@sI:/,]bU(<"f?be3gfr$GV4d:iGn6*]nP<js*(hl?39X.'Z9`;t`o,EFkX&!$ToOMeg?+ON['5LOe5saq+iA7EI5``E>
%@](P4M4[QQg?B7tH1LA`9Ff%M;pL4:FY`0X!1U3d,c4D59r<*gKC]b2[-MX9qXe<H_I4qXOJPa!JA^f6L9'^SfFAM,dhk:,&uN/3
%r9Ff?\O-Hoq!s;['$a?!i@b#[Gi(e:rnVpVeipOMO6pT5`tio#kA_HoE!Sr+2]hohp9@%+eG'XD@e7FpYblO#/W\qt7OE6;Xbg59
%RM*onHh3Qim_D7iMmjI?/`(dp]G5E*jH[IpSQmqYkH0SEL7/b#dJNN9L_l\M^U8<%n^b&*Xb>/s69XfRY(uE/i%5hr1=VP-No$D;
%E-!;mD-OZ\G\cj#oAD2?cctXSms$AC%,N^iZLQL6/ON5=kNMkiM[u0!Fn+&BXi4MjKXY^/[!Hi'.ScXP#A;/OQCp,:Vr7MFX'd_b
%m>J=eBe@bZ-D]0ADN#&1f"u8YeK%m@K3Ekq'$eo%o2[H0\5MmU[2*O@'@t%g<aHiOB<BIge/V"p!t@>[pWq7aEu&Z:nR8]R@]dUQ
%c\8cS][Ro3'8_)fER"ebae4rnVM'$_m_"7u\pPgliiU1(Mmo8_DhX(\>n<@*&9++X4a9U([1"o=S>5iA/aSA_APFF&hHISb>^.d0
%9AF\TD7gSk0i1)Z9*Vd42'ncfpZF-p4ic+4MmjI?/`(dp]ToJYn\A>-?[D>L?cet,T>pb@f_l[<n^Y2=^(>-9emb`"=<A&`(#3OE
%%^Utb`(Rm@g-'(CeFM(QE/reI[r@-i>rV($g01lV>\L/u>V:JI[4:T,4"N4ZTV\R^r],:Sd_]-%-*M%$`EJ2-SdT>mDIQ\-dteJ-
%b-g7di^>@c9aU"HrHSc`K&l$1/`'[Doiuab*c0jXgkD73gf`E!XeG4j2sq=!p$KTm8lUK8DF3K@aS/:-CZ/P:8'"aqY\?I3mSJ[K
%S9gI]f-]Gr2%o>B`[AcCD'd.:hqapn+ti#$mbL1HG&]V+qq\A;+[6Fpjbp/umtUiG1Z!'Fr3"BGqUr(M_s_Q"HZcm.%\@HeHlW'?
%NI3ATiF4Gt=piJ;er]Esd6@is6;QsoG@"04g2Nb^QlPV.fRBL;L%Mu&Img7n)kSct;#"6Ini]]/P__;sE^3R:ps)g74#C;Bi'StG
%l>^hB%BPb3RY&"NEaJH\=q$`)`74N`,0'%jLJ\MZ=n<]8\AERlDJA__26k+Mfn*,qn)?l'SE7*S\ii)X@Y\j'[RWgq>BKSY*Z[DQ
%6apCYU"bCUTrjEI_ZmFdW;0bPR[,\,Bg[g(ei'Jk(Q6Q[1oT[)M:tg8:cj94F[5<%K9Fnbhf-2)4_feI],'4f3[L;k7`*chDAf)B
%G1VHAj!SS+IS)RiNJ)_2UC[&%g7C%L0Kio6T;"fl^;)Hgp''/YA#`slN=gSr)@9d>oZ@k]:oi,FgWiZsmFQB^$60NGFsk5VN@E3c
%NiCe_C*`-R**p93d.3j/L1*Cnq@ke"^>9H].F=_gaJ>hWe;hsm\Q8s';/1d:AhjOYnRsCrMXF!6&Rl!).F=#9,NKQHKB?A*Z+qC/
%)#J'8AtmlA9aU"HSnY:bSHW1A4WcV]'g3k5UPAo!\4!m-d2$CH]d[op41i3u3(Im%\5S<"I'$RGFQXc_'$eo'.(,*T`AaNNi_O[Z
%Bl"F-d=^GJa*$J1$a_0;d@JId8N95"KWk-A$]QZ_?;=e]*ZsTPM"QP#KQGX6pj2E.Qi`8JA."j*'g3k5U\b+p%qQ))rg#!PU=KF8
%'$ellJ]8:k"^7g@5&O1IH:g.e%gBC`WI-#JY!D%CR0"bIoC4^FkNL.lXi6p,Xi6prc;E@BS>1E`[>u9!`eZN:bsZd4jsK%,4npkr
%ET=GEdDfskkg!bq,b1V7YAJTfK*c`*m]=ASj9BAtdVHBki,AV1k=9lU5D-_tYQs3sN!u)8!%5tT"CLR_J+5BD7a:hnkU,5:#I!:"
%[N2LJg&:MT\CDhd+5+7fnn32(hTB^6,j@,5bgLBC`\0;u`XAq)TC$2L.m'hVpNt1@TOB5>r],:CcGDDR%?%S/Be@bZ/u7%RV/du$
%3/`6?;"C3a$u":-^4$FGS$?_KZ2ACHd:02r=O2Z*Ydu.$(jD2ZI(rKSflrrr_9#IGrH%VVUucSY7d@J6j=J__UpWbZ@jA,8.!5$&
%:KfbaW]P0["V!V_pWq66P?)E4daiO^`?MEQ>0hl/%Q?HnHQHq^C!DZ@WO*u5SZH4!o]7,gQVqT>q=c&k*1[`1Q^1E1/`1?kfIqcp
%HG)/Z+>4X[EaIUhHJgC9i7!g2/8?$E82s-.c<Eiaa0=@&`ES80SdTH[NLmI@n.nH=^)^@sU5#A#KQHeR]N*^_f:1ML(2ke]>.jNj
%nJ5$eWQ2[7/Pa<@,O8HR16e&CNo$873(NH6g@)_"C[otsi@SThEONfW[k][73O4Z6%7;!>kNL`I$YfH:f7Jgt>Dot^$#eWpe&QE!
%55R^9I\8?<BP82`Hp/h:cVYoqV<JeUIH!(!Tc!=^#rdd^hE+GMH#"bf/T4A51=VP-No$D;<gnL-f&Egp`EP-hDL$"Ej=P:Ee2#O<
%E/reI[oSrHn^c^%B>n(%SSi\q,ifF#(t:7(O`6?;S[VXgIdu"KX_5XX1S&E/CF8*oDb\_:e<Fp4hOh8XRXXeXiiQk4>IW)RR2i*f
%qB8Qtd$K+/j)!Cf8BB[RVhC>4?SqJUdhm,/q/M2L0,An&QJU'@bf<rA18l?E,N0WU4)M)NrM$D_>L/28Ahr2jekF+gg+oTM-mR[j
%]fU)5,lOI>79e)p[S/=0d$Den)q)"T,Ub2%*5+:JXW7;6X[QI?Mmd4Ih9skJ``q.PW$*Q6i>fNmD64NNU9-jgc\])JBBUiUs,ZQ/
%Tc`LA4dn"&\mmAl#!+'3%/jY?:S#Hs]p//,Mn3$W4YlYq[Uq/Kd[!0.5oC!lkhTrgA`sqI/_YMOZo'Z(QF:BXhU7]U%7(j<kNL`9
%CLu]GD(XIf::+Rfl%ZW?0&D\M741B($0UNcBkq;D(MtbXH=!s91[146AhMrgQ9bsG)%#Kih.^Y9kSJ(fg3QN$AM`t.\4%nDXA.gV
%LAj6E=SC]to^h'h/>YMVO6g,Sr$06Q5Nlb7rr2F&hXEepcQE2dfrnkAQW>mS>^#WME(piTB6=(b>TX?qEo\60dBuVjRFf3N98bAa
%6ru#rKd70i?Tg^:;LHj!Z]-%+!j<g$Q>uA7/f,E8?3D#n1)G?qf$&&J&L7n!1np``Pbb/<OSm"3]SZg5po`a!;&?k`EFjnJh02gE
%>ak9\C3:sr?,FQXYu4&gQBSn596&AFa5p@sp$@SQM7(B!O=,l?],NEq\QLEB\*kFg/YQSme[d9jI<u6I4n*]Pr+9i6ckCPn?JaHV
%rBaf&,7Be4p@:Pmj#T,@72N^p4]>e=0VK5-U[^M?p#;MmW(X&mGB)W*-rSHQ3TWMSlnUaA]cDHF^eNEEng0f[ZkL]C=!OldX,LXa
%l-P%`9i1X4A:M^dKTYjG'49-Rbt,Wcj<VfUqSK/N;+'H0*djk_^q84@V)B5`_7*(US0#.cot>@-U!Z+uI$o;4gdH:[QGZPW40!?J
%]ae_nOHP1aDP<b%_sY@pBs_p4d[);AO)MOq\EgAT_,Y4C9[3!MA5E`@hXF4rd<4lkd1E%tiWo/L:*Yc_!)Vnp&:"MpKZ^]r&#KE'
%TU!MANWVoh?,fE#j7RTcU$=utP<s5".QU]9p8!'6d"6tHX5Ydt#3,fY.RU.B#_g3Nj='Id)ShiX*N0%=E#EH@efK%U"7"CB!X6VO
%8+"ir2IRiT&rHQR"&'f\-%mG(a%N/s&j$iG87qgshT8`".3imAdX^tlZTtf%\6']_j/LFq>Q>Ho7\`UAWKAp2A*1Q]$C$.G";,JR
%JZ(=u>*553=pRekA5_MQE/a7U#O2pZ&4;EbU!_R$NN3^.r.<`e#C;XFB4[sV:BW2WZ(o3PjB\,E"Z1,\;hO]u%sq*)PD10=T>]!B
%&r&gk-*=CR8g=YU*2mj^#s.cP%5dcD:ZSLtfLsmPo8t*@K3a745_k(bUB-=mm$aB<<i8!4`l!qo`pULP9C,9CO*>*P$p2-q7%33k
%a%U!(^,uOWlHCa7LkB1SRTdf!bFRiB]!A1KIQ(;jeqn'C;d6U?CMEi"<;U&LC.@KMTYV2aUGT\6$3]4]WCVN>k<cbXOT=BnRY!:[
%jDHC,Y('br=0TmHlh!Ue]Kf*@$3hIJke[';#-thqg;slX9=M6o<-aG.-<_:emae3AHe*9U$Ep^%X,%V"$Y&L?W&9P>?0p4#p'&,B
%HbVP8dJ"<bXuKq1)>B1J&oi3lOaG_MTM_u"mag*QT-VeQ?MNX&,7RIn^6N1*\\jDVH9i$sY@Ij]#QOM,T>,jR\$uD:m16Bc!;jh?
%oB<HW!hpqr:'QqCO=X^2j<Pt;n4Jc0&hQD4>M.#0(Y5?J,82>J"6B#qE<9m+Ko-U/-;ts65%jR$aU'Q9UCMI#]h<BH43&1K<QTN@
%G=h8C$HU'6+a4'<Be*JJ<`7Za*P..L?S\9b=NNhU%lf.,*iDd4!*+VE0\`\KIZ\lAn=^i67Lh4liYdm9`J;IK'hkk"=!.>9]kRAe
%2fJ]dfC,>$g,kR"J_(7@)f",+^]2JYs7+"-ms_c,..*4*Ie+ra*18DLY4Ci+<Z;r$8d_c=l'$HGDWG_7.+%9AT)I\D/__<dj4[Pc
%)ogSQ4QibhIG'WQIP-UB`r)iXT)Y<?.^7nM*]n8lUgQnPU6Pcgc_2IA?kj/p+Es$>86-@$"EH*9Z-0^8#'rYs?C]&,5"[#kQJQb'
%j@LX[`O%h-(IoM^BbO@>VgoWG;LI%g(*+a:c`o"Dl%'mILFHhCD'C/HrsteLEIE^=dfDadCWmc\^./K#3eFfU6)F1i-K9?h`U_h-
%l?>;=hE4k2ZBnBCJ:A3DkdbfkBL4GK-5afYmsu"^EsONN#QKo&3_#hF`)e=Gr7]'um.PGC:8OgGP1#l?bm"W5?V>4p>PEln$smp%
%g5Om(>>S=`@n2t+Zuj6qh'(U+7WV*H'Z@)O$TjQ.U:Sh]_20gc<Zg>*L=j!b),dN1T=]JJnskdiQ]=%kit^jni\`;TYlT86qt+#Y
%fnO<3T]RJJ%H><lUk(77F"Q1/"m=7ZEsO'IQbf@jjDdRn4SJVJ81N"ZJFS1NL`(&!_$VA-M,n<>-=:?2E9n7;-"sMr?6Q$,':KG$
%/'=NA.G<Q;l(AnR5i4E17_o(@QfB.\L_!s2fs,OU*?RNP73r3e.%#l_8moli56b._fSS&O@bV6DM@r4<$@9c,Kd+^\b#jc0i=l]S
%+NW(YKEeNM8=d<9Zr$gee;dNc/$(+2+:r+H,=M"k!W?:u>6+;!QB9HI:F##&Ul,7f]Ij;;"sB^=R-A1g46_c,Wu*%&<Q"^PNTrN3
%:\4s4^-iRL&d)!"CmE&eGcW+P+it=RM^*%PV,>(:6@LKJ,\fm3[*E037i)?p%LH_7>@\\7&3O[a.m7_&0OQ&)6Y[O3aohfd?0NRX
%j]kku;JFj4\.8;A`,uAX#:c>oUa&d8+2*pb#r(p8&>W2s3=/;t'tX\='Y9UGaXpE-;S=P67C`-0%fU>93JFdk$(3AFi/2e1DJSO"
%)JM_bZ^2ss9#!pG&h@AtTh*)4U00bp*B<3_ZpE4D<IdEqTNNX[7aH'heh6I/K^caT`$YIbKQ;B^NnX!;Ep>Dd@T3T6O?/?j+sW6r
%8$itEEiI>Bqc3*T"RcAu0+4DN<;<)G`r[I8MM.Bb?DEBMB%J>N-RXNB%k_Jf7!Vf-(L<-!JN>VK5.gng[O!daai%@:6iiS3ZfVb3
%a1LWV@Z7*0A!F@@ED)Jk3[EqGL]MKmcmm`@a:-=I&EG$u;$;$^[E4e5iSKGK2G#ir,cq\m%KcHLCef=sP+9N-6Q&H?E`K+=ko]`W
%+:o"blVSpRlH^*i&l`k<]f1Q>-7BVs'4+2X8oCaTk8bVH>Obu_mK\Fa1lckT,#WY__4<;N"9_[?l:[_p.,/)U<;7,X1UY/bbu*B2
%4[n7aiCgF)$;1^OB$SlAV'(-'SaB>)ZmS_\-?U99'*Ln.&Ik^)$:np`aUGK"Q.,]:l>nS(cd%-g*'Y!6iD&Q1_#\s/.$^Mo-+T*Y
%A<MPh3fU+t8;u@88_-c]PFcM(kt>7.Y:J[E8JO#j3Mus:@7gf8f/ZS=!bt.`lHil++27Y`=f3Saq+#"e56(*?^O>^_+-'q3GhVCh
%^]!TfX#KL6FX";])"YF=:[dgGr6TA>+7`.rr@8^K["A9E.eo'!6G6/hAe']W+ZX.qS*]i7N:(2=;"*/3UIOb@DI,-j5tS$L(_/c[
%-Am19YUu9S'SsBr7kI9k_^079oD"Lk@O?md]@.(mLiDJC.E[m3fo2^UG]K`5]4PS#1rdY.P<e2_#2-:TYqK^TP_>TK3a\I'n[=T7
%3G2ju\[,(/OSpX9"g?C.^$*B_GqjcDT+:'(ST'dc)0UbgKr<NN'Wkh+]M8du`*pZ>6ord(J!=e55+8R%)/`6C!.:85PY!DJ3)g.$
%JbaG@h9f!5,DqQ;.e>IN$&U$IZG[26n`X'BALAO)_.=u,1W&2="QH]U\@IJ-2\S4.S2pC11\'\Vn8k(UpK9[+C"2GW.[!T4^l:iF
%W(Km;5Wsj<^m@-EqAfJu5RNPkV`mmB:E^Vo-=5n$1#7Q)38R!(J6AjME)u6N+e&lqB=)nH9#Q[GrD"9E23qa;YS`7=<-sjYF#k,g
%#HLT";W(72Y3a!i&X48"^D8A&3.M]qd-n\ekc:_tS;A9)jjFN=7?pd5mi]59nSahgMW(qXMsfZ@4bZ-4gF*V/%rBi/BYJ.NHVl32
%#o2+<(CeQ5&hb3`<AFXHC8LdB+_=(=1^)a959ROX&OCm3A3R]@Gc^/Q/]mP.5"fFZP=('02Rmd'AV\KPg:%AK$P]6XNP>S5,ranN
%)R<3S>qnmF$sBVIA4dkS^js@R4A@>m:ak0pljR;J+tJEo#X3i(L_g3a@oNM[:h(,0e2W+(PE#Jd([.@$QS:?0pJn9dA34H>12@A-
%7q/2bf2W_5kaC7/+n79r_9O)jqM"e("X<Tinc0''VAPUo(+u<?4s5p8Ob\ea.4$3)7S[1.qBn*#kJjLA)N>:,&i9t$g[nIiZ#eCi
%#d:KX;:u)o]T<BA\odm\_Ls5d"n(Z6Nbk6VgjR/Hb9*G3O(Q.n^Eqh0J'%``jYq[8q<IEUIJ;_)!PeX4X$;+,TAR?Y$[H*OrT__d
%^\Zik*aX9d%>a_Y^X>>0r;!t.^Am0Hn%O,CrdVZ\59P2bHf<SkrpntGq6OH,58GH_"T~>
%AI9_PrivateDataEnd
